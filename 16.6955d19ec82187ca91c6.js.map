{"version":3,"sources":["./src/app/shared/translations.ts","./src/app/timesheet-modules/timesheet-admin/component-state-reducers.ts","./src/app/timesheet-modules/timesheet-admin/update-statuses/update-statuses-state-command.interface.ts","./src/app/timesheet-modules/timesheet-admin/timesheet-admin.facade.ts","./src/app/timesheet-modules/timesheet-admin/timesheet-admin-list/timesheet-admin-list-view/timesheet-admin-list-view.component.html","./src/app/timesheet-modules/timesheet-admin/timesheet-admin-list/timesheet-admin-list-view/timesheet-admin-list-view.component.ts","./src/app/timesheet-modules/timesheet-admin/timesheet-admin-list/timesheet-admin-list.component.html","./src/app/timesheet-modules/timesheet-admin/timesheet-admin-list/timesheet-admin-list.component.ts","./src/app/timesheet-modules/timesheet-admin/timesheet-admin-user-list/timesheet-admin-user-list-providers.const.ts","./src/app/timesheet-modules/timesheet-admin/timesheet-admin-user-list/timesheet-admin-user-list.component.html","./src/app/timesheet-modules/timesheet-admin/timesheet-admin-user-list/timesheet-admin-user-list.component.ts","./src/app/timesheet-modules/timesheet-admin/components/swipe-card/swipe-card.component.ts","./src/app/timesheet-modules/timesheet-admin/components/swipe-card/swipe-card.component.html","./src/app/timesheet-modules/shared-timesheet/components/timesheet-summary-card-content/timesheet-summary-card-content.component.html","./src/app/timesheet-modules/shared-timesheet/components/timesheet-summary-card-content/timesheet-summary-card-content.component.ts","./src/app/timesheet-modules/timesheet-admin/timesheet-admin-week-list/timesheet-admin-week-list-view/timesheet-admin-week-list-view.component.html","./src/app/timesheet-modules/timesheet-admin/timesheet-admin-week-list/timesheet-admin-week-list-view/timesheet-admin-week-list-view.component.ts","./src/app/timesheet-modules/timesheet-admin/timesheet-admin-week-list/timesheet-admin-week-list.component.html","./src/app/timesheet-modules/timesheet-admin/timesheet-admin-week-list/timesheet-admin-week-list.component.ts","./src/app/timesheet-modules/timesheet-admin/timesheet-admin-routing.module.ts","./src/app/timesheet-modules/timesheet-admin/update-statuses/update-statuses.http.effect.ts","./src/app/timesheet-modules/timesheet-admin/update-statuses/update-statuses.reducer.ts","./src/app/timesheet-modules/timesheet-admin/timesheet-admin.module.ts","./src/app/model/state/delete-model/delete-model.http.effect.ts","./src/app/model/state/delete-model/delete-model.reducer.ts","./src/app/model/helpers/delete-model-with-children.helper.ts","./src/app/model/state/mail-models/mail-api-url.map.ts","./src/app/model/state/mail-models/mail-models.http.effect.ts","./src/app/model/state/save-model-file/save-model-file.http.effect.ts","./src/app/model/state/save-model-file/save-model-file.reducer.ts","./src/app/model/state/providers.const.ts","./src/app/shared-app/helpers/array/find.helper.ts","./src/app/model/helpers/get-with-relations.config.ts","./src/app/model/state/save-model/save-model-action.const.ts","./src/app/model/state/save-model/save-model.http.effect.ts","./src/app/model/state/save-model-file/save-model-file-action.const.ts","./src/app/model/state/delete-model/delete-model-action.const.ts","./src/app/model/state/mail-models/mail-models-state-command.interface.ts","./src/app/shared-app/helpers/array/add.helper.ts","./src/app/model/state/save-model/save-model.reducer.ts","./src/app/model/helpers/modify-model-with-foreigns.helper.ts","./src/app/shared-app/helpers/array/update.helper.ts"],"names":["translations","id","name","phonenumber","address","user","title","content","createdat","createdby","filename","description","finished","username","firstname","lastname","email","role","none","year","month","weeknr","week","date","day","fullname","confirmedhours","openhours","password","status","starttime","endtime","totalhours","comment","timesheet","timesheetid","timesheets","mission","missionid","missions","employer","employerid","employers","documenttype","documenttypeid","documenttypes","missiondocument","missiondocumentid","missiondocuments","missionnote","missionnoteId","missionnotes","missiontype","missiontypeid","missiontypes","inboundemailpassword","inboundemailpasswordid","inboundemailpasswords","showall","currentweek","currentmonth","currentyear","custommonth","custom","open","confirmed","SetTimesheetCriteriaActionId","SetTimesheetCriteriaReducer","actionId","reducerFn","state","action","weekCriteria","weekNr","timesheetCriteria","SetSelectedWeekActionId","SetSelectedWeekReducer","selectedWeekNr","UpdateStatusesActionId","summaryAggregator","store","componentStore","users$","this","selectProperty$","selectedWeekNr$","weekCriteria$","weekCriteriaFormState$","pipe","map","x","options","users","_weeklySummaries$","combineLatest","groupByType","Week","records","weeklySummaries$","selectedWeekTimesheets$","summaries","summary","fullName","updateCriteria","dispatch","updateWeekNr","parseInt","subscribe","selectProperty","updateStatuses","ids","length","TimesheetAdminFacade","timesheetStatusToggled","toggleTimesheetStatus","emit","trackById","TimesheetAdminListViewComponent","loadingService","facade","router","route","formService","loading$","queryLoading$","timesheets$","navConfig$","getNavConfig","Confirmed","Open","openWeekFilter","formConfig","initialValue","formState","navConfig","submitCallback","val","onBack","navigate","relativeTo","snapshot","params","subTitle","userName","backFn","backFnParams","buttons","icon","color","callback","TimesheetAdminListComponent","TimesheetAdminUserListProviders","provide","useValue","multi","goToWeekList","criteria","JSON","stringify","Date","getFullYear","TimesheetAdminUserListComponent","isClosed","navDisabled","handleSwipeBtnClick","e","preventDefault","lockPosition","setTimeout","handleFn","swipeButton","handleNavClick","navButton","hideSwipeAction","fn","parameters","SwipeCardComponent","marginLeft","TimesheetSummaryCardContentComponent","timesheetsConfirmed","weekSelected","trackByWeek","index","changeTimesheetStatuses","selectWeek","TimesheetAdminWeekListViewComponent","routes","path","component","children","deviceInfoService","summaries$","sort","a","b","isXs$","confirmTimesheets","i","push","disabledControls","noRenderDisabledControls","parse","TimesheetAdminWeekListComponent","data","child","TimesheetAdminRoutingModule","forChild","handle$","actions$","propagate","request","createHttpRequest","stateSnapshot","command","method","body","apiUrl","cancelMessage","UpdateStatusesHttpEffect","UpdateStatusesReducer","stateProperties","noDeepCloneState","updatedTimesheets","TimesheetAdminModule","useClass","modelConfig","get","stateProp","console","error","createApiUrl","createHttpBody","createHttpMethod","createCancelMessage","entityWord","foreignProp","toLowerCase","DeleteModelHttpEffect","DeleteModelReducer","cfg","filterFactory","key","undefined","modelCfg","newState","identifier","childProp","foreignKey","_deleteModelWithChildren","stateProps","concat","MailApiUrlMap","missionImages","missionDocuments","apiService","mergeMap","post","toEmail","MailModelsHttpEffect","FormData","file","fileWrapper","modifiedFile","append","entity","SaveModelFileHttpEffect","SaveModelFileReducer","fileName","temp_localFileUrl","URL","createObjectURL","SaveModelProviders","SaveModelFileProviders","DeleteModelProviders","MailModelsProviders","_find","array","value","obj","modelProp","foreigns","propConfig","fkProps","includedForeignProps","getProps","childProps","includedChildProps","includedProps","includes","props","included","propMap","include","SaveModelActionId","apiUrlOverride","saveAction","displayProp","SaveModelHttpEffect","SaveModelFileActionId","DeleteModelActionId","MailModelsActionId","_add","arr","slice","unshift","SaveModelReducer","updatedAt","getTime","entityFn","propCfg","fkProp","fkPropConfig","foreignEntity","foreignEntityId","_modifyModelWithForeigns","entities","updatedObj","Object","assign","_update","fkCfg"],"mappings":"8FAAA,kCAAO,IAAMA,EAA0C,CACrDC,GAAI,KACJC,KAAM,OACNC,YAAa,gBACbC,QAAS,UACTC,KAAM,SACNC,MAAO,SACPC,QAAS,UACTC,UAAW,YACXC,UAAW,eACXC,SAAU,QACVC,YAAa,cACbC,SAAU,SACVC,SAAU,aACVC,UAAW,UACXC,SAAU,YACVC,MAAO,QACPC,KAAM,QACNC,KAAM,QACNC,KAAM,QACNC,MAAO,WACPC,OAAQ,MACRC,KAAM,MACNC,KAAM,OACNC,IAAK,MACLC,SAAU,OACVC,eAAgB,iBAChBC,UAAW,gBACXC,SAAU,UACVC,OAAQ,SACRC,UAAW,WACXC,QAAS,UACTC,WAAY,QACZC,QAAS,YAETC,UAAW,OACXC,YAAa,OACbC,WAAY,QAEZC,QAAS,UACTC,UAAW,UACXC,SAAU,UAEVC,SAAU,gBACVC,WAAY,gBACZC,UAAW,iBAEXC,aAAc,eACdC,eAAgB,eAChBC,cAAe,gBAEfC,gBAAiB,WACjBC,kBAAmB,WACnBC,iBAAkB,aAElBC,YAAa,QACbC,cAAe,QACfC,aAAc,UAEdC,YAAa,eACbC,cAAe,eACfC,aAAc,gBAEdC,qBAAsB,eACtBC,uBAAwB,eACxBC,sBAAuB,eAEvBC,QAAS,UACTC,YAAa,aACbC,aAAc,iBACdC,YAAa,UACbC,YAAa,gBACbC,OAAQ,WAERC,KAAM,UACNC,UAAW,Y,qVCtEAC,EAA+B,yBAI/BC,EAA4C,CACrDC,SAAUF,EACVG,UAAW,SAACC,EAAmBC,GAE3B,cADOA,EAAOC,aAAaC,OACpB,CACHC,kBAAmB,IAAI,IAA+BH,EAAOC,cAC7DA,aAAcD,EAAOC,gBAKpBG,EAA0B,oBAI1BC,EAAuC,CAChDR,SAAUO,EACVN,UAAW,SAACC,EAAmBC,GAC3B,MAAO,CAACM,eAAgBN,EAAOE,UCxB1BK,EAAyB,kB,oCCkBtC,aAmCI,WACYC,EACAC,EACAC,GAHZ,WACY,KAAAF,oBACA,KAAAC,QACA,KAAAC,iBAnCZ,KAAAC,OAASC,KAAKH,MAAMI,gBAAwB,SAG5C,KAAAC,gBAAkBF,KAAKF,eAAeG,gBAAwB,kBAG9D,KAAAE,cAAgBH,KAAKF,eAAeG,gBAA8B,gBAElE,KAAAG,uBACIJ,KAAKH,MAAMI,gBAAwB,SAASI,KAAK,OAAAC,EAAA,IAAI,SAAAC,GAAO,MAAO,CAAEC,QAAS,CAACC,MAAOF,QAElF,KAAAG,kBAAoD,OAAAC,EAAA,GAAc,CACtEX,KAAKH,MAAMI,gBAA6B,cACxCD,KAAKF,eAAeG,gBAAmC,uBACxDI,KACC,YAAc,KACd,OAAAC,EAAA,IAAI,SAAAC,GAAK,SAAKX,kBAAkBgB,YAAY,IAAcC,KAAMN,EAAEO,aAGtE,KAAAC,iBACI,OAAAJ,EAAA,GAAc,CAACX,KAAKU,kBAAmBV,KAAKD,SAASM,KACjD,OAAAC,EAAA,IAAI,SAAAC,GAAM,mBAA2BA,EAAE,GAAIA,EAAE,QAGrD,KAAAS,wBAAmD,OAAAL,EAAA,GAAc,CAC7DX,KAAKe,iBACLf,KAAKE,kBACNG,KAAK,OAAAC,EAAA,IAAI,SAAC,G,IAAA,mBAACW,EAAS,KAAE3B,EAAM,KACrB4B,EAAU,YAAMD,EAAW3B,EAAQ,UACzC,OAAO4B,aAAO,EAAPA,EAASjE,WAAWqD,KAAI,SAAAC,GAAO,OAAO,YAAP,eAAWA,GAAC,CAAEY,SAAUD,EAAQC,kBAY1E,KAAAC,eAAiB,SAAC/B,GACd,SAAKS,eAAeuB,SAAS,CAAEpC,SAAUF,EAA8BM,aAAY,KAEvF,KAAAiC,aAAe,SAAChC,GACZ,SAAKQ,eAAeuB,SAAS,CACzBpC,SAAUO,EACVF,OAA2B,iBAAXA,EAAuBA,EAASiC,SAASjC,MAV7DU,KAAKF,eAAeG,gBAAgB,qBAAqBuB,WAAU,SAAAjC,GAC/D,SAAKM,MAAMwB,SAAsC,CAACpC,SAAU,IAAyBM,kBAAiB,O,OApC9G,sBAAI,6BAAc,C,IAAlB,WAAsB,OAAOS,KAAKF,eAAe2B,eAAuB,mB,gCAGxE,sBAAI,2BAAY,C,IAAhB,WAAoB,OAAOzB,KAAKF,eAAe2B,eAA6B,iB,gCA6C5E,YAAAC,eAAA,SAAeC,EAAejF,GACT,GAAdiF,EAAIC,QACP5B,KAAKH,MAAMwB,SAAqC,CAC5CM,IAAG,EACHjF,OAAM,EACNuC,SAAUU,K,sCAzDTkC,GAAoB,yF,sDAApBA,EAAoB,QAApBA,EAAoB,Y,EADjC,G,sMCnBQ,yCACI,mDAMJ,+B,wDANwB,qEAAuB,mMCCvD,iBAWE,wBAFU,KAAAC,uBAAyB,IAAI,eAIvC,KAAAC,sBAAwB,SAAChF,GACvB,SAAK+E,uBAAuBE,KAAKjF,IAEnC,KAAAkF,UAAY,YAAc,c,6CAXfC,I,mDAAAA,EAA+B,qcDT5C,yCACI,iEACI,2CAQJ,8BACJ,+B,MATyB,sFAAgE,sC,+ECEzF,G,4ECEQ,mEAEI,mKACJ,8B,uDAFI,2C,yBAFR,0CACI,qEAIJ,wC,0FAJmC,oFAAuC,e,qBAS1E,4C,yBAAA,mD,4GAAa,6EAAuC,e,sBAIpD,yCAA2C,6CAAiB,+BCJhE,iBAgBE,WACUC,EACAC,EACAC,EACAC,EACAC,GALV,WACU,KAAAJ,iBACA,KAAAC,SACA,KAAAC,SACA,KAAAC,QACA,KAAAC,cAdV,KAAAC,SAAWxC,KAAKmC,eAAeM,cAE/B,KAAAC,YAAuC1C,KAAKoC,OAAOpB,wBAEnD,KAAA2B,WAA2C,OAAAhC,EAAA,GAAc,CACvDX,KAAKoC,OAAOlC,gBACZF,KAAKoC,OAAOjC,gBACXE,KAAK,OAAAC,EAAA,IAAI,SAAC,G,IAAA,mBAAChB,EAAM,KAAED,EAAY,KAAM,SAAKuD,aAAa,2BAAIvD,GAAY,CAAEC,OAAM,SAWlF,KAAAyC,sBAAwB,SAAChF,GACvB,SAAKqF,OAAOV,eACV,CAAC3E,EAAUjC,IACXiC,EAAUL,SAAW,IAAgBmG,UAAY,IAAgBC,KAAO,IAAgBD,YAG5F,KAAAZ,UAAY,YAAc,cAElB,KAAAc,eAAiB,WACvB,SAAKR,YAAY1D,KAA0C,CACzDmE,WAAY,YAAF,eAAM,KAAgB,CAAEC,aAAc,YAAF,eAAM,EAAKb,OAAO/C,cAAY,CAAEC,OAAQ,EAAK8C,OAAO1C,mBAClGwD,UAAW,EAAKd,OAAOhC,uBACvB+C,UAAW,CAAChI,MAAO,eACnBiI,eAAgB,SAACC,GACf,EAAKjB,OAAOd,aAAa+B,EAAI/D,QAC7B,EAAK8C,OAAOhB,eAAeiC,OAczB,KAAAC,OAAS,WACf,SAAKjB,OAAOkB,SAAS,CAAC,OAAQ,CAACC,WAAY,EAAKlB,SAjC9CtC,KAAKoC,OAAOd,aAAatB,KAAKsC,MAAMmB,SAASC,OAAOpE,QAAU,e,OAsB1D,YAAAsD,aAAR,SAAqBvD,G,MACnB,MAAO,CACLlE,MAAQ,QAASkE,aAAY,EAAZA,EAAcC,UAAU,EACzCqE,WAAWtE,aAAY,EAAZA,EAAcrD,OAAQ,IAAM,QAA2B,QAAlB,EAAAqD,aAAY,EAAZA,EAAcnE,YAAI,eAAE0I,WAAY,IAChFC,OAAQ7D,KAAKsD,OACbQ,aAAc,CAAC,MACfC,QAAS,CAAC,CAACC,KAAM,cAAeC,MAAO,SAAUC,SAAUlE,KAAK+C,mB,sCA7CzDoB,GAA2B,wM,mDAA3BA,EAA2B,sb,GAAA,MDpBxC,uDAEI,qD,iCAGA,oD,iCAOJ,8BAEA,8FAIA,+F,yCAhBiC,6GAGf,4GAA0D,gB,iFCU5E,G,YCTaC,EAA+B,aACxC,GACG,IAAuB,CAC1B,CAACC,QAAS,IAAgBC,SAAUtF,EAA6BuF,OAAO,GACxE,CAACF,QAAS,IAAgBC,SAAU7E,EAAwB8E,OAAO,K,yFCJ/D,mDACI,0JACI,8CAAoB,kCAAM,8BAC1B,yBACA,8CAAqB,yCAAa,8BAC1C,8B,0BAFQ,mG,yBAGR,wC,yEAAwC,iD,0BAP5C,yCACI,sDAMA,qDACJ,+B,uBAPmB,mEAMD,2E,uBAMlB,0CAA2C,+CAAmB,+B,sBAI9D,6C,0BAAA,qD,4GAAa,6EAAqC,eCdtD,kBAcE,WACUpC,EACAC,EACAC,GAFA,KAAAF,iBACA,KAAAC,SACA,KAAAC,SATV,KAAAtC,OAASC,KAAKoC,OAAOrC,OAErB,KAAAyC,SAAWxC,KAAKmC,eAAeM,cAE/B,KAAAU,UAA8B,CAAChI,MAAO,qB,OAQtC,YAAAqJ,aAAA,SAAatJ,GACX8E,KAAKqC,OAAOkB,SAAS,CAAC,0BAA2B,CAC/CkB,SAAUC,KAAKC,UAAU,CAACzJ,KAAI,EAAEc,MAAM,IAAI4I,MAAOC,oB,sCAhB1CC,GAA+B,kH,mDAA/BA,EAA+B,0FAF/BV,IAA+B,8c,GAAA,MDZ5C,qDAEI,qDAGA,4C,iCAUJ,8BAEA,+FAIA,gG,yCAnBiC,4EAGI,uGAA8C,gB,+FCGnF,G,0ECJA,cAkCE,wBAJA,KAAAW,UAAoB,EAEZ,KAAAC,aAAuB,EAS/B,KAAAC,oBAAsB,SAACC,GACrBA,EAAEC,iBACuB,UAAtB,EAAKC,eACR,EAAKJ,aAAc,EACnBK,YAAW,WAAM,SAAKL,aAAc,IAAO,KAC3C,EAAKD,UAAW,EAChB,EAAKO,SAAS,EAAKC,YAAYrB,SAAU,EAAKqB,YAAY7B,UAG5D,KAAA8B,eAAiB,SAACN,G,OACE,QAAf,EAAC,EAAKO,iBAAS,eAAEvB,YAAY,EAAKc,aACrC,EAAKM,SAAS,EAAKG,UAAUvB,SAAU,EAAKuB,UAAU/B,S,OAhBxD,YAAAgC,gBAAA,SAAgBR,EAAQ/F,GACnBa,KAAKoF,eACRpF,KAAK+E,SAAW5F,IAiBV,YAAAmG,SAAR,SAAiBK,EAAcC,GAC1BA,EAAYD,EAAE,yBAAIC,IAChBD,K,sCAjCIE,I,mDAAAA,EAAkB,ye,iCC5B/B,8CAGE,yCAGE,sDAAS,EAAAZ,oBAAA,MACL,8CAA4B,yBAAsB,8BACxD,8BAEA,yCAEE,sDAAS,EAAAO,eAAA,KAAT,CAAgC,iCAElB,EAAAE,gBAAA,GAAwB,KAFtC,CAAgC,gCAGnB,EAAAA,gBAAA,GAAwB,MACrC,+BAGF,8BAEF,+B,MAhBI,qFAEgC,iFAItB,wFAAgC,mE,qSDLhC,CACV,aAAQ,mBAAoB,CAC1B,aAAM,OAAQ,aAAM,CAClBI,WAAW,SAEb,aAAM,QAAS,aAAM,CACnBA,WAAW,WAEb,aAAW,gBAAiB,CAC1B,aAAQ,kBAEV,aAAW,gBAAiB,CAC1B,aAAQ,iBAEV,aAAW,YAAa,aAAQ,QAEnC,oB,EAlBH,G,0BEHI,0CACI,0CAA2C,+BAAG,8BAC9C,2CAA+C,yBAAoB,8BACrE,+B,2CADiD,gF,0BAI/C,0CACE,0CAA2C,iCAAE,8BAC7C,2CAA+C,yBAAkB,8BACnE,+B,2CADiD,8E,uBAKjD,2CACE,qCACF,+B,uBAEE,2CACG,+CACH,+B,0BAQF,2CACE,yBACF,+B,2CADE,2F,0BA7BR,yCACE,4CAKE,+FAOA,0CACE,6CAGA,+FAKA,0CACI,yBACJ,8BACA,2CACG,0BACH,8BACA,8CAGF,8BAEA,+CAA0B,0CAAa,8BAC3C,+B,0GAjCuD,+EAAqC,cAahF,oFAA6C,cAS/C,yGAGD,6GAEG,kFCzBd,kBASE,c,6CAJWC,I,mDAAAA,EAAoC,m4BDR/C,6C,KAAoE,6C,uECGtE,G,mKCAQ,oDAQI,mEACJ,+B,wDARI,qFAA0E,uEAA1E,CAA0E,+LAOtC,oECPhD,kBAaE,wBAHU,KAAAC,oBAAsB,IAAI,eAC1B,KAAAC,aAAe,IAAI,eAI7B,KAAAC,YAAc,SAACC,EAAcjF,GAAsC,OAAAA,EAAQ5B,QAE3E,KAAA8G,wBAA0B,SAACnJ,GACzB,SAAK+I,oBAAoBhE,KAAK/E,IAEhC,KAAAoJ,WAAa,SAAC/G,GAAmB,SAAK2G,aAAajE,KAAK1C,I,6CAf7CgH,I,mDAAAA,EAAmC,yjBDThD,yCAEI,iEACI,wDAUJ,8BAEJ,+B,MAZwB,qFAAoF,qCAApF,CAAoF,sC,iFCC5G,G,iECEQ,wEAGI,4JAAiD,oH,iCAErD,8B,wFAJI,yCAAuB,iD,0BAF/B,0CACI,2EAMJ,wC,0FANwC,oFAAsC,e,uBAW9E,yCAA2C,6CAAiB,+B,sBAI5D,4C,0BAAA,oD,4GAAa,6EAAuC,eCRxD,ICPMC,GAAiB,CACrB,CACEC,KAAM,GACNC,UAAW,GACXC,SAAS,CACP,CACEF,KAAM,OACNC,UDAR,WAeE,WACUtE,EACAC,EACAG,EACAF,EACAC,EACAqE,GANV,WACU,KAAAxE,iBACA,KAAAC,SACA,KAAAG,cACA,KAAAF,SACA,KAAAC,QACA,KAAAqE,oBAdV,KAAAnE,SAAWxC,KAAKmC,eAAeM,cAE/B,KAAAmE,WAAa5G,KAAKoC,OAAOrB,iBAAiBV,KAAK,OAAAC,EAAA,IAAI,SAAAC,GAAC,OAAIA,aAAC,EAADA,EAAGsG,MAAK,SAACC,EAAGC,GAAM,OAAAA,EAAEzH,OAASwH,EAAExH,cAEvF,KAAA0H,MAAQhH,KAAK2G,kBAAkBK,MAE/B,KAAArE,WAAc3C,KAAKoC,OAAOjC,cAAcE,KAAK,OAAAC,EAAA,IAAI,SAAAC,GAAK,SAAKqC,aAAarC,OAaxE,KAAA0G,kBAAoB,SAAChK,GACnB,GAAIA,EAAJ,CAGA,IADA,IAAI0E,EAAgB,GACZuF,EAAI,EAAGA,EAAIjK,EAAW2E,OAAQsF,IAAI,CACxC,IAAMnK,EAAYE,EAAWiK,GAC1BnK,EAAUL,SAAW,IAAgBoG,MAAMnB,EAAIwF,KAAKpK,EAAUjC,IAGjD,IAAf6G,EAAIC,QAEP,EAAKQ,OAAOV,eAAeC,EAAK,IAAgBkB,aAGlD,KAAAwD,WAAa,SAAC/G,GACZ,SAAK+C,OAAOkB,SAAS,CAAC,QAAS,CAACjE,OAAM,IAAI,CAACkE,WAAY,EAAKlB,SAEtD,KAAAS,eAAiB,WACvB,EAAKR,YAAY1D,KAA0C,CACzDmE,WAAY,YAAF,eAAM,KAAgB,CAC9BoE,iBAAkB,CAAC9H,QAAQ,GAC3B+H,0BAA0B,EAC1BpE,aAAc,EAAKb,OAAO/C,eAC5B6D,UAAW,EAAKd,OAAOhC,uBACvB+C,UAAW,CAAChI,MAAO,eACnBiI,eAAgB,SAACC,GAAsB,SAAKjB,OAAOhB,eAAeiC,OAI9D,KAAAC,OAAS,WACf,EAAKjB,OAAOkB,SAAS,CAAC,OAAQ,CAACC,WAAY,EAAKlB,SAlC9C,IAAMmC,EAAWzE,KAAKsC,MAAMmB,SAASC,OAAOe,SAC5CzE,KAAKoC,OAAOhB,eAAeqD,EAAWC,KAAK4C,MAAM7C,GAAY,I,OAoCzD,YAAA7B,aAAR,SAAqBvD,G,MACnB,MAAO,CACLlE,MAAQ,OACRwI,WAAWtE,aAAY,EAAZA,EAAcrD,OAAQ,IAAM,QAA2B,QAAlB,EAAAqD,aAAY,EAAZA,EAAcnE,YAAI,eAAE0I,WAAY,IAChFC,OAAQ7D,KAAKsD,OACbS,QAAS,CAAC,CAACC,KAAM,cAAeC,MAAO,SAAUC,SAAUlE,KAAK+C,mB,sCA3DzDwE,GAA+B,+O,mDAA/BA,EAA+B,+d,GAAA,MDlB5C,uDAEI,qD,iCAGA,qD,iCASJ,8BAEA,+FAIA,gG,yCAlBiC,6GAGf,2GAAwD,gB,kFCQ1E,GCCQC,KAAM,CAACC,OAAO,GACdf,SAAU,CACR,CACEF,KAAM,QACNC,UAAW,EACXe,KAAM,CAACC,OAAO,SAS1B,4B,yDAIaC,I,+EAAAA,IAA2B,SAH7B,CAAC,IAAaC,SAASpB,KACtB,O,EAFZ,G,0BChBA,cAGI,c,OAEA,YAAAqB,QAAA,SAAQC,GAAR,WACI,OAAOA,EAASxH,KACZ,aAAS,CAACV,IACV,OAAAW,EAAA,IAAI,SAAAC,GAAO,MAAoB,CAC3BtB,SAAU,KAAc6I,WAAW,EACnCC,QAAS,EAAKC,kBAAkBzH,EAAEnB,QAClC6I,cAAe1H,EAAE0H,oBAKnB,YAAAD,kBAAV,SAA4BE,GACxB,MAAO,CACHC,OAAQ,MACRC,KAAM,CAACzG,IAAKuG,EAAQvG,IAAKjF,OAAQwL,EAAQxL,QACzC2L,OAAQ,qBACRC,cAAe,6C,sDApBdC,EAAwB,Q,sCAAxBA,M,EADb,G,aCPaC,GAAkD,CAC3DvJ,SAAUU,EAAwB8I,gBAAiB,CAAC,cAAeC,kBAAkB,EACrFxJ,UAAW,SAACC,EAAkCC,GAC1C,IAAMuJ,EAAoBvJ,EAAOuC,IAAIrB,KAAI,SAAAxF,GAAQ,MAAO,CAACA,GAAE,EAAE4B,OAAQ0C,EAAO1C,WAC5E,MAAO,CAACO,WAAY,aAAkBkC,EAAMlC,WAAY0L,EAAmB,SCMnF,4B,yDAoBaC,I,+EAAAA,IAAoB,uBAV7B,CAAEvE,QAAS,IAAewE,SAAU,GAA0BtE,OAAO,GACrE,CAAEF,QAAS,IAAgBC,SAAUkE,GAAuBjE,OAAO,IAChE,IACA,KAAuB,SAEnB,CACP,IACA,O,EAjBJ,I,gRCDA,aAGI,c,OAEA,YAAAqD,QAAA,SAAQC,GAAR,WACI,OAAOA,EAASxH,KACZ,YAAS,CAAC,MACV,OAAAC,EAAA,IAAI,SAAAC,GAAO,MAAoB,CAC3BtB,SAAU,IAAc6I,WAAW,EACnCC,QAAS,EAAKC,kBAAkBzH,EAAEnB,QAClC6I,cAAe1H,EAAE0H,oBAKrB,YAAAD,kBAAR,SAA0BE,GACtB,IAAMY,EAAc,IAAiBC,IAAIb,EAAQc,WAGjD,OAFIF,GAAaG,QAAQC,MAAM,gCAAgChB,EAAQc,WAEhE,CACHX,OAAQrI,KAAKmJ,aAAajB,EAASY,GACnCV,KAAMpI,KAAKoJ,eAAelB,GAC1BC,OAAQnI,KAAKqJ,iBAAiBnB,GAC9BI,cAAetI,KAAKsJ,oBAAoBpB,EAASY,KAI/C,YAAAQ,oBAAV,SAA8BpB,EAAkCY,G,QACtDvE,GAAmB,QAAX,EAAA2D,EAAQvG,WAAG,eAAEC,QAAS,EAE9B2H,EACF1O,EAAA,GAAc0J,EAAQ2D,EAAQc,UAAYF,EAAYU,aAAaC,eAEvE,MAAO,iBAA0B,QAAX,EAAAvB,EAAQvG,WAAG,eAAEC,SAAU,IAAE,IAAI2H,EAAU,YAAWrB,EAAQvG,KAAOuG,EAAQpN,IAAE,kBAG3F,YAAAsO,eAAV,SAAyBlB,GACrB,OAAOA,EAAQpN,GAAK,KAAO,CAAC6G,IAAKuG,EAAQvG,MAGnC,YAAAwH,aAAV,SAAuBjB,EAAkCY,GAErD,OAAOA,EAAYT,QADJH,EAAQpN,GAAK,IAAIoN,EAAQpN,GAAO,iBAIzC,YAAAuO,iBAAV,SAA2BnB,GACvB,OAAOA,EAAQpN,GAAK,SAAW,Q,sDA9C1B4O,EAAqB,Q,sCAArBA,M,EADb,G,oCCTaC,EAAmC,CAC5C1K,SAAU,IACVC,UAAW,SAACC,EAAYC,GAAoC,OCDzD,SACLD,EACA6J,EACAY,G,UAKIC,EACJ,GAHID,EAAI9O,IAAO8O,EAAIjI,KAAKsH,QAAQC,MAAM,uEAGnCU,EAAI9O,GACL+O,EAAgB,SAACC,GAAgB,gBAACvJ,GAAc,OAAAA,EAAEuJ,KAASF,EAAI9O,UAC5D,GAAG8O,EAAIjI,IAAK,CACf,IAAM,EAAQ,YAA8BiI,EAAIjI,KAChDkI,EAAgB,SAACC,GAAgB,gBAACvJ,GAAc,YAAkBwJ,IAAlB,EAAMxJ,EAAEuJ,MAG1D,IAAME,EAAW,IAAiBjB,IAAIC,GAChCiB,EAAW,GAKjB,GAHAA,EAASjB,GACP,YAAQ7J,EAAM6J,GAAYa,EAAcG,EAASE,aAE/B,QAApB,EAAGF,EAAStD,gBAAQ,eAAE9E,O,IACpB,IAAqB,kBAAAoI,EAAStD,UAAQ,+BAAlC,IAAIyD,EAAS,QACfF,EAASE,GACP,YAAQhL,EAAMgL,GAAYN,EAAcG,EAASI,c,iGAEvD,OAAOH,ED1BuDI,CAAyBlL,EAAOC,EAAO4J,UAAW5J,IAC9GqJ,gBAGJ,SAAgCP,GAC5B,IAAMY,EAAc,IAAiBC,IAAIb,EAAQc,WAE7CsB,EAAoB,CAACpC,EAAQc,WAKjC,OAHGF,EAAYpC,WACX4D,EAAaA,EAAWC,OAAOzB,EAAYpC,WAExC4D,I,YEhBEE,EAAgE,CACzEC,cAAe,4BACfC,iBAAkB,mC,wBCMtB,aAGI,WAAoBC,GAAA,KAAAA,a,OAEpB,YAAA/C,QAAA,SAAQC,GAAR,WACI,OAAOA,EAASxH,KACZ,YAAS,CAAC,MACV,OAAAuK,EAAA,IAAS,SAAC,G,IAACxL,EAAM,SACb,SAAKuL,WAAWE,KAAKL,EAAcpL,EAAO4J,WAAY,CAACrH,IAAKvC,EAAOuC,IAAKmJ,QAAS1L,EAAO0L,e,sCAR3FC,GAAoB,+B,sDAApBA,EAAoB,QAApBA,EAAoB,Y,EADjC,G,wBCCA,cAII,a,OAAe,cAAO,K,OAHmB,iBAKzC,YAAAnD,QAAA,SAAQC,GAAR,WACI,OAAOA,EAASxH,KACZ,YAAS,CAAC,MACV,OAAAC,EAAA,IAAI,SAAAC,GAAO,MAAoB,CAC3BtB,SAAU,IAAc6I,WAAW,EACnCC,QAAS,EAAKC,kBAAkBzH,EAAEnB,QAClC6I,cAAe1H,EAAE0H,oBAKnB,YAAAmB,eAAV,SAAyBlB,GACrB,IAAME,EAAiB,IAAI4C,SACrBC,EAAO/C,EAAQgD,YAAYC,aAGjC,OAFGF,GAAM7C,EAAKgD,OAAO,QAASH,EAAMA,EAAKlQ,MACzCqN,EAAKgD,OAAO,UAAW1G,KAAKC,UAAUuD,EAAQmD,SACvCjD,G,sDArBFkD,EAAuB,Q,sCAAvBA,M,EADb,CAC6C,K,YCRhCC,EAAqC,CAC9CtM,SAAU,IACVC,UAIJ,SAAoBC,EAAY+I,G,UAQ5B,OANAA,EAAQmD,OAAS,YAAH,eACPnD,EAAQmD,QAAM,CACjBG,SAA2C,QAAnC,EAAqB,QAArB,EAAEtD,EAAQgD,mBAAW,eAAEC,oBAAY,eAAEpQ,KAC7C0Q,kBAAmBC,IAAIC,gBAAmC,QAApB,EAACzD,EAAQgD,mBAAW,eAAEC,gBAGzD,IAAiBjM,UAAUC,EAAO+I,IAXzCO,gBAAiB,IAAiBA,iBCEzBmD,EAAiC,CAC1C,CAACvH,QAAS,IAAewE,SAAU,IAAqBtE,OAAO,GAC/D,CAACF,QAAS,IAAgBC,SAAU,IAAkBC,OAAO,IAGpDsH,EAAqC,CAC9C,CAACxH,QAAS,IAAewE,SAAU,EAAyBtE,OAAO,GACnE,CAACF,QAAS,IAAgBC,SAAUiH,EAAsBhH,OAAO,IAGxDuH,EAAmC,CAC5C,CAACzH,QAAS,IAAewE,SAAU,EAAuBtE,OAAO,GACjE,CAACF,QAAS,IAAgBC,SAAUqF,EAAoBpF,OAAO,IAGtDwH,EAAkC,CAC3C,CAAC1H,QAAS,IAAewE,SAAU,EAAsBtE,OAAO,K,oFCxB7D,SAASyH,EAASC,EAAYC,EAAYhC,GAC7C,GAAI+B,GAAyB,GAAhBA,EAAMrK,QAAgBsK,EAEnC,IAAI,IAAIhF,EAAI,EAAGA,EAAI+E,EAAMrK,OAAQsF,IAAI,CACnC,IAAMiF,EAAMF,EAAM/E,GAClB,GAAGiF,EAAIjC,KAAgBgC,EAAO,OAAO,YAAP,GAAWC,M,4GCC/C,aAQE,WACWC,EACT1F,EACA2F,G,QAFS,KAAAD,YAKTpM,KAAKsM,WAAa,IAAiBvD,IAAI/I,KAAKoM,WAE5C,IAAMG,EAAyB,QAAlB,EAAGvM,KAAKsM,kBAAU,eAAED,SACjCrM,KAAKwM,qBACU,QAAbH,EAAsBE,GAAW,GAAMvM,KAAKyM,SAASJ,EAAUE,GAEjE,IAAMG,EAA4B,QAAlB,EAAG1M,KAAKsM,kBAAU,eAAE5F,SACpC1G,KAAK2M,mBACU,QAAbjG,EAAsBgG,GAAc,GAAM1M,KAAKyM,SAAS/F,EAAUgG,GAEpE1M,KAAK4M,cAAgB,YAAH,CAAIR,GAAcpM,KAAK2M,mBAAuB3M,KAAKwM,sBAczE,OAXU,YAAAC,SAAR,SAAiBI,EAA8BC,G,QAC7C,IAAIA,KAAUD,aAAQ,EAARA,EAAUjL,QAAQ,MAAO,GACvC,IAAImL,EAA+B,GAC7BC,EAAU,YAAsBF,G,IACtC,IAAqB,kBAAAD,GAAQ,8BAAC,CAA1B,IAAMI,EAAO,QACZD,EAAQC,GAAUF,EAAS5F,KAAK8F,GAEjChE,QAAQC,MAAM,IAAI+D,EAAO,uDAAuDjN,KAAKoM,UAAS,M,iGAElG,OAAOW,GAEX,EAtCA,I,kCCHA,kCAAO,IAAMG,EAAoB,c,kCCHjC,0HAaA,aAGI,c,OAEA,YAAAtF,QAAA,SAAQC,GAAR,WACI,OAAOA,EAASxH,KACZ,YAAS,CAAC,MACV,aAAI,SAAAE,GAAO,MAAoB,CAC3BtB,SAAU,IAAc6I,WAAW,EACnCC,QAAS,EAAKC,kBAAkBzH,EAAEnB,QAClC6I,cAAe1H,EAAE0H,oBAKnB,YAAAD,kBAAV,SAA4BE,GACxB,IAAMY,EAAc,IAAiBC,IAAIb,EAAQc,WAGjD,OAFIF,GAAaG,QAAQC,MAAM,gCAAgChB,EAAQc,WAEhE,CACHX,OAAQH,EAAQiF,gBAAkBnN,KAAKmJ,aAAajB,EAASY,GAC7DV,KAAMpI,KAAKoJ,eAAelB,GAC1BC,OAAQnI,KAAKqJ,iBAAiBnB,GAC9BI,cAAetI,KAAKsJ,oBAAoBpB,EAASY,KAI/C,YAAAQ,oBAAV,SAA8BpB,EAAuCY,G,QAKjE,OAJwC,IAAvBZ,EAAQkF,WAAmC,cAAgB,cAI1D,OAHC,IAAoC,QAAxB,EAACtE,EAAYU,mBAAW,eAAEC,eAAeA,cAGrC,QAFX,IAAoC,QAAxB,EAACX,EAAYuE,mBAAW,eAAE5D,eAAeA,cAEnB,IADjCvB,EAAQmD,OAAOvC,EAAYuE,aAC0B,kBAGxE,YAAAjE,eAAV,SAAyBlB,GACrB,OAAOA,EAAQmD,QAGT,YAAAlC,aAAV,SAAuBjB,EAAuCY,GAG1D,OAAOA,EAAYT,QADoB,IAAvBH,EAAQkF,WAAoC,IAAIlF,EAAQmD,OADpDvC,EAAYoB,YACgE,KAI1F,YAAAb,iBAAV,SAA2BnB,GACvB,OAA+B,IAAvBA,EAAQkF,WAAmC,MAAQ,Q,sDA9CtDE,EAAmB,Q,sCAAnBA,M,EADb,I,kCCXA,kCAAO,IAAMC,EAAwB,mB,kCCFrC,kCAAO,IAAMC,EAAsB,gB,kCCAnC,kCAAO,IAAMC,EAAqB,e,sFCF3B,SAASC,EAAQzB,EAAYC,GAChC,IAAID,GAAyB,GAAhBA,EAAMrK,OAAa,OAAOqK,EACvC,IAAI0B,EAAM1B,EAAM2B,QAEhB,OADAD,EAAIE,QAAQ3B,GACLyB,E,gBCKEG,EAAiC,CAC1C7O,S,UAAU,EACVC,UAgBJ,SAAoBC,EAAY+I,GAC5B,IAAMY,EAAc,IAAiBC,IAAIb,EAAQc,WAWjD,OATAd,EAAQmD,OAAO0C,WAAY,IAAInJ,MAAOoJ,UCzBnC,SACH7O,EACA6J,EACAqC,EACA4C,G,QAGMC,EAAU,IAAiBnF,IAAIC,G,IAErC,IAAkB,kBAAAkF,EAAQ7B,UAAY,IAAE,8BAAC,CAArC,IAAI8B,EAAM,QACJC,EAAe,IAAiBrF,IAAIoF,GACpCE,EAAgBhD,EAAO+C,EAAa5E,aAC1C,GAAI6E,EAAJ,CACA,IAAMC,EAAkBD,EAAcD,EAAalE,YAC/CoE,GAKJnP,EAAMgP,GAAUT,EAAKvO,EAAMgP,GAASE,GACpChD,EAAO+C,EAAahE,YAAckE,EAClCjD,EAAO+C,EAAa5E,aAAe,OAN/BP,QAAQC,MAAM,eAAeF,EAAS,8BAA8BmF,EAAM,mBAC1E9C,EAAO+C,EAAa5E,aAAe,Q,iGAU3C,OAFArK,EAAM6J,GAAaiF,EAAS5C,EAAQlM,EAAM6J,IAEnC7J,EDQAoP,CAAyBpP,EAAO+I,EAAQc,UAAWd,EAAQmD,OALxC,IAAvBnD,EAAQkF,WACI,SAAC/B,EAAemD,GAAuB,OEnCnD,SAAoBvC,EAAYwC,EAAwBvE,GAC3D,IAAI+B,GAAyB,GAAhBA,EAAMrK,OAAa,OAAOqK,EAEvC,IADA,IAAI0B,EAAM1B,EAAM2B,QACR1G,EAAI,EAAGA,EAAIyG,EAAI/L,OAAQsF,IAAI,CACjC,IAAIiF,EAAMwB,EAAIzG,GACd,GAAGiF,EAAIjC,KAAgBuE,EAAWvE,GAAY,CAC5CyD,EAAIzG,GAAK,YAAH,GAAOwH,OAAOC,OAAOxC,EAAKsC,IAChC,OAGJ,OAAOd,EFyB+CiB,CAAQJ,EAAUnD,EAAQvC,EAAYoB,aAE7E,SAACmB,EAAemD,GAAuB,OAAAd,EAAKc,EAAUnD,MAzBrE5C,gBAGJ,SAAgCP,G,QACtBoC,EAAuB,CAACpC,EAAQc,WAChCF,EAAc,IAAiBC,IAAIb,EAAQc,WACjD,GAAGF,EAAYuD,S,IACZ,IAAoB,kBAAAvD,EAAYuD,UAAQ,8BAAC,CAArC,IAAM8B,EAAM,QACPU,EAAQ,IAAiB9F,IAAIoF,GAChCjG,EAAQmD,OAAOwD,EAAMrF,cAAcc,EAAWnD,KAAKgH,I,iGAG5D,OAAO7D","file":"16.6955d19ec82187ca91c6.js","sourcesContent":["export const translations: { [key: string]: string } = {\r\n  id: \"Id\",\r\n  name: \"Navn\",\r\n  phonenumber: \"Telefonnummer\",\r\n  address: \"Adresse\",\r\n  user: \"Bruker\",\r\n  title: \"Tittel\",\r\n  content: \"Innhold\",\r\n  createdat: \"Opprettet\",\r\n  createdby: \"Opprettet av\",\r\n  filename: \"Lenke\",\r\n  description: \"Beskrivelse\",\r\n  finished: \"Ferdig\",\r\n  username: \"Brukernavn\",\r\n  firstname: \"Fornavn\",\r\n  lastname: \"Etternavn\",\r\n  email: \"Epost\",\r\n  role: \"Rolle\",\r\n  none: \"Ingen\",\r\n  year: \"År\",\r\n  month: \"Måned\",\r\n  weeknr: \"Uke\",\r\n  week: \"Uke\",\r\n  date: \"Dato\",\r\n  day: \"Dag\",\r\n  fullname: \"Navn\",\r\n  confirmedhours: \"Låste timer\",\r\n  openhours: \"Åpne timer\",\r\n  password: \"Passord\",\r\n  status: \"Status\",\r\n  starttime: \"Starttid\",\r\n  endtime: \"Sluttid\",\r\n  totalhours: \"Timer\",\r\n  comment: \"Kommentar\",\r\n\r\n  timesheet: \"Time\",\r\n  timesheetid: \"Time\",\r\n  timesheets: \"Timer\",\r\n  \r\n  mission: \"Oppdrag\",   \r\n  missionid: \"Oppdrag\",\r\n  missions: \"Oppdrag\",\r\n\r\n  employer: \"Oppdragsgiver\",\r\n  employerid: \"Oppdragsgiver\",\r\n  employers: \"Oppdragsgivere\",\r\n\r\n  documenttype: \"Dokumenttype\",\r\n  documenttypeid: \"Dokumenttype\",\r\n  documenttypes: \"Dokumenttyper\",\r\n\r\n  missiondocument: \"Dokument\",\r\n  missiondocumentid: \"Dokument\",\r\n  missiondocuments: \"Dokumenter\",\r\n\r\n  missionnote: \"Notat\",\r\n  missionnoteId: \"Notat\",\r\n  missionnotes: \"Notater\",\r\n\r\n  missiontype: \"Oppdragstype\",\r\n  missiontypeid: \"Oppdragstype\",\r\n  missiontypes: \"Oppdragstyper\",\r\n\r\n  inboundemailpassword: \"Epostpassord\",\r\n  inboundemailpasswordid: \"Epostpassord\",\r\n  inboundemailpasswords: \"Epostpassord\",\r\n\r\n  showall: \"Vis alt\",\r\n  currentweek: \"Denne uken\",\r\n  currentmonth: \"Denne måned\",\r\n  currentyear: \"I år\",\r\n  custommonth: \"Velg måned\",\r\n  custom: \"Velg tid\",\r\n\r\n  open: \"Åpen\",\r\n  confirmed: \"Låst\",\r\n};\r\n","import { Reducer, StateAction } from 'src/app/state/interfaces';\r\nimport { WeekCriteria } from '../shared-timesheet/interfaces';\r\nimport { WeekToTimesheetCriteriaAdapter } from '../shared-timesheet/timesheet-filter/week-to-timesheet-criteria.adapter';\r\nimport { StoreState } from './store-state';\r\n\r\nexport const SetTimesheetCriteriaActionId = \"SET_TIMESHEET_CRITERIA\";\r\n\r\nexport interface SetTimesheetCriteriaCommand extends StateAction { weekCriteria: WeekCriteria }\r\n\r\nexport const SetTimesheetCriteriaReducer: Reducer<any> = {\r\n    actionId: SetTimesheetCriteriaActionId,\r\n    reducerFn: (state: StoreState, action: SetTimesheetCriteriaCommand) => {\r\n        delete action.weekCriteria.weekNr;\r\n        return {\r\n            timesheetCriteria: new WeekToTimesheetCriteriaAdapter(action.weekCriteria),\r\n            weekCriteria: action.weekCriteria\r\n        }\r\n    }       \r\n}  \r\n\r\nexport const SetSelectedWeekActionId = \"SET_SELECTED_WEEK\";\r\n\r\nexport interface SetSelectedWeekCommand extends StateAction { weekNr: number }\r\n\r\nexport const SetSelectedWeekReducer: Reducer<any> = {\r\n    actionId: SetSelectedWeekActionId,\r\n    reducerFn: (state: StoreState, action: SetSelectedWeekCommand) => {\r\n        return {selectedWeekNr: action.weekNr}\r\n    }       \r\n} ","import { TimesheetStatus } from 'src/app/shared/enums';\r\nimport { StateAction } from 'src/app/state/interfaces';\r\n\r\nexport const UpdateStatusesActionId = \"UPDATE_STATUSES\"\r\n\r\nexport interface UpdateStatusesStateCommand extends StateAction{\r\n    ids: string[];\r\n    status: TimesheetStatus;\r\n}","import { Injectable } from '@angular/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Timesheet, User } from 'src/app/core/models';\r\nimport { _setFullNameOnUserForeigns } from 'src/app/shared-app/helpers/add-full-name-to-user-foreign.helper';\r\nimport { _find } from 'src/app/shared-app/helpers/array/find.helper';\r\nimport { WeekCriteriaFormState } from 'src/app/shared/constants/forms/week-criteria-controls.const';\r\nimport { GroupByPeriod, TimesheetStatus } from 'src/app/shared/enums';\r\nimport { filterRecords } from 'src/app/shared/operators/filter-records.operator';\r\nimport { ComponentStore } from 'src/app/state/component.store';\r\nimport { Store } from 'src/app/state/store';\r\nimport { TimesheetSummary } from '../shared-timesheet/interfaces';\r\nimport { WeekCriteria } from '../shared-timesheet/interfaces/week-criteria.interface';\r\nimport { TimesheetSummaryAggregator } from '../shared-timesheet/services/timesheet-summary.aggregator';\r\nimport { FetchTimesheetsActionId, FetchTimesheetsStateCommand } from '../shared-timesheet/state/fetch-timesheets.http.effect';\r\nimport { TimesheetCriteria } from '../shared-timesheet/timesheet-filter/timesheet-criteria.interface';\r\nimport { TimesheetFilter } from '../shared-timesheet/timesheet-filter/timesheet-filter.model';\r\nimport { SetSelectedWeekActionId, SetTimesheetCriteriaActionId } from './component-state-reducers';\r\nimport { ComponentStoreState, StoreState } from './store-state';\r\nimport { UpdateStatusesActionId, UpdateStatusesStateCommand } from './update-statuses/update-statuses-state-command.interface';\r\n\r\n@Injectable()\r\nexport class TimesheetAdminFacade {\r\n\r\n    users$ = this.store.selectProperty$<User[]>(\"users\");\r\n\r\n    get selectedWeekNr(){ return this.componentStore.selectProperty<number>(\"selectedWeekNr\"); } \r\n    selectedWeekNr$ = this.componentStore.selectProperty$<number>(\"selectedWeekNr\");\r\n\r\n    get weekCriteria(){ return this.componentStore.selectProperty<WeekCriteria>(\"weekCriteria\"); } \r\n    weekCriteria$ = this.componentStore.selectProperty$<WeekCriteria>(\"weekCriteria\");\r\n\r\n    weekCriteriaFormState$: Observable<WeekCriteriaFormState> = \r\n        this.store.selectProperty$<User[]>(\"users\").pipe(map(x => { return { options: {users: x} } }))\r\n\r\n    private _weeklySummaries$: Observable<TimesheetSummary[]> = combineLatest([\r\n        this.store.selectProperty$<Timesheet[]>(\"timesheets\"),\r\n        this.componentStore.selectProperty$<TimesheetCriteria>(\"timesheetCriteria\")\r\n    ]).pipe(\r\n        filterRecords(TimesheetFilter), \r\n        map(x => this.summaryAggregator.groupByType(GroupByPeriod.Week, x.records))\r\n    );\r\n\r\n    weeklySummaries$: Observable<TimesheetSummary[]> = \r\n        combineLatest([this._weeklySummaries$, this.users$]).pipe(\r\n            map(x =>  _setFullNameOnUserForeigns(x[0], x[1]))\r\n        );\r\n\r\n    selectedWeekTimesheets$: Observable<Timesheet[]> = combineLatest([\r\n        this.weeklySummaries$,\r\n        this.selectedWeekNr$\r\n    ]).pipe(map(([summaries, weekNr]) => {\r\n        const summary = _find(summaries, weekNr, \"weekNr\");\r\n        return summary?.timesheets.map(x => { return {...x, fullName: summary.fullName}});\r\n    }))\r\n    \r\n    constructor(\r\n        private summaryAggregator: TimesheetSummaryAggregator,\r\n        private store: Store<StoreState>,\r\n        private componentStore: ComponentStore<ComponentStoreState>\r\n    ){\r\n        this.componentStore.selectProperty$(\"timesheetCriteria\").subscribe(timesheetCriteria => \r\n            this.store.dispatch(<FetchTimesheetsStateCommand>{actionId: FetchTimesheetsActionId, timesheetCriteria}))\r\n    }\r\n    \r\n    updateCriteria = (weekCriteria: WeekCriteria): void =>       \r\n        this.componentStore.dispatch({ actionId: SetTimesheetCriteriaActionId, weekCriteria })\r\n\r\n    updateWeekNr = (weekNr: number | string): void =>       \r\n        this.componentStore.dispatch({ \r\n            actionId: SetSelectedWeekActionId, \r\n            weekNr: (typeof weekNr === \"number\") ? weekNr : parseInt(weekNr)\r\n        })\r\n    \r\n    updateStatuses(ids: string[], status: TimesheetStatus): void{\r\n        if(ids.length == 0) return;\r\n        this.store.dispatch<UpdateStatusesStateCommand>({\r\n            ids, \r\n            status,\r\n            actionId: UpdateStatusesActionId,\r\n        });      \r\n    }\r\n}","<div class=\"h-100 max-width\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n    <cdk-virtual-scroll-viewport itemSize=\"120\" maxBufferPx=\"800\" minBufferPx=\"800\" fxFlex>\n        <div class=\"m-1\" *cdkVirtualFor=\"let timesheet of timesheets; trackBy: trackById\">\n            <app-timesheet-card [timesheet]=\"timesheet\" [actionButton]=\"{ \n                        icon: timesheet.status === 2 ? 'check_circle' : 'check_circle_outline', \n                        color: timesheet.status === 2 ? 'accent' : 'warn',\n                        callback: toggleTimesheetStatus, params: [timesheet]\n                    }\">\n            </app-timesheet-card>\n        </div>\n    </cdk-virtual-scroll-viewport>\n</div>","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Timesheet } from 'src/app/core/models';\r\nimport { _trackByModel } from 'src/app/shared-app/helpers/trackby/track-by-model.helper';\r\n\r\n@Component({\r\n  selector: 'app-timesheet-admin-list-view',\r\n  templateUrl: './timesheet-admin-list-view.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TimesheetAdminListViewComponent {\r\n\r\n  @Input() timesheets: Timesheet[];\r\n\r\n  @Output() timesheetStatusToggled = new EventEmitter<Timesheet>();\r\n\r\n  constructor() { }\r\n\r\n  toggleTimesheetStatus = (timesheet: Timesheet): void => \r\n    this.timesheetStatusToggled.emit(timesheet)\r\n\r\n  trackById = _trackByModel(\"timesheets\");\r\n  \r\n}\r\n","<app-main-skeleton overlayMode=\"true\">\n\n    <app-main-top-nav-bar navbar [config]=\"navConfig$ | async\">\n    </app-main-top-nav-bar>\n\n    <ng-container *ngIf=\"(timesheets$ | async) else loading; let timesheets\">\n        <app-timesheet-admin-list-view *ngIf=\"timesheets?.length else loading\"\n            [timesheets]=\"timesheets\"\n            (timesheetStatusToggled)=\"toggleTimesheetStatus($event)\">\n        </app-timesheet-admin-list-view>\n    </ng-container>\n\n</app-main-skeleton>\n\n<ng-template #loading>\n    <mat-spinner *ngIf=\"loading$ | async else noContent\" class=\"center-spinner\" color=\"accent\"></mat-spinner>\n</ng-template>\n\n<ng-template #noContent>\n    <div class=\"w-100 text-center mt-2 mat-h3\">Fant ingen timer!</div>\n</ng-template>\n\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { Timesheet } from 'src/app/core/models';\r\nimport { LoadingService } from 'src/app/core/services/loading.service';\r\nimport { _getWeekOfYear } from 'src/app/shared-app/helpers/datetime/get-week-of-year.helper';\r\nimport { _trackByModel } from 'src/app/shared-app/helpers/trackby/track-by-model.helper';\r\nimport { MainTopNavConfig } from 'src/app/shared/components/main-top-nav-bar/main-top-nav.config';\r\nimport { WeekCriteriaForm, WeekCriteriaFormState } from 'src/app/shared/constants/forms/week-criteria-controls.const';\r\nimport { TimesheetStatus } from 'src/app/shared/enums';\r\nimport { FormService } from 'src/app/shared/form';\r\nimport { WeekCriteria } from '../../shared-timesheet/interfaces';\r\nimport { TimesheetAdminFacade } from '../timesheet-admin.facade';\r\n\r\n@Component({\r\n  selector: 'app-timesheet-admin-list',\r\n  templateUrl: './timesheet-admin-list.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TimesheetAdminListComponent{\r\n    \r\n  loading$ = this.loadingService.queryLoading$;\r\n\r\n  timesheets$: Observable<Timesheet[]> = this.facade.selectedWeekTimesheets$;\r\n\r\n  navConfig$: Observable<MainTopNavConfig> = combineLatest([\r\n    this.facade.selectedWeekNr$,\r\n    this.facade.weekCriteria$\r\n  ]).pipe(map(([weekNr, weekCriteria]) => this.getNavConfig({...weekCriteria, weekNr})))\r\n\r\n  constructor(\r\n    private loadingService: LoadingService,\r\n    private facade: TimesheetAdminFacade,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private formService: FormService) {\r\n      this.facade.updateWeekNr(this.route.snapshot.params.weekNr || _getWeekOfYear());    \r\n    }\r\n\r\n  toggleTimesheetStatus = (timesheet: Timesheet): void => \r\n    this.facade.updateStatuses(\r\n      [timesheet.id],  \r\n      timesheet.status === TimesheetStatus.Confirmed ? TimesheetStatus.Open : TimesheetStatus.Confirmed\r\n    );\r\n\r\n  trackById = _trackByModel(\"timesheets\");\r\n  \r\n  private openWeekFilter = () => \r\n    this.formService.open<WeekCriteria, WeekCriteriaFormState>({\r\n      formConfig: {...WeekCriteriaForm, initialValue: {...this.facade.weekCriteria, weekNr: this.facade.selectedWeekNr}}, \r\n      formState: this.facade.weekCriteriaFormState$,\r\n      navConfig: {title: \"Velg filtre\"},\r\n      submitCallback: (val: WeekCriteria): void => {\r\n        this.facade.updateWeekNr(val.weekNr)\r\n        this.facade.updateCriteria(val)\r\n      }\r\n    });\r\n  \r\n  private getNavConfig(weekCriteria: WeekCriteria): MainTopNavConfig {\r\n    return {\r\n      title:  \"Uke \" + weekCriteria?.weekNr || \"\",\r\n      subTitle: (weekCriteria?.year || \"\") + ' - ' + (weekCriteria?.user?.userName || \"\"),\r\n      backFn: this.onBack,\r\n      backFnParams: [null],\r\n      buttons: [{icon: 'filter_list', color: 'accent', callback: this.openWeekFilter}]\r\n    }\r\n  }\r\n\r\n  private onBack = () => \r\n    this.router.navigate(['../'], {relativeTo: this.route})\r\n  \r\n}\r\n","import { Provider } from '@angular/core';\r\nimport { ComponentStoreProviders } from 'src/app/state/providers.const';\r\nimport { STORE_REDUCERS } from \"src/app/state/injection-tokens\";\r\nimport { SetTimesheetCriteriaReducer, SetSelectedWeekReducer } from \"../component-state-reducers\";\r\nimport { TimesheetAdminFacade } from \"../timesheet-admin.facade\";\r\n\r\nexport const TimesheetAdminUserListProviders: Provider[] = [\r\n    TimesheetAdminFacade,\r\n    ...ComponentStoreProviders,\r\n    {provide: STORE_REDUCERS, useValue: SetTimesheetCriteriaReducer, multi: true},\r\n    {provide: STORE_REDUCERS, useValue: SetSelectedWeekReducer, multi: true}\r\n]","<app-main-skeleton>\n\n    <app-main-top-nav-bar navbar [config]=\"navConfig\">\n    </app-main-top-nav-bar>\n\n    <div class=\"pl-1 pr-1 max-width\" *ngIf=\"users$ | async else loading; let users\">\n        <app-list-card *ngFor=\"let user of users\"\n            (click)=\"goToWeekList(user)\"> \n                <mat-icon left-side>person</mat-icon>\n                {{user.firstName + ' ' +user.lastName}}\n                <mat-icon right-side>chevron_right</mat-icon>\n        </app-list-card>\n        <ng-container *ngIf=\"users.length == 0\" [ngTemplateOutlet]=\"noUsers\"></ng-container>\n    </div>  \n\n</app-main-skeleton>\n\n<ng-template #noUsers>\n    <div class=\"w-100 text-center mt-2 mat-h3\">Fant ingen ansatte!</div>\n</ng-template>\n\n<ng-template #loading>\n    <mat-spinner *ngIf=\"loading$ | async else noUsers\" class=\"center-spinner\" color=\"accent\"></mat-spinner>\n</ng-template>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { User } from 'src/app/core/models';\r\nimport { LoadingService } from 'src/app/core/services/loading.service';\r\nimport { MainTopNavConfig } from 'src/app/shared/components/main-top-nav-bar/main-top-nav.config';\r\nimport { TimesheetAdminFacade } from '../timesheet-admin.facade';\r\nimport { TimesheetAdminUserListProviders } from './timesheet-admin-user-list-providers.const';\r\n\r\n@Component({\r\n  selector: 'app-timesheet-admin-user-list',\r\n  templateUrl: './timesheet-admin-user-list.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: TimesheetAdminUserListProviders\r\n})\r\nexport class TimesheetAdminUserListComponent {\r\n\r\n  users$ = this.facade.users$;\r\n\r\n  loading$ = this.loadingService.queryLoading$;\r\n\r\n  navConfig: MainTopNavConfig = {title: 'Administrer timer'};\r\n\r\n  constructor(\r\n    private loadingService: LoadingService,\r\n    private facade: TimesheetAdminFacade,\r\n    private router: Router,\r\n  ) {}\r\n\r\n  goToWeekList(user: User){\r\n    this.router.navigate(['timeadministrering/uker', {\r\n      criteria: JSON.stringify({user, year: new Date().getFullYear()})\r\n    }])\r\n  }\r\n}\r\n","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { AppButton } from 'src/app/shared-app/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-swipe-card',\r\n  animations: [\r\n    trigger('openCloseConfirm', [\r\n      state('open', style({\r\n        marginLeft:'0px'\r\n      })),\r\n      state('close', style({\r\n        marginLeft:'-81px'\r\n      })),\r\n      transition('open => close', [\r\n        animate('.1s ease-out')\r\n      ]),\r\n      transition('close => open', [\r\n        animate('.1s ease-in',)\r\n      ]),\r\n      transition('void => *', animate(0)),\r\n    ])\r\n  ],\r\n  styleUrls: ['./swipe-card.component.scss'],\r\n  templateUrl: './swipe-card.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class SwipeCardComponent {\r\n\r\n  @Input() swipeButton: AppButton;\r\n  @Input() navButton: AppButton;\r\n  @Input() lockPosition: \"open\" | \"close\" | false | null;\r\n\r\n  isClosed: boolean = true;\r\n\r\n  private navDisabled: boolean = false;\r\n\r\n  constructor() { }\r\n\r\n  hideSwipeAction(e: any, state: boolean): void{\r\n    if(this.lockPosition) return;\r\n    this.isClosed = state;\r\n  }\r\n\r\n  handleSwipeBtnClick = (e: any): void => { \r\n    e.preventDefault(); \r\n    if(this.lockPosition === \"close\") return;\r\n    this.navDisabled = true;\r\n    setTimeout(() => this.navDisabled = false, 200); //Prevent click event from nav button to fire accidentally. \r\n    this.isClosed = true;\r\n    this.handleFn(this.swipeButton.callback, this.swipeButton.params);\r\n  };\r\n\r\n  handleNavClick = (e: any): void => {\r\n    if(!this.navButton?.callback || this.navDisabled) return;\r\n    this.handleFn(this.navButton.callback, this.navButton.params);\r\n  }\r\n\r\n  private handleFn(fn: Function, parameters: any[]){\r\n    if(parameters) fn(...parameters);\r\n    else fn();\r\n  }\r\n\r\n}\r\n","<mat-card\n    fxLayout=\"row\" fxLayoutAlign=\"start stretch\" class=\"swipe-card\">\n\n  <div class=\"swipe-hidden-content\" matRipple \n    fxLayout=\"column\" fxLayoutAlign=\"center center\"\n    [ngClass]=\"swipeButton.color\" \n    (press)=\"handleSwipeBtnClick($event)\">\n        <mat-icon class=\"scale-125\">{{ swipeButton.icon }}</mat-icon>\n  </div>\n\n  <div fxFlex class=\"swipe-content\"\n    matRipple [matRippleDisabled]=\"!navButton\"\n    (click)=\"handleNavClick($event)\"\n    [@openCloseConfirm]=\"lockPosition || (isClosed ? 'close' : 'open')\"\n    (swiperight)=\"hideSwipeAction($event, false)\" \n    (swipeleft)=\"hideSwipeAction($event, true)\">\n    <ng-content>\n      \n    </ng-content>\n  </div>\n\n</mat-card>","  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"16px\" *ngIf=\"summary\">\n    <div fxLayout=\"column\" fxLayoutAlign=\"center center\" *ngIf=\"summary.weekNr; else yearView\">\n        <span class=\"mat-body m-0 line-height-100\">Uke</span>\n        <span class=\"mat-headline m-0 line-height-100\">{{ summary.weekNr }}</span>\n      </div>\n    \n      <ng-template #yearView>\n        <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n          <span class=\"mat-body m-0 line-height-100\">År</span>\n          <span class=\"mat-headline m-0 line-height-100\">{{ summary.year }}</span>\n        </div>\n      </ng-template>\n    \n      <span fxLayout=\"column\" fxLayoutAlign=\"center start\" class=\"ellipsis\">\n        <span *ngIf=\"summary.openHours > 0; else confirmed\" class=\"mat-subheading-2 m-0 color-warn line-height-100\">\n          Åpen\n        </span>\n        <ng-template #confirmed>\n          <span class=\"mat-subheading-2 m-0 color-accent line-height-100\"\n            >Alle timer låst\n          </span>\n        </ng-template>\n        <span class=\"mat-body m-0 line-height-100\">\n            {{ summary.openHours }} timer åpne\n        </span>\n        <span class=\"mat-body m-0 line-height-100\"\n          >{{ summary.confirmedHours }} timer låst\n        </span>\n        <span *ngIf=\"summary.fullName\" class=\"mat-body-2 m-0 line-height-100\">\n          {{summary.fullName}}\n        </span>\n      </span>\n    \n      <mat-icon class=\"ml-auto\">chevron_right</mat-icon>    \n  </div>\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { TimesheetSummary } from '../../interfaces/timesheet-summary.interface';\r\n\r\n@Component({\r\n  selector: 'app-timesheet-summary-card-content',\r\n  templateUrl: './timesheet-summary-card-content.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TimesheetSummaryCardContentComponent {\r\n\r\n  @Input() summary: TimesheetSummary;\r\n\r\n  constructor() { }\r\n\r\n}\r\n","<div class=\"h-100 max-width\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n    \n    <cdk-virtual-scroll-viewport itemSize=\"82\" maxBufferPx=\"800\" minBufferPx=\"800\" fxFlex>\n        <app-swipe-card *cdkVirtualFor=\"let summary of summaries; trackBy: trackByWeek; templateCacheSize:0\" \n            [lockPosition]=\"!isXs ? 'open' : summary.openHours === 0 ? 'close' : null\" \n            [navButton]=\"{callback: selectWeek, params: summary.weekNr}\"\n            [swipeButton]=\"{\n                        callback: changeTimesheetStatuses, \n                        params: [summary.timesheets], \n                        icon: summary.openHours > 0 ? 'lock_open' : 'lock', \n                        color: summary.openHours > 0 ? 'warn' : 'accent'}\">\n            <app-timesheet-summary-card-content [summary]=\"summary\"></app-timesheet-summary-card-content>\n        </app-swipe-card>\n    </cdk-virtual-scroll-viewport>\n  \n</div>\n\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Timesheet } from 'src/app/core/models';\r\nimport { TimesheetSummary } from 'src/app/timesheet-modules/shared-timesheet/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-timesheet-admin-week-list-view',\r\n  templateUrl: './timesheet-admin-week-list-view.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TimesheetAdminWeekListViewComponent {\r\n\r\n  @Input() summaries: TimesheetSummary[];\r\n  @Input() isXs: boolean;\r\n\r\n  @Output() timesheetsConfirmed = new EventEmitter<Timesheet[]>();\r\n  @Output() weekSelected = new EventEmitter<number>();\r\n\r\n  constructor() { }\r\n\r\n  trackByWeek = (index:number, summary: TimesheetSummary): number => summary.weekNr;\r\n\r\n  changeTimesheetStatuses = (timesheets: Timesheet[]): void => \r\n    this.timesheetsConfirmed.emit(timesheets)\r\n\r\n  selectWeek = (weekNr: number) => this.weekSelected.emit(weekNr);\r\n  \r\n}\r\n","<app-main-skeleton overlayMode=\"true\">\n\n    <app-main-top-nav-bar navbar [config]=\"navConfig$ | async\">\n    </app-main-top-nav-bar>\n\n    <ng-container *ngIf=\"(summaries$ | async) else loading; let summaries\">\n        <app-timesheet-admin-week-list-view *ngIf=\"summaries?.length else loading\"\n            [summaries]=\"summaries\"\n            [isXs]=\"isXs$ | async\"\n            (timesheetsConfirmed)=\"confirmTimesheets($event)\"\n            (weekSelected)=\"selectWeek($event)\">\n        </app-timesheet-admin-week-list-view>\n    </ng-container>\n\n</app-main-skeleton>\n\n<ng-template #noContent>\n    <div class=\"w-100 text-center mt-2 mat-h3\">Fant ingen timer!</div>\n</ng-template>\n\n<ng-template #loading>\n    <mat-spinner *ngIf=\"loading$ | async else noContent\" class=\"center-spinner\" color=\"accent\"></mat-spinner>\n</ng-template>","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\nimport { Timesheet } from 'src/app/core/models';\r\nimport { DeviceInfoService } from 'src/app/core/services/device-info.service';\r\nimport { LoadingService } from 'src/app/core/services/loading.service';\r\nimport { MainTopNavConfig } from 'src/app/shared/components/main-top-nav-bar/main-top-nav.config';\r\nimport { WeekCriteriaForm, WeekCriteriaFormState } from 'src/app/shared/constants/forms/week-criteria-controls.const';\r\nimport { TimesheetStatus } from 'src/app/shared/enums';\r\nimport { FormService } from 'src/app/shared/form';\r\nimport { WeekCriteria } from '../../shared-timesheet/interfaces';\r\nimport { TimesheetAdminFacade } from '../timesheet-admin.facade';\r\n\r\n@Component({\r\n  selector: 'app-timesheet-admin-week-list',\r\n  templateUrl: './timesheet-admin-week-list.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TimesheetAdminWeekListComponent {\r\n   \r\n  loading$ = this.loadingService.queryLoading$;\r\n\r\n  summaries$ = this.facade.weeklySummaries$.pipe(map(x => x?.sort((a, b) => b.weekNr - a.weekNr)));\r\n\r\n  isXs$ = this.deviceInfoService.isXs$;\r\n\r\n  navConfig$ =  this.facade.weekCriteria$.pipe(map(x => this.getNavConfig(x)));\r\n\r\n  constructor(\r\n    private loadingService: LoadingService,\r\n    private facade: TimesheetAdminFacade,\r\n    private formService: FormService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private deviceInfoService: DeviceInfoService) {\r\n      const criteria = this.route.snapshot.params.criteria;\r\n      this.facade.updateCriteria(criteria ? JSON.parse(criteria) : {});\r\n    }\r\n\r\n  confirmTimesheets = (timesheets: Timesheet[]): void => {\r\n    if(!timesheets) return;\r\n    \r\n    let ids: string[] = [];\r\n    for(let i = 0; i < timesheets.length; i++){\r\n      const timesheet = timesheets[i];\r\n      if(timesheet.status === TimesheetStatus.Open) ids.push(timesheet.id);\r\n    }\r\n\r\n    if(ids.length === 0) return;\r\n\r\n    this.facade.updateStatuses(ids, TimesheetStatus.Confirmed);\r\n  }\r\n\r\n  selectWeek = (weekNr: number) => \r\n    this.router.navigate(['timer', {weekNr}], {relativeTo: this.route})\r\n  \r\n  private openWeekFilter = (): void => {\r\n    this.formService.open<WeekCriteria, WeekCriteriaFormState>({\r\n      formConfig: {...WeekCriteriaForm, \r\n        disabledControls: {weekNr: true}, \r\n        noRenderDisabledControls: true,\r\n        initialValue: this.facade.weekCriteria}, \r\n      formState: this.facade.weekCriteriaFormState$,\r\n      navConfig: {title: \"Velg filtre\"},\r\n      submitCallback: (val: WeekCriteria) => this.facade.updateCriteria(val)\r\n    })\r\n  } \r\n    \r\n  private onBack = () => { \r\n    this.router.navigate([\"../\"], {relativeTo: this.route})\r\n  }\r\n\r\n  private getNavConfig(weekCriteria: WeekCriteria): MainTopNavConfig {\r\n    return {\r\n      title:  \"Uker\",\r\n      subTitle: (weekCriteria?.year || '') + ' - ' + (weekCriteria?.user?.userName || ''),\r\n      backFn: this.onBack,\r\n      buttons: [{icon: 'filter_list', color: 'accent', callback: this.openWeekFilter}]\r\n    }\r\n  }\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TimesheetAdminListComponent } from './timesheet-admin-list/timesheet-admin-list.component';\r\nimport { TimesheetAdminUserListComponent } from './timesheet-admin-user-list/timesheet-admin-user-list.component';\r\nimport { TimesheetAdminWeekListComponent } from './timesheet-admin-week-list/timesheet-admin-week-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TimesheetAdminUserListComponent,\r\n    children:[\r\n      {\r\n        path: 'uker',\r\n        component: TimesheetAdminWeekListComponent,\r\n        data: {child: true},\r\n        children: [\r\n          {\r\n            path: 'timer',\r\n            component: TimesheetAdminListComponent,\r\n            data: {child: true},\r\n          },\r\n        ]\r\n      },\r\n    ]\r\n  },  \r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TimesheetAdminRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ApiUrl } from 'src/app/core/api-url.enum';\r\nimport { HttpRequest } from 'src/app/core/services/http/interfaces';\r\nimport { HttpCommand, HttpActionId } from 'src/app/core/services/http/state/http.effect';\r\nimport { DispatchedAction } from 'src/app/state/action-dispatcher';\r\nimport { StateAction } from 'src/app/state/interfaces';\r\nimport { Effect } from 'src/app/state/interfaces/effect.interface';\r\nimport { listenTo } from 'src/app/state/operators/listen-to.operator';\r\nimport { UpdateStatusesActionId, UpdateStatusesStateCommand } from './update-statuses-state-command.interface';\r\n\r\n@Injectable()\r\nexport class UpdateStatusesHttpEffect implements Effect<UpdateStatusesStateCommand> {\r\n\r\n    constructor(){}\r\n\r\n    handle$(actions$: Observable<DispatchedAction<UpdateStatusesStateCommand>>): Observable<StateAction> {\r\n        return actions$.pipe(\r\n            listenTo([UpdateStatusesActionId]),\r\n            map(x => { return <HttpCommand>{\r\n                actionId: HttpActionId, propagate: true,\r\n                request: this.createHttpRequest(x.action),\r\n                stateSnapshot: x.stateSnapshot\r\n            }}),\r\n        )\r\n    }\r\n\r\n    protected createHttpRequest(command: UpdateStatusesStateCommand): HttpRequest{\r\n        return {\r\n            method: \"PUT\", \r\n            body: {ids: command.ids, status: command.status}, \r\n            apiUrl: `${ApiUrl.Timesheet}/Status`,\r\n            cancelMessage: \"Oppdatering av timestatuser er reversert\"\r\n        }\r\n    }\r\n\r\n}","\r\nimport { _addOrUpdateRange } from 'src/app/shared-app/helpers/array/add-or-update-range.helper';\r\nimport { Reducer, StateTimesheets } from 'src/app/state/interfaces';\r\nimport { UpdateStatusesActionId, UpdateStatusesStateCommand } from './update-statuses-state-command.interface';\r\n\r\nexport const UpdateStatusesReducer: Reducer<StateTimesheets> = {\r\n    actionId: UpdateStatusesActionId, stateProperties: [\"timesheets\"], noDeepCloneState: true,\r\n    reducerFn: (state: Readonly<StateTimesheets>, action: UpdateStatusesStateCommand): StateTimesheets => {\r\n        const updatedTimesheets = action.ids.map(id => { return {id, status: action.status} });\r\n        return {timesheets: _addOrUpdateRange(state.timesheets, updatedTimesheets, \"id\")}  \r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { SaveModelProviders } from 'src/app/model/state/providers.const';\r\nimport { STORE_EFFECTS, STORE_REDUCERS } from 'src/app/state/injection-tokens';\r\nimport { SharedTimesheetModule } from '../shared-timesheet/shared-timesheet.module';\r\nimport { FetchTimesheetProviders } from '../shared-timesheet/state/providers.const';\r\nimport { SwipeCardComponent } from './components/swipe-card/swipe-card.component';\r\nimport { TimesheetAdminListViewComponent } from './timesheet-admin-list/timesheet-admin-list-view/timesheet-admin-list-view.component';\r\nimport { TimesheetAdminListComponent } from './timesheet-admin-list/timesheet-admin-list.component';\r\nimport { TimesheetAdminRoutingModule } from './timesheet-admin-routing.module';\r\nimport { TimesheetAdminUserListComponent } from './timesheet-admin-user-list/timesheet-admin-user-list.component';\r\nimport { TimesheetAdminWeekListViewComponent } from './timesheet-admin-week-list/timesheet-admin-week-list-view/timesheet-admin-week-list-view.component';\r\nimport { TimesheetAdminWeekListComponent } from './timesheet-admin-week-list/timesheet-admin-week-list.component';\r\nimport { UpdateStatusesHttpEffect } from './update-statuses/update-statuses.http.effect';\r\nimport { UpdateStatusesReducer } from './update-statuses/update-statuses.reducer';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TimesheetAdminListComponent,\r\n    TimesheetAdminListViewComponent,\r\n    TimesheetAdminUserListComponent,\r\n    SwipeCardComponent,\r\n    TimesheetAdminWeekListComponent,\r\n    TimesheetAdminWeekListViewComponent\r\n  ],\r\n  providers:[\r\n    { provide: STORE_EFFECTS, useClass: UpdateStatusesHttpEffect, multi: true},\r\n    { provide: STORE_REDUCERS, useValue: UpdateStatusesReducer, multi: true},\r\n    ...SaveModelProviders,\r\n    ...FetchTimesheetProviders,\r\n  ],\r\n  imports: [\r\n    SharedTimesheetModule,\r\n    TimesheetAdminRoutingModule\r\n  ]\r\n})\r\nexport class TimesheetAdminModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Model } from 'src/app/core/models';\r\nimport { HttpRequest } from 'src/app/core/services/http/interfaces';\r\nimport { HttpActionId, HttpCommand } from 'src/app/core/services/http/state/http.effect';\r\nimport { translations } from 'src/app/shared/translations';\r\nimport { StateAction } from 'src/app/state/interfaces';\r\nimport { Effect } from 'src/app/state/interfaces/effect.interface';\r\nimport { listenTo } from 'src/app/state/operators/listen-to.operator';\r\nimport { DispatchedAction } from '../../../state/action-dispatcher';\r\nimport { ModelConfig, ModelStateConfig } from '../../model-state.config';\r\nimport { DeleteModelActionId, DeleteModelStateCommand } from './delete-model-action.const';\r\n\r\n@Injectable()\r\nexport class DeleteModelHttpEffect implements Effect<DeleteModelStateCommand>{\r\n\r\n    constructor(){ }\r\n\r\n    handle$(actions$: Observable<DispatchedAction<DeleteModelStateCommand>>): Observable<StateAction> {\r\n        return actions$.pipe(\r\n            listenTo([DeleteModelActionId]),\r\n            map(x => { return <HttpCommand>{\r\n                actionId: HttpActionId, propagate: true,\r\n                request: this.createHttpRequest(x.action),\r\n                stateSnapshot: x.stateSnapshot\r\n            }}),  \r\n        )\r\n    }\r\n\r\n    private createHttpRequest(command: DeleteModelStateCommand): HttpRequest {\r\n        const modelConfig = ModelStateConfig.get(command.stateProp);\r\n        if(!modelConfig) console.error(`No model config for property ${command.stateProp}`);\r\n\r\n        return {\r\n            apiUrl: this.createApiUrl(command, modelConfig),\r\n            body: this.createHttpBody(command),\r\n            method: this.createHttpMethod(command),\r\n            cancelMessage: this.createCancelMessage(command, modelConfig)\r\n        }\r\n    }\r\n\r\n    protected createCancelMessage(command: DeleteModelStateCommand, modelConfig: ModelConfig<Model>): string{\r\n        const multi = command.ids?.length > 1;\r\n\r\n        const entityWord = \r\n            translations[(multi ? command.stateProp : modelConfig.foreignProp).toLowerCase()];\r\n        \r\n        return `Sletting av ${command.ids?.length || ''} ${entityWord} med id ${command.ids || command.id} er reversert!`;\r\n    }\r\n  \r\n    protected createHttpBody(command: DeleteModelStateCommand): {ids: any[]} {\r\n        return command.id ? null : {ids: command.ids};\r\n    }\r\n\r\n    protected createApiUrl(command: DeleteModelStateCommand, modelConfig: ModelConfig<Model>): string {\r\n        const endUri = command.id ? `/${command.id}` : \"/DeleteRange\";\r\n        return modelConfig.apiUrl + endUri;\r\n    }\r\n\r\n    protected createHttpMethod(command: DeleteModelStateCommand): \"DELETE\" | \"POST\" {\r\n        return command.id ? \"DELETE\" : \"POST\";\r\n    }\r\n\r\n}","import { Reducer } from '../../../state/interfaces/reducer.interface';\r\nimport { _deleteModelWithChildren } from '../../helpers/delete-model-with-children.helper';\r\nimport { ModelStateConfig } from '../../model-state.config';\r\nimport { DeleteModelActionId, DeleteModelStateCommand } from './delete-model-action.const';\r\n\r\nexport const DeleteModelReducer: Reducer<any> = {\r\n    actionId: DeleteModelActionId,\r\n    reducerFn: (state: any, action: DeleteModelStateCommand) => _deleteModelWithChildren(state, action.stateProp, action),\r\n    stateProperties: _statePropertiesGetter\r\n}\r\n\r\nfunction _statePropertiesGetter(command: DeleteModelStateCommand): string[]{\r\n    const modelConfig = ModelStateConfig.get(command.stateProp);\r\n\r\n    let stateProps: any[] = [command.stateProp];\r\n\r\n    if(modelConfig.children) \r\n        stateProps = stateProps.concat(modelConfig.children);\r\n\r\n    return stateProps;\r\n}","import { _convertArrayToObject } from 'src/app/shared-app/helpers/array/convert-array-to-object.helper';\r\nimport { _filter } from 'src/app/shared-app/helpers/array/filter.helper';\r\nimport { Prop } from 'src/app/shared-app/prop.type';\r\nimport { ModelState } from '../interfaces/model-state.interface';\r\nimport { ModelStateConfig } from '../model-state.config';\r\n\r\nexport function _deleteModelWithChildren<TState>(\r\n  state: TState, \r\n  stateProp: Prop<ModelState>, \r\n  cfg: {id?: string, ids?: string[]}\r\n): Partial<TState>{\r\n\r\n  if(!cfg.id && !cfg.ids) console.error(\"deleteEntityChildren config requires either id or ids property set.\")       \r\n  \r\n  let filterFactory: (key: string) => (x: Object) => boolean;\r\n  if(cfg.id) \r\n    filterFactory = (key: string) => (x: Object) => x[key] !== cfg.id;  \r\n  else if(cfg.ids) {\r\n    const idMap = _convertArrayToObject<string>(cfg.ids);\r\n    filterFactory = (key: string) => (x: Object) => idMap[x[key]] === undefined;\r\n  }\r\n\r\n  const modelCfg = ModelStateConfig.get(stateProp);\r\n  const newState = {};\r\n\r\n  newState[stateProp] = \r\n    _filter(state[stateProp], filterFactory(modelCfg.identifier));\r\n\r\n  if(modelCfg.children?.length)\r\n    for(var childProp of modelCfg.children)\r\n      newState[childProp] = \r\n        _filter(state[childProp], filterFactory(modelCfg.foreignKey));\r\n\r\n  return newState;\r\n\r\n}","import { ApiUrl } from 'src/app/core/api-url.enum'\r\nimport { ModelState } from '../../interfaces'\r\n\r\nexport const MailApiUrlMap: { [key in keyof Partial<ModelState>]: string } = {\r\n    missionImages: `${ApiUrl.MissionImage}/SendImages`,\r\n    missionDocuments: `${ApiUrl.MissionDocument}/SendDocuments`,\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { ApiService } from 'src/app/core/services/api.service';\r\nimport { StateAction } from 'src/app/state/interfaces';\r\nimport { Effect } from 'src/app/state/interfaces/effect.interface';\r\nimport { listenTo } from 'src/app/state/operators/listen-to.operator';\r\nimport { DispatchedAction } from '../../../state/action-dispatcher';\r\nimport { MailApiUrlMap } from './mail-api-url.map';\r\nimport { MailModelsActionId, MailModelsStateCommand } from './mail-models-state-command.interface';\r\n\r\n@Injectable()\r\nexport class MailModelsHttpEffect implements Effect<MailModelsStateCommand>{\r\n\r\n    constructor(private apiService: ApiService){}\r\n    \r\n    handle$(actions$: Observable<DispatchedAction<MailModelsStateCommand>>): Observable<StateAction> {\r\n        return actions$.pipe(\r\n            listenTo([MailModelsActionId]),\r\n            mergeMap(({action}) => \r\n                this.apiService.post(MailApiUrlMap[action.stateProp], {ids: action.ids, toEmail: action.toEmail})),\r\n        )\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ModelFile } from 'src/app/core/models';\r\nimport { HttpCommand, HttpActionId } from 'src/app/core/services/http/state/http.effect';\r\nimport { StateAction } from 'src/app/state/interfaces';\r\nimport { Effect } from 'src/app/state/interfaces/effect.interface';\r\nimport { listenTo } from 'src/app/state/operators/listen-to.operator';\r\nimport { DispatchedAction } from '../../../state/action-dispatcher';\r\nimport { SaveModelHttpEffect } from '../save-model/save-model.http.effect';\r\nimport { SaveModelFileActionId, SaveModelFileStateCommand } from './save-model-file-action.const';\r\n\r\n@Injectable()\r\nexport class SaveModelFileHttpEffect extends SaveModelHttpEffect \r\n    implements Effect<SaveModelFileStateCommand<ModelFile>>{\r\n\r\n    constructor(){ super() }\r\n\r\n    handle$(actions$: Observable<DispatchedAction<SaveModelFileStateCommand<ModelFile>>>): Observable<StateAction> {\r\n        return actions$.pipe(\r\n            listenTo([SaveModelFileActionId]),\r\n            map(x => { return <HttpCommand>{\r\n                actionId: HttpActionId, propagate: true,\r\n                request: this.createHttpRequest(x.action),\r\n                stateSnapshot: x.stateSnapshot\r\n            }}), \r\n        )\r\n    }\r\n\r\n    protected createHttpBody(command: SaveModelFileStateCommand<ModelFile>): FormData {\r\n        const body: FormData = new FormData();   \r\n        const file = command.fileWrapper.modifiedFile;\r\n        if(file) body.append(\"files\", file, file.name);\r\n        body.append(\"command\", JSON.stringify(command.entity));\r\n        return body;\r\n    }\r\n\r\n}","import { ModelFile } from 'src/app/core/models';\r\nimport { Reducer } from '../../../state/interfaces/reducer.interface';\r\nimport { SaveModelReducer } from '../save-model/save-model.reducer';\r\nimport { SaveModelFileActionId, SaveModelFileStateCommand } from './save-model-file-action.const';\r\n\r\nexport const SaveModelFileReducer: Reducer<any> = {\r\n    actionId: SaveModelFileActionId,\r\n    reducerFn: _reducerFn,\r\n    stateProperties: SaveModelReducer.stateProperties\r\n}\r\n\r\nfunction _reducerFn(state: any, command: SaveModelFileStateCommand<ModelFile>): Partial<any>{  \r\n\r\n    command.entity = {\r\n        ...command.entity, \r\n        fileName: command.fileWrapper?.modifiedFile?.name,\r\n        temp_localFileUrl: URL.createObjectURL(command.fileWrapper?.modifiedFile)\r\n    }; \r\n\r\n    return SaveModelReducer.reducerFn(state, command);       \r\n}","import { Provider } from '@angular/core';\r\nimport { STORE_EFFECTS, STORE_REDUCERS } from 'src/app/state/injection-tokens';\r\nimport { DeleteModelHttpEffect } from './delete-model/delete-model.http.effect';\r\nimport { DeleteModelReducer } from './delete-model/delete-model.reducer';\r\nimport { MailModelsHttpEffect } from './mail-models/mail-models.http.effect';\r\nimport { SaveModelFileHttpEffect } from './save-model-file/save-model-file.http.effect';\r\nimport { SaveModelFileReducer } from './save-model-file/save-model-file.reducer';\r\nimport { SaveModelHttpEffect } from './save-model/save-model.http.effect';\r\nimport { SaveModelReducer } from './save-model/save-model.reducer';\r\n\r\nexport const SaveModelProviders: Provider[] = [\r\n    {provide: STORE_EFFECTS, useClass: SaveModelHttpEffect, multi: true},\r\n    {provide: STORE_REDUCERS, useValue: SaveModelReducer, multi: true},\r\n]\r\n\r\nexport const SaveModelFileProviders: Provider[] = [\r\n    {provide: STORE_EFFECTS, useClass: SaveModelFileHttpEffect, multi: true},\r\n    {provide: STORE_REDUCERS, useValue: SaveModelFileReducer, multi: true},\r\n]\r\n\r\nexport const DeleteModelProviders: Provider[] = [\r\n    {provide: STORE_EFFECTS, useClass: DeleteModelHttpEffect, multi: true},\r\n    {provide: STORE_REDUCERS, useValue: DeleteModelReducer, multi: true},\r\n]\r\n\r\nexport const MailModelsProviders: Provider[] = [\r\n    {provide: STORE_EFFECTS, useClass: MailModelsHttpEffect, multi: true},\r\n]\r\n","import { Prop } from '../../prop.type';\r\n\r\nexport function _find<T>(array: T[], value: any, identifier: Prop<T>){\r\n    if(!array || array.length == 0 || !value) return;\r\n\r\n    for(let i = 0; i < array.length; i++){\r\n      const obj = array[i];\r\n      if(obj[identifier] === value) return {...obj};   \r\n    }\r\n}","import { Model } from 'src/app/core/models';\r\nimport { _convertArrayToObject } from 'src/app/shared-app/helpers/array/convert-array-to-object.helper';\r\nimport { Prop } from 'src/app/shared-app/prop.type';\r\nimport { ModelState } from '../interfaces/model-state.interface';\r\nimport { ModelConfig, ModelStateConfig } from '../model-state.config';\r\n\r\ntype RelationInclude = Prop<ModelState>[] | \"all\";\r\n\r\nexport class GetWithRelationsConfig {\r\n\r\n  private propConfig: ModelConfig<Model>;\r\n\r\n  includedForeignProps: Prop<ModelState>[];\r\n  includedChildProps: Prop<ModelState>[];\r\n  includedProps: Prop<ModelState>[];\r\n\r\n  constructor(\r\n    readonly modelProp: Prop<ModelState>,\r\n    children?: RelationInclude,\r\n    foreigns?: RelationInclude\r\n  ) {\r\n\r\n    this.propConfig = ModelStateConfig.get(this.modelProp);\r\n\r\n    const fkProps = this.propConfig?.foreigns;\r\n    this.includedForeignProps = \r\n      foreigns === \"all\" ? (fkProps || []) : this.getProps(foreigns, fkProps)\r\n\r\n    const childProps = this.propConfig?.children\r\n    this.includedChildProps = \r\n      children === \"all\" ? (childProps || []) : this.getProps(children, childProps) \r\n\r\n    this.includedProps = [modelProp, ...this.includedChildProps, ...this.includedForeignProps]\r\n  }\r\n\r\n  private getProps(includes: Prop<ModelState>[], props: Prop<ModelState>[]): Prop<ModelState>[]{  \r\n    if(!props || !includes?.length) return []; \r\n    let included: Prop<ModelState>[] = []; \r\n    const propMap = _convertArrayToObject(props);\r\n    for(const include of includes){\r\n      if(propMap[include]) included.push(include);\r\n      else \r\n        console.error(`'${include}' not registered as a relation in model config for '${this.modelProp}'`)\r\n    }\r\n    return included;    \r\n  }\r\n}\r\n\r\n","\r\nimport { Model } from 'src/app/core/models/base-entity.interface';\r\nimport { SaveAction } from 'src/app/shared/save-action.interface';\r\nimport { ModelStateCommand } from '../interfaces/model-state-command.interface';\r\n\r\nexport const SaveModelActionId = \"SAVE_MODEL\";\r\n\r\nexport interface SaveModelStateCommand<TModel extends Model> extends ModelStateCommand{\r\n    saveAction?: SaveAction;\r\n    entity: TModel;\r\n    apiUrlOverride?: string;\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Model } from 'src/app/core/models';\r\nimport { HttpRequest } from 'src/app/core/services/http/interfaces';\r\nimport { HttpActionId, HttpCommand } from 'src/app/core/services/http/state/http.effect';\r\nimport { ActionType } from 'src/app/shared-app/enums';\r\nimport { translations } from 'src/app/shared/translations';\r\nimport { StateAction } from 'src/app/state/interfaces';\r\nimport { Effect } from 'src/app/state/interfaces/effect.interface';\r\nimport { listenTo } from 'src/app/state/operators/listen-to.operator';\r\nimport { DispatchedAction } from '../../../state/action-dispatcher';\r\nimport { ModelConfig, ModelStateConfig } from '../../model-state.config';\r\nimport { SaveModelActionId, SaveModelStateCommand } from './save-model-action.const';\r\n\r\n@Injectable()\r\nexport class SaveModelHttpEffect implements Effect<SaveModelStateCommand<Model>> {\r\n\r\n    constructor(){ }\r\n\r\n    handle$(actions$: Observable<DispatchedAction<SaveModelStateCommand<Model>>>): Observable<StateAction> {\r\n        return actions$.pipe(\r\n            listenTo([SaveModelActionId]),\r\n            map(x => { return <HttpCommand>{\r\n                actionId: HttpActionId, propagate: true,\r\n                request: this.createHttpRequest(x.action),\r\n                stateSnapshot: x.stateSnapshot\r\n            }}), \r\n        )\r\n    }\r\n\r\n    protected createHttpRequest(command: SaveModelStateCommand<Model>): HttpRequest{\r\n        const modelConfig = ModelStateConfig.get(command.stateProp);\r\n        if(!modelConfig) console.error(`No model config for property ${command.stateProp}`);\r\n\r\n        return {\r\n            apiUrl: command.apiUrlOverride || this.createApiUrl(command, modelConfig),\r\n            body: this.createHttpBody(command),\r\n            method: this.createHttpMethod(command),\r\n            cancelMessage: this.createCancelMessage(command, modelConfig)\r\n        }\r\n    }\r\n\r\n    protected createCancelMessage(command: SaveModelStateCommand<Model>, modelConfig: ModelConfig<Model>): string{\r\n        const saveWord = command.saveAction === ActionType.Update ? \"Oppdatering\" : \"Oppretting\";\r\n        const entityWord = translations[modelConfig.foreignProp?.toLowerCase()].toLowerCase();\r\n        const displayPropWord = translations[modelConfig.displayProp?.toLowerCase()].toLowerCase();\r\n        const displayPropValue = command.entity[modelConfig.displayProp];\r\n        return `${saveWord} av ${entityWord} med ${displayPropWord} ${displayPropValue} er reversert!`;\r\n    }\r\n  \r\n    protected createHttpBody(command: SaveModelStateCommand<Model>): any {\r\n        return command.entity;\r\n    }\r\n\r\n    protected createApiUrl(command: SaveModelStateCommand<Model>, modelConfig: ModelConfig<Model>): string {\r\n        const identfifier = modelConfig.identifier;\r\n        const endUri = (command.saveAction === ActionType.Update) ? `/${command.entity[identfifier]}` : \"\";\r\n        return modelConfig.apiUrl + endUri;\r\n    }\r\n\r\n    protected createHttpMethod(command: SaveModelStateCommand<Model>): \"PUT\" | \"POST\" {\r\n        return  command.saveAction === ActionType.Update ? \"PUT\" : \"POST\";\r\n    }\r\n\r\n}","import { ModelFile } from 'src/app/core/models/base-entity-file.interface';\r\nimport { ModelFileWrapper } from '../../model-file.wrapper';\r\nimport { SaveModelStateCommand } from '../save-model/save-model-action.const';\r\n\r\nexport const SaveModelFileActionId = \"SAVE_MODEL_FILE\";\r\n\r\nexport interface SaveModelFileStateCommand<TModel extends ModelFile> extends SaveModelStateCommand<TModel>{\r\n    fileWrapper: ModelFileWrapper;\r\n}\r\n","import { ModelStateCommand } from '../interfaces/model-state-command.interface';\r\n\r\nexport const DeleteModelActionId = \"DELETE_MODEL\";\r\n\r\nexport interface DeleteModelStateCommand extends ModelStateCommand{\r\n    id?: any;\r\n    ids?: any[];\r\n}","import { ModelStateCommand } from '../interfaces/model-state-command.interface';\r\n\r\nexport const MailModelsActionId = \"MAIL_MODELS\"\r\n\r\nexport interface MailModelsStateCommand extends ModelStateCommand {\r\n    ids: any[];\r\n    toEmail: string;\r\n}","export function _add<T>(array: T[], value: T): T[]{\r\n    if(!array || array.length == 0) return array;\r\n    let arr = array.slice();\r\n    arr.unshift(value);\r\n    return arr;\r\n}","import { Model } from 'src/app/core/models';\r\nimport { ActionType } from 'src/app/shared-app/enums';\r\nimport { _add } from 'src/app/shared-app/helpers/array/add.helper';\r\nimport { _update } from 'src/app/shared-app/helpers/array/update.helper';\r\nimport { Reducer } from '../../../state/interfaces/reducer.interface';\r\nimport { _modifyModelWithForeigns } from '../../helpers/modify-model-with-foreigns.helper';\r\nimport { ModelStateConfig } from '../../model-state.config';\r\nimport { SaveModelActionId, SaveModelStateCommand } from './save-model-action.const';\r\n\r\nexport const SaveModelReducer: Reducer<any> = {\r\n    actionId: SaveModelActionId,\r\n    reducerFn: _reducerFn,\r\n    stateProperties: _statePropertiesGetter\r\n}\r\n\r\nfunction _statePropertiesGetter(command: SaveModelStateCommand<Model>): string[]{\r\n    const stateProps: string[] = [command.stateProp];\r\n    const modelConfig = ModelStateConfig.get(command.stateProp); \r\n    if(modelConfig.foreigns)\r\n       for(const fkProp of modelConfig.foreigns){\r\n          const fkCfg = ModelStateConfig.get(fkProp as any);\r\n          if(command.entity[fkCfg.foreignProp]) stateProps.push(fkProp);\r\n       }\r\n\r\n    return stateProps;\r\n}\r\n\r\nfunction _reducerFn(state: any, command: SaveModelStateCommand<Model>): Partial<any>{  \r\n    const modelConfig = ModelStateConfig.get(command.stateProp); \r\n\r\n    command.entity.updatedAt = new Date().getTime();  \r\n\r\n    let modifyFn: (entity: Model, entities: Model[]) => void;\r\n\r\n    if(command.saveAction === ActionType.Update) \r\n        modifyFn = (entity: Model, entities: Model[]) =>  _update(entities, entity, modelConfig.identifier)\r\n    else \r\n        modifyFn = (entity: Model, entities: Model[]) =>  _add(entities, entity)\r\n\r\n    return _modifyModelWithForeigns(state, command.stateProp, command.entity, modifyFn)          \r\n}\r\n","import { _add } from 'src/app/shared-app/helpers/array/add.helper';\r\nimport { Prop } from 'src/app/shared-app/prop.type';\r\nimport { ModelState } from '../interfaces/model-state.interface';\r\nimport { ModelStateConfig } from '../model-state.config';\r\n\r\nexport function _modifyModelWithForeigns<TState>(\r\n    state: TState, \r\n    stateProp: Prop<ModelState>, \r\n    entity: any, \r\n    entityFn: (entity: any, stateSlice: any) => any\r\n): Partial<TState>{\r\n\r\n    const propCfg = ModelStateConfig.get(stateProp);\r\n\r\n    for(var fkProp of propCfg.foreigns || []){\r\n        const fkPropConfig = ModelStateConfig.get(fkProp); //Key information about foreign prop\r\n        const foreignEntity = entity[fkPropConfig.foreignProp];\r\n        if(!foreignEntity) continue; //If no new entity, continue\r\n        const foreignEntityId = foreignEntity[fkPropConfig.identifier];\r\n        if(!foreignEntityId){ //No id on new entity? ignore and set null\r\n            console.error(`Entity from ${stateProp} has foreign property from ${fkProp} set with no ID`)\r\n            entity[fkPropConfig.foreignProp] = null;\r\n            continue\r\n        };\r\n        state[fkProp] = _add(state[fkProp], foreignEntity); //Add new fk entity\r\n        entity[fkPropConfig.foreignKey] = foreignEntityId; //Set foreign key on entity\r\n        entity[fkPropConfig.foreignProp] = null; //Remove foreign entity to prevent duplicate data    \r\n    }\r\n\r\n    state[stateProp] = entityFn(entity, state[stateProp]);\r\n\r\n    return state;\r\n}","export function _update<T>(array: T[], updatedObj: Partial<T>, identifier: string){\r\n    if(!array || array.length == 0) return array;\r\n    let arr = array.slice();\r\n    for(let i = 0; i < arr.length; i++){\r\n      let obj = arr[i];\r\n      if(obj[identifier] === updatedObj[identifier]){\r\n        arr[i] = {...Object.assign(obj, updatedObj)};\r\n        break;\r\n      }\r\n    }\r\n    return arr;\r\n}"],"sourceRoot":"webpack:///"}