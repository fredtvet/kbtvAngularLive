{"version":3,"sources":["./src/app/shared/directives/base-loading-overlay.directive.ts","./src/app/shared/directives/http-command-button.directive.ts","./src/app/login-prompt/login-prompt/login-form/login-form.component.ts","./src/app/login-prompt/login-prompt/login-form/login-form.component.html","./src/app/login-prompt/login-prompt/login-prompt.component.ts","./src/app/login-prompt/login-prompt/login-prompt.component.html","./src/app/login-prompt/login-prompt-routing.module.ts","./src/app/login-prompt/login-prompt-entry.component.ts","./src/app/login-prompt/login-prompt.module.ts"],"names":["addOverlay","el","classList","add","removeOverlay","remove","loadingService","elementRef","loadingSub","commandLoading$","subscribe","loading","nativeElement","ngOnDestroy","this","unsubscribe","HttpCommandButtonDirective","BaseLoadingOverlayDirective","fb","submitted","hidePassword","submitForm","authForm","emit","group","userName","required","password","get","LoginFormComponent","route","authService","authenticate","credentials","login","returnUrl","snapshot","root","url","toString","LoginPromptComponent","routes","path","component","router","queryParams","split","undefined","LoginPromptEntryComponent","LoginPromptRoutingModule","forChild","LoginPromptModule"],"mappings":"2SAAA,aAEI,cAUF,OARY,YAAAA,WAAV,SAAqBC,GACnBA,EAAGC,UAAUC,IAAI,kBAAmB,YAG5B,YAAAC,cAAV,SAAwBH,GACtBA,EAAGC,UAAUG,OAAO,kBAAmB,YAG3C,EAZF,G,YCKA,cAOE,WACUC,EACRC,GAFF,MAGE,cAAO,K,OAFC,EAAAD,iBAGR,EAAKE,WAAa,EAAKF,eAAeG,gBAAgBC,WAAU,SAAAC,GAC3DA,EACD,EAAKX,WAAWO,EAAWK,eAE3B,EAAKR,cAAcG,EAAWK,kB,SAZU,iBAgB9C,YAAAC,YAAA,WACKC,KAAKN,YAAYM,KAAKN,WAAWO,e,sCAjB3BC,GAA0B,uF,mDAA1BA,EAA0B,kG,EAHvC,CAGgDC,G,YCJhD,aAWE,WACUC,GADV,WACU,KAAAA,KALA,KAAAC,UAAY,IAAI,eAE1B,KAAAC,cAAe,EAWf,KAAAC,WAAa,WACL,MAAiB,EAAKC,SAAT,SACT,EAAKH,UAAUI,KADb,UAPZT,KAAKQ,SAAWR,KAAKI,GAAGM,MAAM,CAC5BC,SAAU,CAAC,QAAS,IAAWC,UAC/BC,SAAU,CAAC,WAAY,IAAWD,Y,OAStC,sBAAI,uBAAQ,C,IAAZ,WACE,OAAOZ,KAAKQ,SAASM,IAAI,a,gCAG3B,sBAAI,uBAAQ,C,IAAZ,WACE,OAAOd,KAAKQ,SAASM,IAAI,a,sEAxBhBC,GAAkB,wC,mDAAlBA,EAAkB,0mBCV/B,0CAA6B,wDAAY,EAAAR,gBACvC,0CAAoC,oCAAQ,8BAE5C,oDACE,8CAAmC,kCAAM,8BACzC,sCACF,8BAEA,oDACE,8CAAmC,uFACjC,yBACF,8BACA,uCACF,8BAEA,6CACE,6CAAU,sCAAS,8BACnB,uCACF,8BACA,kCAEA,6CACE,6CAAU,oCAAO,8BAAY,2CAC/B,8BAEF,+B,MAzBM,kDAUA,oHAE+D,+FAGL,sF,yGDXhE,GEAA,aASE,WACUS,EACAC,GADA,KAAAD,QACA,KAAAC,c,OAEV,YAAAC,aAAA,SAAaC,GACXnB,KAAKiB,YAAYG,MACfD,EACAnB,KAAKqB,WAAarB,KAAKgB,MAAMM,SAASC,KAAKC,IAAIC,a,sCAXxCC,GAAoB,wF,mDAApBA,EAAoB,0ZCTjC,8CAEE,0CACE,oCAEA,0CAA8C,2CAAY,iCAAM,2CAAe,8BACjF,8BAEA,oDAAgB,0DAAa,EAAAR,aAAA,MAAsB,8BAErD,gC,qEDNA,GEAMS,EAAiB,CACrB,CACEC,KAAM,GACNC,UCJJ,WAiBE,WACUb,EACAc,GADA,KAAAd,QACA,KAAAc,S,OARV,sBAAI,wBAAS,C,IAAb,WACE,IAAIN,EAAMxB,KAAKgB,MAAMM,SAASS,YAAuB,UAErD,OADGP,IAAQxB,KAAK8B,OAAON,IAAIQ,MAAM,KAAK,KAAIR,OAAMS,GACzCT,G,sEALEU,GAAyB,8E,mDAAzBA,EAAyB,+JAPpC,yCACE,iDAEF,+B,MAFoB,iF,6DAHtB,KDQA,2B,yDAIaC,I,+EAAAA,IAAwB,SAH1B,CAAC,IAAaC,SAAST,IACtB,O,EAFZ,GEJA,2B,yDAWaU,I,+EAAAA,IAAiB,SALnB,CACP,IACA,M,EARJ","file":"21.7bac5dc7e572a1ccb99c.js","sourcesContent":["export abstract class BaseLoadingOverlayDirective{\r\n\r\n    constructor() {}\r\n  \r\n    protected addOverlay(el: any){\r\n      el.classList.add(\"loading-overlay\", \"spinner\");\r\n    }\r\n  \r\n    protected removeOverlay(el: any){\r\n      el.classList.remove(\"loading-overlay\", \"spinner\");\r\n    }\r\n  \r\n  }","import { Directive, ElementRef } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { LoadingService } from 'src/app/core/services/loading.service';\r\nimport { BaseLoadingOverlayDirective } from './base-loading-overlay.directive';\r\n\r\n@Directive({\r\n  selector: '[appHttpCommandButton]'\r\n})\r\nexport class HttpCommandButtonDirective extends BaseLoadingOverlayDirective{\r\n\r\n  private loadingSub: Subscription;\r\n\r\n  constructor(\r\n    private loadingService: LoadingService,\r\n    elementRef: ElementRef) {\r\n    super();\r\n    this.loadingSub = this.loadingService.commandLoading$.subscribe(loading => {\r\n      if(loading) \r\n        this.addOverlay(elementRef.nativeElement);\r\n      else\r\n        this.removeOverlay(elementRef.nativeElement);\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if(this.loadingSub) this.loadingSub.unsubscribe();\r\n  }\r\n\r\n}\r\n","import { Component, ChangeDetectionStrategy, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Credentials } from 'src/app/core/services/auth';\r\n\r\n@Component({\r\n  selector: 'app-login-form',\r\n  templateUrl: './login-form.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class LoginFormComponent {\r\n  @Output() submitted = new EventEmitter<Credentials>();\r\n  authForm: FormGroup;\r\n  hidePassword = true;\r\n  \r\n  constructor(\r\n    private fb: FormBuilder\r\n  ) {\r\n    this.authForm = this.fb.group({\r\n      userName: ['leder', Validators.required],\r\n      password: ['passord1', Validators.required]\r\n    });\r\n  }\r\n\r\n  submitForm = () => {\r\n    const {value, valid} = this.authForm\r\n    if(valid) this.submitted.emit(value)\r\n  };\r\n\r\n  get userName() {\r\n    return this.authForm.get('userName');\r\n  }\r\n\r\n  get password() {\r\n    return this.authForm.get('password');\r\n  }\r\n}\r\n","<form [formGroup]=\"authForm\" (ngSubmit)=\"submitForm()\" fxLayout=\"column\" >\n  <span class=\"mat-subheading-2 mb-2\">Logg inn</span>\n\n  <mat-form-field color=\"accent\">\n    <mat-icon matSuffix color=\"accent\">person</mat-icon>\n    <input matInput formControlName=\"userName\" placeholder=\"Brukernavn\" type=\"text\" />\n  </mat-form-field>\n\n  <mat-form-field color=\"accent\">\n    <mat-icon matSuffix color=\"accent\" (click)=\"hidePassword = !hidePassword\">\n      {{hidePassword ? 'visibility_off' : 'visibility'}}\n    </mat-icon>\n    <input matInput formControlName=\"password\" placeholder=\"Passord\" [type]=\"hidePassword ? 'password' : 'text'\" />\n  </mat-form-field>\n\n  <button appHttpCommandButton mat-raised-button color=\"accent\" [disabled]=\"!authForm.valid\" type=\"submit\">\n    <mat-icon>lock_open</mat-icon>\n    Logg inn\n  </button>\n  <br />\n\n  <button mat-raised-button appAddToHomeScreen color=\"accent\">\n    <mat-icon>get_app</mat-icon> Legg til app\n  </button>\n  \n</form>","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AuthService, Credentials } from 'src/app/core/services/auth';\r\n\r\n@Component({\r\n  selector: 'app-login-prompt',\r\n  templateUrl: './login-prompt.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LoginPromptComponent {\r\n\r\n  @Input() returnUrl: string;\r\n\r\n  constructor(    \r\n    private route: ActivatedRoute,\r\n    private authService: AuthService) { }\r\n\r\n  authenticate(credentials: Credentials) {\r\n    this.authService.login(\r\n      credentials, \r\n      this.returnUrl || this.route.snapshot.root.url.toString()\r\n    );\r\n  }\r\n  \r\n}\r\n","<mat-card class=\"fadeIn\" fxLayout=\"column\" fxLayoutAlign=\"center stretch\">\n\n  <span fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"8px\"  class=\"mb-4\">\n    <img src=\"assets/icons/icon-144x144.png\" style=\"width:40px;height:40px\" alt=\"Logo bilde\" />\n    \n    <span class=\"mat-body-strong line-height-100\">Bj√∏rkelangen<br />Bygg og Eiendom</span>\n  </span>\n\n  <app-login-form (submitted)=\"authenticate($event)\"></app-login-form>\n \n</mat-card>\n\n\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginPromptEntryComponent } from './login-prompt-entry.component';\r\n\r\nconst routes: Routes = [ \r\n  {\r\n    path: '',\r\n    component: LoginPromptEntryComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginPromptRoutingModule { }\r\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  template: `\n  <div class=\"h-100\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <app-login-prompt [returnUrl]=\"returnUrl\">\n    </app-login-prompt>\n  </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoginPromptEntryComponent {\n\n  get returnUrl(): string{\n    let url = this.route.snapshot.queryParams['returnUrl']\n    if(url === this.router.url.split('?')[0]) url = undefined;\n    return url;\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { LoginPromptEntryComponent } from './login-prompt-entry.component';\r\nimport { LoginPromptRoutingModule } from './login-prompt-routing.module';\r\nimport { LoginFormComponent } from './login-prompt/login-form/login-form.component';\r\nimport { LoginPromptComponent } from './login-prompt/login-prompt.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginPromptEntryComponent,\r\n    LoginPromptComponent,\r\n    LoginFormComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    LoginPromptRoutingModule,\r\n  ],\r\n})\r\nexport class LoginPromptModule {}\r\n"],"sourceRoot":"webpack:///"}