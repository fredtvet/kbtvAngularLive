{"version":3,"sources":["./src/app/timesheet-modules/shared-timesheet/state/set-fetched-timesheets.reducer.ts","./src/app/timesheet-modules/shared-timesheet/state/save-user-timesheet/save-user-timesheet-command.interface.ts","./src/app/shared/enums/timesheet-status.enum.ts","./src/app/shared/data.filter.ts","./src/app/shared-app/helpers/datetime/get-first-day-of-week.helper.ts","./src/app/timesheet-modules/shared-timesheet/timesheet-filter/timesheet-filter.model.ts","./src/app/timesheet-modules/shared-timesheet/state/save-user-timesheet/save-user-timesheet.http.effect.ts","./src/app/timesheet-modules/shared-timesheet/state/save-user-timesheet/save-user-timesheet.reducer.ts","./src/app/shared-app/helpers/datetime/get-total-hours.helper.ts","./src/app/timesheet-modules/shared-timesheet/state/providers.const.ts","./src/app/shared/form/form.service.ts","./src/app/timesheet-modules/shared-timesheet/shared-timesheet.module.ts","./src/app/shared-app/helpers/datetime/get-last-day-of-year.helper.ts","./src/app/shared/operators/filter-records.operator.ts","./src/app/shared-app/helpers/datetime/get-year-range.helper.ts","./src/app/shared-app/helpers/datetime/get-first-day-of-year.helper.ts","./src/app/shared/enums/group-by-period.enum.ts","./src/app/shared-app/helpers/datetime/get-week-of-year.helper.ts","./src/app/shared-app/helpers/datetime/get-week-and-year-from-date.helper.ts","./src/app/timesheet-modules/shared-timesheet/services/timesheet-summary.aggregator.ts","./src/app/shared/enums/index.ts","./src/app/state/component.store.ts","./src/app/state/providers.const.ts","./src/app/shared/components/dynamic-form-questions/ion-date-time-question.component.ts","./src/app/shared/form/index.ts","./src/app/shared-app/helpers/datetime/get-week-range.helper.ts","./src/app/shared-app/helpers/datetime/get-last-day-of-week.helper.ts","./src/app/model/helpers/get-range-with-relations.helper.ts","./src/app/timesheet-modules/shared-timesheet/state/fetch-timesheets.http.effect.ts"],"names":["SetFetchedTimesheetsActionId","SetFetchedTimesheetsReducer","actionId","stateProperties","reducerFn","state","action","relationCfg","timesheets","missions","SaveUserTimesheetActionId","TimesheetStatus","criteria","maxChecks","ignoreInital","checksCount","checkDefault","record","exp","addChecks","checkInitial","addInitialChecks","this","check","isCriteriaEmpty","console","error","_getFirstDayOfWeek","date","Date","day","getDay","getFullYear","getMonth","getDate","dateRange","status","user","userName","start","end","startTime","getStartOfDayTime","mission","missionId","id","containedIn","baseCriteria","isDateRangeContainedIn","prop","baseValue","value","isObjectContainedIn","modelCfg","getBy","identifier","baseDateRange","newDate","setHours","getTime","handle$","actions$","pipe","map","x","propagate","request","createHttpRequest","stateSnapshot","SaveUserTimesheetHttpEffect","SaveUserTimesheetReducer","first","last","inputTimesheet","entity","modifiedTimesheet","Open","currentUser","totalHours","endTime","Math","round","abs","SaveUserTimesheetProviders","provide","useClass","multi","useValue","FetchTimesheetProviders","matBottomSheet","open","config","data","formConfig","navConfig","submitCallback","formComponent","formState$","formState","FormService","SharedTimesheetModule","_getLastDayOfYear","filterRecords","filterType","source","records","filter","filterArgs","_getYearRange","getISO","_getFirstDayOfYear","toISOString","GroupByPeriod","_getWeekOfYear","d","setDate","ceil","_getWeekAndYearFromDate","currentDate","year","weekNr","groupByType","type","t","Day","groupByDay","Week","groupByWeek","Month","groupByMonth","Year","groupByYear","groups","i","length","timesheet","index","toDateString","summary","undefined","openHours","confirmedHours","addHoursToSummary","push","Object","values","wy","groupByWeekRange","startWeek","endWeek","excludeStatus","month","Confirmed","TimesheetSummaryAggregator","hostStore","queryDispatcher","dispatcher","reducers","defaultState","ComponentStore","ComponentStoreProviders","validationErrorMessages","dayNames","dayShortNames","monthNames","monthShortNames","onChange","val","question","valueSetter","control","overrideValueSetterControl","form","get","setValue","markAsDirty","onQuestionChanges","value$","valueChanges","min$","setMinMax","max$","observer","IonDateQuestionComponent","_getWeekRange","_getLastDayOfWeek","_getRangeWithRelations","cfg","modelProp","modelState","hasChildren","includedChildProps","hasForeigns","includedForeignProps","foreignLookups","props","lookups","_createStatePropertyLookups","childLookups","groupBy","_createGroupedLookups","foreignKey","_mapForeignsToEntity","_mapChildrenToEntity","foreignProp","foreignCfg","propCfg","childProp","FetchTimesheetsActionId","apiService","fetch$","params","set","toString","timesheetCriteria","_handle$","log","FetchTimesheetsHttpEffect"],"mappings":"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","file":"5.c0670eb36e978bd86f85.js","sourcesContent":["import { Timesheet } from 'src/app/core/models';\r\nimport { _getRangeWithRelations } from 'src/app/model/helpers/get-range-with-relations.helper';\r\nimport { GetWithRelationsConfig } from 'src/app/model/helpers/get-with-relations.config';\r\nimport { _addOrUpdateRange } from 'src/app/shared-app/helpers/array/add-or-update-range.helper';\r\nimport { Reducer, StateAction, StateMissions, StateTimesheets } from 'src/app/state/interfaces';\r\n\r\nexport const SetFetchedTimesheetsActionId = \"SET_FETCHED_TIMESHEETS\";\r\n\r\nexport interface SetFetchedTimesheetsCommand extends StateAction {\r\n    timesheets: Timesheet[];\r\n}\r\n\r\ntype State = StateTimesheets & StateMissions;\r\n\r\nexport const SetFetchedTimesheetsReducer: Reducer<State> = {\r\n    actionId: SetFetchedTimesheetsActionId,\r\n    stateProperties: [\"timesheets\", \"missions\"],\r\n    reducerFn: (state: State, action: SetFetchedTimesheetsCommand) => {\r\n        \r\n        const relationCfg = new GetWithRelationsConfig(\"timesheets\", null, [\"missions\"]);\r\n\r\n        const timesheets = _getRangeWithRelations({\r\n            timesheets: action.timesheets, \r\n            missions: state.missions\r\n        }, relationCfg);\r\n\r\n        state.timesheets = _addOrUpdateRange(state.timesheets, timesheets, \"id\");\r\n\r\n        return state;\r\n    }\r\n        \r\n}  \r\n","import { Timesheet } from 'src/app/core/models';\r\nimport { SaveModelStateCommand } from 'src/app/model/state/save-model/save-model-action.const';\r\n\r\nexport const SaveUserTimesheetActionId = \"SAVE_USER_TIMESHEET\"\r\n\r\nexport interface SaveUserTimesheetCommand extends SaveModelStateCommand<Timesheet>{\r\n    password: string;\r\n}","export enum TimesheetStatus {\r\n  Open = 1,\r\n  Confirmed\r\n}\r\n","export type DataFilterConstructor<TCriteria>  = \r\n    new (criteria: TCriteria, ...args: any[]) => DataFilter<any, TCriteria>;\r\n\r\nexport abstract class DataFilter<TRecord, TCriteria>{\r\n\r\n    private checksCount: number = 0;\r\n\r\n    protected get isCriteriaEmpty(): boolean{ return !this.criteria }\r\n\r\n    criteria: TCriteria;\r\n\r\n    constructor(criteria: TCriteria, private maxChecks?: number, ignoreInital?: boolean){\r\n        this.criteria = criteria || {} as any;\r\n        if(ignoreInital) \r\n            this.check = this.checkDefault\r\n        else \r\n            this.check = this.isCriteriaEmpty ? this.checkInitial : this.checkDefault;\r\n    }\r\n\r\n    check: (record: TRecord) => boolean; \r\n\r\n    protected addChecks(record: TRecord): boolean{\r\n        console.error(\"Method not implemented\");\r\n        return null;\r\n    }\r\n\r\n    protected addInitialChecks(record: TRecord): boolean{\r\n        return true; \r\n    }\r\n\r\n    private checkDefault = (record: TRecord): boolean => { \r\n        if(!record) return false;\r\n        if(this.maxChecks && this.checksCount >= this.maxChecks) return false;\r\n        \r\n        let exp = true;\r\n\r\n        exp = exp && this.addChecks(record);\r\n\r\n        if(exp && this.maxChecks) this.checksCount++; //if true, append checksCount\r\n\r\n        return exp;\r\n    }\r\n\r\n    private checkInitial = (record: TRecord): boolean => {\r\n        return this.addInitialChecks(record);\r\n    }\r\n\r\n}","export function _getFirstDayOfWeek(date: Date = new Date()): Date  {\r\n    let day = date.getDay();\r\n    return new Date(\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate() + (day == 0 ? -6 : 1) - day\r\n    );\r\n  }","import { Timesheet } from 'src/app/core/models';\r\nimport { ModelStateConfig } from 'src/app/model/model-state.config';\r\nimport { DataFilter } from 'src/app/shared/data.filter';\r\nimport { DateRange } from 'src/app/shared/interfaces/date-range.interface';\r\nimport { TimesheetCriteria } from './timesheet-criteria.interface';\r\n\r\nexport class TimesheetFilter extends DataFilter<Timesheet, TimesheetCriteria>{\r\n\r\n    constructor(criteria: TimesheetCriteria, maxChecks?: number){ super(criteria, maxChecks);}\r\n\r\n    protected addChecks(record: Timesheet): boolean {\r\n        let exp = true;\r\n        if(!this.criteria.dateRange) return false;\r\n        if(this.criteria.status){\r\n            exp = exp && record.status === this.criteria.status;\r\n        }\r\n        if(this.criteria.user?.userName)\r\n            exp = exp && record.userName === this.criteria.user.userName;\r\n\r\n        if(this.criteria.dateRange && this.criteria.dateRange.start && this.criteria.dateRange.end) {\r\n            let startTime = this.getStartOfDayTime(record.startTime);\r\n            exp = exp && startTime >= this.getStartOfDayTime(this.criteria.dateRange.start) \r\n                && startTime <= this.getStartOfDayTime(this.criteria.dateRange.end); \r\n        }\r\n    \r\n        if(this.criteria.mission) \r\n            exp = exp && record.missionId === this.criteria.mission.id;  \r\n    \r\n        return exp\r\n    }\r\n\r\n    //Check if criteria is contained in base, meaning all potential timesheets has already been fetched. \r\n    containedIn(baseCriteria: TimesheetCriteria): boolean{\r\n        if(!this.criteria) return true;\r\n        if(!baseCriteria) return false;\r\n        if(!this.isDateRangeContainedIn(baseCriteria.dateRange)) return false;\r\n        for(const prop in baseCriteria){\r\n            if(prop === \"dateRange\" || prop === \"dateRangePreset\") continue;\r\n            const baseValue = baseCriteria[prop];\r\n            if(!baseValue) continue; \r\n            const value =  this.criteria[prop];\r\n            if(value && typeof value === \"object\") {\r\n                if(!this.isObjectContainedIn(baseValue, prop)) return false;\r\n            }\r\n            else if(value !== baseValue) return false;     \r\n        }\r\n        return true;\r\n    }\r\n    \r\n    private isObjectContainedIn(baseValue: Object, prop: string){\r\n        const modelCfg = ModelStateConfig.getBy(prop, \"foreignProp\");\r\n        const value = this.criteria[prop];\r\n\r\n        if(modelCfg && value[modelCfg.identifier] !== baseValue[modelCfg.identifier]) \r\n            return false\r\n\r\n        else if(!modelCfg && value !== baseValue) return false;\r\n        \r\n        return true\r\n    }\r\n\r\n    private isDateRangeContainedIn(baseDateRange: DateRange): boolean{\r\n        if(!baseDateRange || !baseDateRange.end || !baseDateRange.start) return false; //No range means all, in which it will always be contained. \r\n        const dateRange = this.criteria.dateRange;\r\n        if(!dateRange || !dateRange.start || !dateRange.end) return true; \r\n        return (this.getStartOfDayTime(baseDateRange.start) <= this.getStartOfDayTime(dateRange.start)) && \r\n        (this.getStartOfDayTime(baseDateRange.end) >= this.getStartOfDayTime(dateRange.end))\r\n    }\r\n\r\n    private getStartOfDayTime(date: Date | string | number): number{\r\n        if(!date) return\r\n        const newDate = new Date(date);\r\n        newDate.setHours(0,0,0,0);\r\n        return newDate.getTime();\r\n    }\r\n\r\n};","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Model } from 'src/app/core/models';\r\nimport { HttpActionId, HttpCommand } from 'src/app/core/services/http/state/http.effect';\r\nimport { SaveModelStateCommand } from 'src/app/model/state/save-model/save-model-action.const';\r\nimport { SaveModelHttpEffect } from 'src/app/model/state/save-model/save-model.http.effect';\r\nimport { DispatchedAction } from 'src/app/state/action-dispatcher';\r\nimport { StateAction } from 'src/app/state/interfaces';\r\nimport { Effect } from 'src/app/state/interfaces/effect.interface';\r\nimport { listenTo } from 'src/app/state/operators/listen-to.operator';\r\nimport { SaveUserTimesheetActionId, SaveUserTimesheetCommand } from './save-user-timesheet-command.interface';\r\n\r\n@Injectable()\r\nexport class SaveUserTimesheetHttpEffect extends SaveModelHttpEffect implements Effect<SaveUserTimesheetCommand> {\r\n\r\n    constructor(){ super() }\r\n\r\n    handle$(actions$: Observable<DispatchedAction<SaveModelStateCommand<Model>>>): Observable<StateAction> {\r\n        return actions$.pipe(\r\n            listenTo([SaveUserTimesheetActionId]),\r\n            map(x => { return <HttpCommand>{\r\n                actionId: HttpActionId, propagate: true,\r\n                request: super.createHttpRequest(x.action),\r\n                stateSnapshot: x.stateSnapshot\r\n            }}), \r\n        )\r\n    }\r\n}","import { SaveModelReducer } from 'src/app/model/state/save-model/save-model.reducer';\r\nimport { _getTotalHours } from 'src/app/shared-app/helpers/datetime/get-total-hours.helper';\r\nimport { TimesheetStatus } from 'src/app/shared/enums';\r\nimport { Reducer, StateCurrentUser } from 'src/app/state/interfaces';\r\nimport { SaveUserTimesheetActionId, SaveUserTimesheetCommand } from './save-user-timesheet-command.interface';\r\n\r\nexport const SaveUserTimesheetReducer: Reducer<StateCurrentUser> = {\r\n    actionId: SaveUserTimesheetActionId,\r\n    reducerFn: _reducerFn,\r\n    stateProperties: (action:  any) => [\"currentUser\", ...(<Function>SaveModelReducer.stateProperties)(action)],   \r\n}\r\n\r\nfunction _reducerFn(state: any, action: SaveUserTimesheetCommand): Partial<any>{ \r\n    let inputTimesheet = action.entity;\r\n    let modifiedTimesheet = {};\r\n\r\n    if(inputTimesheet)\r\n        modifiedTimesheet = {...inputTimesheet,\r\n            status: TimesheetStatus.Open,\r\n            userName: state?.currentUser?.userName,\r\n            totalHours: _getTotalHours(inputTimesheet.startTime,inputTimesheet.endTime)\r\n        };\r\n        \r\n    action.entity = modifiedTimesheet;\r\n    return SaveModelReducer.reducerFn(state, action)\r\n}","export function _getTotalHours(first: number, last: number): number{\r\n    return Math.round((Math.abs(first - last) / 36e5)* 10) / 10\r\n}","import { Provider } from '@angular/core';\r\nimport { STORE_EFFECTS, STORE_REDUCERS } from 'src/app/state/injection-tokens';\r\nimport { FetchTimesheetsHttpEffect } from './fetch-timesheets.http.effect';\r\nimport { SaveUserTimesheetHttpEffect } from './save-user-timesheet/save-user-timesheet.http.effect';\r\nimport { SaveUserTimesheetReducer } from './save-user-timesheet/save-user-timesheet.reducer';\r\nimport { SetFetchedTimesheetsReducer } from './set-fetched-timesheets.reducer';\r\n\r\nexport const SaveUserTimesheetProviders: Provider[] = [\r\n    {provide: STORE_EFFECTS, useClass: SaveUserTimesheetHttpEffect, multi: true},\r\n    {provide: STORE_REDUCERS, useValue: SaveUserTimesheetReducer, multi: true}\r\n]\r\n\r\nexport const FetchTimesheetProviders: Provider[] = [\r\n    {provide: STORE_EFFECTS, useClass: FetchTimesheetsHttpEffect, multi: true},\r\n    {provide: STORE_REDUCERS, useValue: SetFetchedTimesheetsReducer, multi: true}\r\n]","import { Injectable } from '@angular/core';\r\nimport { MatBottomSheet, MatBottomSheetRef } from '@angular/material/bottom-sheet';\r\nimport { Observable, of } from 'rxjs';\r\nimport { MainTopNavConfig } from 'src/app/shared/components/main-top-nav-bar/main-top-nav.config';\r\nimport { FormSheetWrapperComponent } from './form-sheet-wrapper.component';\r\nimport { DynamicFormComponent } from 'src/app/dynamic-forms/components/dynamic-form.component';\r\nimport { DynamicForm } from 'src/app/dynamic-forms/interfaces';\r\nimport { FormSheetWrapperConfig } from './interfaces';\r\n\r\nexport interface FormServiceConfig<TForm, TFormState>{\r\n  formConfig: DynamicForm<TForm, TFormState>, \r\n  navConfig: MainTopNavConfig,\r\n  formState?: TFormState | Observable<TFormState>,\r\n  submitCallback?: (val: TForm) => void\r\n}\r\n\r\n@Injectable({ providedIn: \"any\" })\r\nexport class FormService {\r\n\r\n  constructor(private matBottomSheet: MatBottomSheet) {}\r\n\r\n  open<TForm, TFormState>(config: FormServiceConfig<TForm, TFormState>)\r\n  : MatBottomSheetRef<FormSheetWrapperComponent, TForm> {      \r\n    return this.matBottomSheet.open(FormSheetWrapperComponent, { \r\n      data: <FormSheetWrapperConfig<DynamicForm<TForm, TFormState>, any, TForm>>{\r\n        formConfig: config.formConfig, \r\n        navConfig: config.navConfig, \r\n        submitCallback: config.submitCallback,\r\n        formComponent: DynamicFormComponent,\r\n        formState$: config.formState instanceof Observable ? config.formState : of(config.formState)\r\n      } \r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { StateModule } from 'src/app/state/state.module';\r\nimport {\r\n  TimesheetCardComponent,\r\n  TimesheetSummaryCardContentComponent\r\n} from './components';\r\nimport { ArrayIncludesPipe, GetDateByDateParamsPipe, ReadableDurationPipe } from './pipes';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TimesheetCardComponent,\r\n    TimesheetSummaryCardContentComponent,\r\n    GetDateByDateParamsPipe,   \r\n    ArrayIncludesPipe,\r\n    ReadableDurationPipe,\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    StateModule,\r\n  ],\r\n  exports: [\r\n    SharedModule,\r\n    TimesheetCardComponent,\r\n    TimesheetSummaryCardContentComponent,\r\n    GetDateByDateParamsPipe,   \r\n    ArrayIncludesPipe,\r\n    ReadableDurationPipe,\r\n  ],\r\n})\r\nexport class SharedTimesheetModule {}\r\n","export function _getLastDayOfYear(date: Date | string | number = new Date()): Date {\r\n    return new Date(new Date(date).getFullYear(), 11, 31, 23, 59, 59);\r\n}","import { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { _filter } from 'src/app/shared-app/helpers/array/filter.helper';\r\nimport { DataFilterConstructor } from 'src/app/shared/data.filter';\r\nimport { FilteredResponse } from 'src/app/shared/interfaces';\r\n\r\nexport const filterRecords = <TRecord, TCriteria>(filterType: DataFilterConstructor<TCriteria>, ...filterArgs: any[]) => \r\n    (source: Observable<[TRecord[], TCriteria]> ): Observable<FilteredResponse<TCriteria, TRecord>> => \r\n        source.pipe(\r\n            map(([timesheets, criteria]) => {\r\n                if(!criteria) return {criteria: null, records: null};\r\n                const filter = new filterType(criteria, ...filterArgs);\r\n                return {\r\n                    criteria,\r\n                    records: _filter(timesheets, (entity) => filter.check(entity)),\r\n                };\r\n            }), \r\n        )","import { DateRange } from 'src/app/shared/interfaces/date-range.interface';\r\nimport { _getFirstDayOfYear } from './get-first-day-of-year.helper';\r\nimport { _getLastDayOfYear } from './get-last-day-of-year.helper';\r\n\r\nexport function _getYearRange(date: Date = new Date(), getISO?: boolean): DateRange {\r\n    const start = _getFirstDayOfYear(date);   \r\n    const end = _getLastDayOfYear(date);\r\n    return {\r\n      start: getISO ? start.toISOString() : start, \r\n      end: getISO ? end.toISOString() : end\r\n    };\r\n}","export function _getFirstDayOfYear(date: Date | string | number = new Date()): Date  {\r\n    return new Date(new Date(date).getFullYear(), 0, 1);\r\n}","export enum GroupByPeriod {\r\n    None,\r\n    Day,\r\n    Week,\r\n    Month,\r\n    Year\r\n}","export function _getWeekOfYear(date: Date | string | number = new Date()): number {\r\n    var d = new Date(+date);\r\n    d.setHours(0,0,0,0);\r\n    d.setDate(d.getDate()+4-(d.getDay()||7));\r\n    return Math.ceil((((d.getTime() - new Date(d.getFullYear(),0,1).getTime())/8.64e7)+1)/7);\r\n}","export function _getWeekAndYearFromDate(date: Date | string | number = this.currentDate): {weekNr: number, year: number} {\r\n    var d = new Date(date);\r\n    d.setHours(0,0,0,0);\r\n    d.setDate(d.getDate()+4-(d.getDay()||7));\r\n    let year = d.getFullYear();\r\n    let weekNr = Math.ceil((((d.getTime() - new Date(year,0,1).getTime())/8.64e7)+1)/7);\r\n    return {weekNr, year}\r\n}","import { Injectable } from '@angular/core';\r\nimport { Timesheet } from 'src/app/core/models';\r\nimport { GroupByPeriod } from 'src/app/shared/enums/group-by-period.enum';\r\nimport { TimesheetStatus } from 'src/app/shared/enums/timesheet-status.enum';\r\nimport { _getWeekAndYearFromDate } from 'src/app/shared-app/helpers/datetime/get-week-and-year-from-date.helper';\r\nimport { _getWeekOfYear } from 'src/app/shared-app/helpers/datetime/get-week-of-year.helper';\r\nimport { TimesheetSummary } from '../interfaces/timesheet-summary.interface';\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class TimesheetSummaryAggregator {\r\n  constructor() {}\r\n\r\n  groupByType(type: GroupByPeriod, t: Timesheet[]): TimesheetSummary[] {\r\n    switch (type) {\r\n      case GroupByPeriod.Day:\r\n        return this.groupByDay(t);\r\n      case GroupByPeriod.Week:\r\n        return this.groupByWeek(t);\r\n      case GroupByPeriod.Month:\r\n        return this.groupByMonth(t);\r\n      case GroupByPeriod.Year:\r\n        return this.groupByYear(t);\r\n    }\r\n  }\r\n\r\n  groupByDay(t: Timesheet[]): TimesheetSummary[] {\r\n    if(!t) return undefined;\r\n    const groups = {};\r\n    for(let i = t.length; i--;){\r\n      const timesheet = t[i];\r\n      const date = new Date(timesheet.startTime);\r\n      const index = date.toDateString() + \"-\" + timesheet.userName;\r\n      let summary = groups[index];\r\n      if(summary === undefined) {\r\n        groups[index] = {\r\n          userName: timesheet.userName,\r\n          date,\r\n          openHours: 0,\r\n          confirmedHours: 0,\r\n          timesheets: [],\r\n        };\r\n        summary = groups[index];  \r\n      }\r\n\r\n      this.addHoursToSummary(summary, timesheet)\r\n\r\n      summary.timesheets.push(timesheet);\r\n    }\r\n    const res = Object.values(groups) as TimesheetSummary[]; \r\n    return res\r\n  }\r\n\r\n  groupByWeek(t: Timesheet[]): TimesheetSummary[] {\r\n    if(!t) return undefined;\r\n    const groups = {} as {[key: string]: TimesheetSummary};\r\n    for(let i = t.length; i--;){\r\n      const timesheet = t[i];\r\n      const wy = _getWeekAndYearFromDate(timesheet.startTime);\r\n      const index = wy.year + \"-\" + wy.weekNr + \"-\" + timesheet.userName;\r\n      let summary = groups[index];\r\n      if (summary === undefined) {\r\n        groups[index] = {\r\n          userName: timesheet.userName,\r\n          year: wy.year,\r\n          weekNr: wy.weekNr,\r\n          openHours: 0,\r\n          confirmedHours: 0,\r\n          timesheets: [],\r\n        };\r\n        summary = groups[index];\r\n      }  \r\n\r\n      this.addHoursToSummary(summary, timesheet)\r\n\r\n      summary.timesheets.push(timesheet);\r\n    }\r\n\r\n    return Object.values(groups);\r\n  }\r\n\r\n  groupByWeekRange(t: Timesheet[],startWeek: number, endWeek: number, year: number, excludeStatus?: TimesheetStatus): TimesheetSummary[] {\r\n    if(!t) return undefined;\r\n    const groups = {};\r\n    for(let i = t.length; i--;){\r\n      const timesheet = t[i];\r\n      if(timesheet.status === excludeStatus) continue;\r\n      const date = new Date(timesheet.startTime);\r\n      if(date.getFullYear() !== year) continue;\r\n      const weekNr = _getWeekOfYear(date);\r\n      if (weekNr >= startWeek && weekNr <= endWeek) {\r\n        let summary = groups[weekNr];\r\n        if (summary === undefined){\r\n          groups[weekNr] = \r\n            {weekNr, timesheets: [],openHours: 0,confirmedHours: 0,};    \r\n          summary = groups[weekNr];  \r\n        }\r\n\r\n        this.addHoursToSummary(summary, timesheet)\r\n\r\n        summary.timesheets.push(timesheet);\r\n      }\r\n    };\r\n\r\n    return Object.values(groups);\r\n  }\r\n\r\n  groupByMonth(t: Timesheet[]): TimesheetSummary[] {\r\n    if(!t) return undefined;\r\n    const groups = {};\r\n    for(let i = t.length; i--;){\r\n      const timesheet = t[i];\r\n      const date = new Date(timesheet.startTime);\r\n      const month = date.getMonth();\r\n      const year = date.getFullYear();\r\n      const index = year + \"-\" + month + \"-\" + timesheet.userName;\r\n      let summary = groups[index];\r\n\r\n      if (summary === undefined) {\r\n        groups[index] = {\r\n          userName: timesheet.userName,\r\n          year,\r\n          month,\r\n          openHours: 0, confirmedHours: 0,\r\n          timesheets: [],\r\n        };\r\n        summary = groups[index];\r\n      }\r\n\r\n      this.addHoursToSummary(summary, timesheet)\r\n\r\n      summary.timesheets.push(timesheet);\r\n    };\r\n\r\n    return Object.values(groups);\r\n  }\r\n\r\n  groupByYear(t: Timesheet[]): TimesheetSummary[] {\r\n    if(!t) return undefined;\r\n    const groups = {};\r\n    for(let i = t.length; i--;){\r\n      const timesheet = t[i];\r\n      const year = new Date(timesheet.startTime).getFullYear();\r\n      const index = year + \"-\" + timesheet.userName;\r\n\r\n      let summary = groups[index];\r\n\r\n      if (summary === undefined) {\r\n        groups[index] = {\r\n          userName: timesheet.userName, year, \r\n          openHours: 0, confirmedHours: 0, timesheets: [],\r\n        };\r\n        summary = groups[index];\r\n      }\r\n\r\n      this.addHoursToSummary(summary, timesheet)\r\n\r\n      summary.timesheets.push(timesheet);\r\n    };\r\n    return Object.values(groups);\r\n  }\r\n\r\n  private addHoursToSummary(summary: TimesheetSummary, timesheet: Timesheet): void{\r\n    if (timesheet.status === TimesheetStatus.Confirmed)\r\n      summary.confirmedHours = Math.round((summary.confirmedHours + timesheet.totalHours) * 10) / 10;\r\n    else   \r\n      summary.openHours = Math.round((summary.openHours + timesheet.totalHours) * 10) / 10;\r\n  }\r\n\r\n}\r\n","export * from './group-by-period.enum';\r\nexport * from './timesheet-status.enum';","import { Inject, Injectable, Optional, Self, SkipSelf } from '@angular/core';\r\nimport { ActionDispatcher } from './action-dispatcher';\r\nimport { STORE_DEFAULT_STATE, STORE_REDUCERS } from './injection-tokens';\r\nimport { Reducer } from './interfaces';\r\nimport { QueryDispatcher } from './query-dispatcher';\r\nimport { StateBase } from './state-base';\r\nimport { Store } from './store';\r\nimport { StoreBase } from './store-base';\r\n\r\n@Injectable()\r\nexport class ComponentStore<TState> extends StoreBase<TState> {\r\n\r\n    constructor(\r\n        @SkipSelf() @Optional() hostStore: Store<any>,\r\n        queryDispatcher: QueryDispatcher,\r\n        @Self() dispatcher: ActionDispatcher,\r\n        @Self() @Optional() @Inject(STORE_REDUCERS) reducers: Reducer<any>[],\r\n        @Self() @Optional() @Inject(STORE_DEFAULT_STATE) defaultState: Partial<TState>,\r\n    ) { \r\n        super(new StateBase(defaultState), hostStore, queryDispatcher, dispatcher, reducers);    \r\n    }\r\n\r\n}","import { Provider } from '@angular/core'\r\nimport { ActionDispatcher } from './action-dispatcher'\r\nimport { ComponentStore } from './component.store'\r\n\r\nexport const ComponentStoreProviders: Provider[] = [\r\n    ActionDispatcher,\r\n    ComponentStore,\r\n]\r\n","import { ChangeDetectionStrategy, Component, Inject } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { filter, startWith } from 'rxjs/operators';\r\nimport { _getControlObserver$ } from 'src/app/dynamic-forms/helpers/get-control-observer.helper';\r\nimport { Question, ControlHook } from 'src/app/dynamic-forms/interfaces';\r\nimport { VALIDATION_ERROR_MESSAGES, ValidationErrorMap } from 'src/app/dynamic-forms/validation-error-map.interface';\r\nimport { BaseQuestionComponent } from '../../../dynamic-forms/components/base-question.component';\r\n\r\nexport interface IonDateQuestion extends Question {\r\n    ionFormat: string;\r\n    datePipeFormat?: string;\r\n    minuteValues?: number[];\r\n    defaultValueGetter?: ((form: any) => string) | string;\r\n    min?: string | ControlHook<string>;\r\n    max?: string | ControlHook<string>;\r\n    valueSetter?: (value: any) => any;\r\n    overrideValueSetterControl?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-ion-date-question',\r\n  template:`\r\n   <div (click)=\"dateTime.click()\" class=\"w-100\" [ngStyle]=\"{'pointer-events': control.disabled ? 'none' : 'auto'}\">\r\n     \r\n      <mat-form-field style=\"pointer-events:none!important;\" class=\"w-100\" [color]=\"question.color || 'accent'\">\r\n        <mat-label *ngIf=\"question.label\">{{ question.label }}</mat-label>\r\n        <input matInput required \r\n          [disabled]=\"control.disabled\" \r\n          [value]=\"question.datePipeFormat ? ((value$ | async) | date : question.datePipeFormat) : (value$ | async)\" \r\n          [placeholder]=\"question.placeholder\" \r\n          [attr.aria-label]=\"question.ariaLabel\">  \r\n            <mat-hint *ngIf=\"question.hint\">{{ question.hint }}</mat-hint>\r\n\r\n            <mat-error *ngIf=\"control.dirty && control.invalid\">\r\n              {{ getValidationErrorMessage() }}\r\n            </mat-error>  \r\n      </mat-form-field>\r\n\r\n      <ion-datetime #dateTime fxHide \r\n        cancel-text=\"Avbryt\" done-text=\"Ferdig\"\r\n        [attr.max]=\"max$ | async\"\r\n        [attr.min]=\"min$ | async\"\r\n        [attr.day-names]=\"dayNames\"\r\n        [attr.day-short-names]=\"dayShortNames\"\r\n        [attr.month-names]=\"monthNames\"\r\n        [attr.month-short-names]=\"monthShortNames\"\r\n        [attr.display-format]=\"question.ionFormat\"\r\n        [attr.minute-values]=\"question.minuteValues\"\r\n        [value]=\"control.value || (question.defaultValueGetter | func : form.value) || question.defaultValueGetter\"\r\n        (ionChange)=\"onChange($event.detail.value);\">\r\n      </ion-datetime>\r\n    </div>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class IonDateQuestionComponent extends BaseQuestionComponent<IonDateQuestion> {\r\n\r\n  dayNames = [\"Søndag\", \"Mandag\", \"Tirsdag\", \"Onsdag\",\"Torsdag\", \"Fredag\", \"Lørdag\"]\r\n  dayShortNames = [\"Søn\", \"Man\", \"Tir\", \"Ons\",\"Tor\", \"Fre\", \"Lør\"]\r\n  monthNames = [\"Januar\", \"Februar\", \"Mars\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Desember\"];\r\n  monthShortNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"Mai\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Des\"]\r\n\r\n  min$: Observable<string>;\r\n  max$: Observable<string>;\r\n\r\n  value$: Observable<string>;\r\n\r\n  constructor(@Inject(VALIDATION_ERROR_MESSAGES) validationErrorMessages: ValidationErrorMap) { \r\n    super(validationErrorMessages) \r\n  }\r\n\r\n  onChange(val: any){\r\n    const value = this.question.valueSetter ? this.question.valueSetter(val) : val;\r\n    let control = this.control;\r\n\r\n    if(this.question.overrideValueSetterControl) \r\n      control = this.form.get(this.question.overrideValueSetterControl)\r\n\r\n    control.setValue(value);  \r\n    control.markAsDirty();\r\n  }\r\n\r\n  protected onQuestionChanges(question: IonDateQuestion): void { \r\n    super.onQuestionChanges(question);\r\n    this.value$ = this.control.valueChanges.pipe(startWith(this.control.value));\r\n    this.min$ = this.setMinMax(question, \"min\");\r\n    this.max$ = this.setMinMax(question, \"max\");\r\n  }\r\n\r\n  private setMinMax(question: IonDateQuestion, type: \"min\" | \"max\"): Observable<string>{\r\n    if(!question) return;\r\n  \r\n    let observer = of(question[type] as string);\r\n    if(typeof question[type] === \"object\") \r\n      observer = _getControlObserver$(question[type] as ControlHook<string>, this.form);   \r\n\r\n    return observer.pipe(filter(x => x != null));   \r\n  }\r\n\r\n}","export * from './interfaces'\r\nexport * from './form.service';","import { DateRange } from 'src/app/shared/interfaces/date-range.interface';\r\nimport { _getFirstDayOfWeek } from './get-first-day-of-week.helper';\r\nimport { _getLastDayOfWeek } from './get-last-day-of-week.helper';\r\n\r\nexport function _getWeekRange(date: Date = new Date(), getISO?: boolean): DateRange {\r\n    const start = _getFirstDayOfWeek(date);   \r\n    const end = _getLastDayOfWeek(date);\r\n    return {\r\n      start: getISO ? start.toISOString() : start, \r\n      end: getISO ? end.toISOString() : end\r\n    };\r\n}","export function _getLastDayOfWeek(date: Date = new Date()): Date  {\r\n    let day = date.getDay();\r\n    return new Date(\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate() + (day == 0 ? 0 : 7) - day,\r\n      23,59,59\r\n    );\r\n }","import { Model } from 'src/app/core/models/base-entity.interface';\r\nimport { _convertArrayToObject } from 'src/app/shared-app/helpers/array/convert-array-to-object.helper';\r\nimport { _filter } from 'src/app/shared-app/helpers/array/filter.helper';\r\nimport { _groupBy } from 'src/app/shared-app/helpers/array/group-by.helper';\r\nimport { Prop } from 'src/app/shared-app/prop.type';\r\nimport { ModelState } from '../interfaces/model-state.interface';\r\nimport { ModelConfig, ModelStateConfig } from '../model-state.config';\r\nimport { GetWithRelationsConfig } from './get-with-relations.config';\r\n\r\nexport function _getRangeWithRelations<TModel extends Model>(\r\n    state: Readonly<Partial<ModelState>>,\r\n    cfg: GetWithRelationsConfig,\r\n    filter?: (value: TModel, index?: number, Array?: any[]) => boolean, \r\n): TModel[] {\r\n    const modelCfg = ModelStateConfig.get(cfg.modelProp); \r\n\r\n    let modelState = state[cfg.modelProp] as TModel[];\r\n    \r\n    if(filter)\r\n        modelState = _filter(modelState, filter);\r\n\r\n    if(!modelState || modelState.length == 0) return modelState;\r\n\r\n    const hasChildren = cfg.includedChildProps && cfg.includedChildProps.length > 0;      \r\n    const hasForeigns = cfg.includedForeignProps && cfg.includedForeignProps.length > 0;\r\n\r\n    let foreignLookups = {};\r\n    if(hasForeigns)\r\n        foreignLookups = _createStatePropertyLookups(cfg.includedForeignProps, state); \r\n\r\n    let childLookups = {};\r\n    if(hasChildren) \r\n        childLookups = _createGroupedLookups(cfg.includedChildProps, modelCfg.foreignKey, state) \r\n\r\n    if(hasForeigns || hasChildren){\r\n        for(var i = 0; i < modelState.length; i++){\r\n            let entity = modelState[i];                   \r\n                _mapForeignsToEntity(cfg.includedForeignProps, foreignLookups, entity);        \r\n                _mapChildrenToEntity(cfg.includedChildProps, modelCfg, childLookups, entity);\r\n            modelState[i] = entity;\r\n        }\r\n    }\r\n    return modelState\r\n}\r\n\r\n//Lookup of children grouped by foreign key\r\nfunction _createGroupedLookups(\r\n    props: Prop<ModelState>[], \r\n    groupBy: string, state: Object\r\n): {[key: string]: {[key: string]: Object[]}}{\r\n    const lookups = {} as {[key: string]: {[key: string]: Object[]}}\r\n\r\n    for(const prop of props) lookups[prop] = _groupBy(state[prop], groupBy);\r\n        \r\n    return lookups;\r\n}\r\n\r\n//Lookup of foreign entities by identifier\r\nfunction _createStatePropertyLookups(\r\n    props: Prop<ModelState>[], \r\n    state: Readonly<Object>\r\n): {[key: string]: Object}{\r\n    const lookups: {[key: string]: Readonly<Object>} = {};\r\n    for(const prop of props){ //Convert foreign state props to lookup tables\r\n        const cfg = ModelStateConfig.get(prop); \r\n        lookups[prop] = _convertArrayToObject(state[prop], cfg.identifier);\r\n    }\r\n    return lookups;\r\n}\r\n\r\nfunction _mapForeignsToEntity<T>(\r\n    props: Prop<ModelState>[], \r\n    lookups: {[key: string]: Readonly<Object>}, \r\n    entity: T\r\n  ): void{\r\n    for(const foreignProp of props){ //Map foreign entity to entity\r\n        const foreignCfg = ModelStateConfig.get(foreignProp);\r\n        entity[foreignCfg.foreignProp] = lookups[foreignProp][entity[foreignCfg.foreignKey]]\r\n    }\r\n}\r\n\r\nfunction _mapChildrenToEntity<T>(\r\n    props: Prop<ModelState>[], \r\n    propCfg: ModelConfig<T>, \r\n    lookups: {[key: string]: Readonly<Object>}, \r\n    entity: T\r\n): void{\r\n    for(let childProp of props){\r\n        const entityId = entity[propCfg.identifier] as any;\r\n        entity[childProp] = lookups[childProp][entityId]\r\n    }\r\n}","import { HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { filter, map, mergeMap, take } from 'rxjs/operators';\r\nimport { ApiUrl } from 'src/app/core/api-url.enum';\r\nimport { Timesheet } from 'src/app/core/models';\r\nimport { ApiService } from 'src/app/core/services/api.service';\r\nimport { DispatchedAction } from 'src/app/state/action-dispatcher';\r\nimport { StateAction } from 'src/app/state/interfaces';\r\nimport { Effect } from 'src/app/state/interfaces/effect.interface';\r\nimport { listenTo } from 'src/app/state/operators/listen-to.operator';\r\nimport { TimesheetCriteria } from '../timesheet-filter/timesheet-criteria.interface';\r\nimport { TimesheetFilter } from '../timesheet-filter/timesheet-filter.model';\r\nimport { SetFetchedTimesheetsActionId } from './set-fetched-timesheets.reducer';\r\n\r\nexport const FetchTimesheetsActionId = \"FETCH_TIMESHEETS\";\r\n\r\nexport interface FetchTimesheetsStateCommand extends StateAction {\r\n    timesheetCriteria: TimesheetCriteria;\r\n}\r\n\r\n@Injectable()\r\nexport class FetchTimesheetsHttpEffect implements Effect<FetchTimesheetsStateCommand> {\r\n\r\n  static baseCriteria: TimesheetCriteria;\r\n\r\n  constructor(private apiService: ApiService){ }\r\n\r\n  handle$(actions$: Observable<DispatchedAction<FetchTimesheetsStateCommand>>): Observable<StateAction> {\r\n    return actions$.pipe(\r\n      listenTo([FetchTimesheetsActionId]),\r\n      filter(x => x.action.timesheetCriteria != null),\r\n      mergeMap(x => this._handle$(x.action))\r\n    )\r\n  }\r\n\r\n  private _handle$(action: FetchTimesheetsStateCommand): Observable<StateAction>{\r\n        const filter = new TimesheetFilter(action.timesheetCriteria);\r\n        console.log(action.timesheetCriteria, FetchTimesheetsHttpEffect.baseCriteria, filter.containedIn(FetchTimesheetsHttpEffect.baseCriteria))\r\n        //If resulting data is already in cache, dont fetch.\r\n        if(filter.containedIn(FetchTimesheetsHttpEffect.baseCriteria)) return of(null);\r\n        \r\n        FetchTimesheetsHttpEffect.baseCriteria = action.timesheetCriteria;\r\n        return this.fetch$(action.timesheetCriteria).pipe(\r\n            take(1),\r\n            map(timesheets => { return { \r\n              actionId: SetFetchedTimesheetsActionId, timesheets \r\n            }})\r\n        )        \r\n  }\r\n    \r\n  private fetch$ = (criteria: TimesheetCriteria): Observable<Timesheet[]> => {\r\n        let params = new HttpParams();\r\n    \r\n        if (criteria.user?.userName) params = params.set(\"UserName\", criteria.user.userName);\r\n    \r\n        if (criteria.dateRange) {\r\n          if (criteria.dateRange.start)\r\n            params = params.set(\r\n              \"StartDate\",\r\n              new Date(criteria.dateRange.start).getTime().toString()\r\n            );\r\n          if (criteria.dateRange.end)\r\n            params = params.set(\r\n              \"EndDate\",\r\n              new Date(criteria.dateRange.end).getTime().toString()\r\n            );\r\n        }\r\n        if (criteria.mission)\r\n          params = params.set(\"MissionId\", criteria.mission.id.toString());\r\n    \r\n        return this.apiService.get(ApiUrl.Timesheet, params)\r\n  };\r\n}"],"sourceRoot":"webpack:///"}