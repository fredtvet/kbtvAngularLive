{"version":3,"sources":["./src/app/mission-modules/mission-image-list/create-mission-images/create-mission-images-state-command.interface.ts","./src/app/mission-modules/mission-image-list/create-mission-images/create-mission-images.http.effect.ts","./src/app/mission-modules/mission-image-list/create-mission-images/create-mission-images.reducer.ts","./src/app/mission-modules/mission-image-list/form-to-create-mission-images-state-command.adapter.ts","./src/app/mission-modules/mission-image-list/mission-image-list.facade.ts","./src/app/mission-modules/mission-image-list/image-viewer/image-viewer.component.html","./src/app/mission-modules/mission-image-list/image-viewer/image-viewer.component.ts","./src/app/mission-modules/mission-image-list/image-viewer/image-viewer-dialog-wrapper.component.ts","./src/app/mission-modules/mission-image-list/mission-image-list/mission-image-list.component.html","./src/app/mission-modules/mission-image-list/mission-image-list/mission-image-list.component.ts","./src/app/mission-modules/mission-image-list/mission-image-list-routing.module.ts","./src/app/mission-modules/mission-image-list/mission-image-list.module.ts"],"names":["CreateMissionImagesActionId","handle$","actions$","pipe","map","x","actionId","propagate","request","createHttpRequest","action","stateSnapshot","command","apiUrl","missionId","body","this","createHttpBody","method","cancelMessage","fileWrappers","length","httpData","FormData","i","file","modifiedFile","append","name","CreateMissionImagesHttpEffect","CreateMissionImagesReducer","stateProperties","reducerFn","state","console","error","entities","wrapper","push","id","fileName","temp_localFileUrl","URL","createObjectURL","missionImages","input","files","notificationService","store","getByMissionId$","select$","relationCfg","mission","add","notify","title","type","dispatch","delete","stateProp","mailImages","toEmail","ids","MissionImageListFacade","menuService","toolbarHidden","currentImageChanged","closed","close","emit","openBottomSheet","open","actions","ngOnInit","currentImage","index","images","findIndex","changeCurrentImage","image","nextImage","previousImage","ImageViewerComponent","confirmService","downloaderService","facade","dialogRef","data","downloadImage","downloadUrl","openConfirmDeleteDialog","confirmText","confirmCallback","deleteCurrentImage","text","icon","callback","allowedRoles","Leder","ImageViewerDialogWrapperComponent","routes","path","component","deviceInfoService","formService","dialog","route","router","vm$","combineLatest","isXs$","currentFabs$","tap","isXs","fabs","navConfig","uploadImages","openImageInput","window","navigator","onLine","OnlineRequired","imageInput","nativeElement","click","deleteSelectedImages","currentSelections","selectableList","clearSelections","openMailImageSheet","formConfig","initialValue","email","employer","submitCallback","val","openBottomSheetMenu","Authority","downloadImages","params","imgs","downloadUrls","onBack","navigate","relativeTo","parent","backFn","buttons","staticFabs","aria","color","Internal","selectedItemsFabs","snapshot","openImageViewer","width","height","panelClass","MissionImageListComponent","MissionImageListRoutingModule","forChild","MissionImageListModule","provide","useValue","multi","useClass"],"mappings":"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","file":"22.597630544155f9774056.js","sourcesContent":["import { ModelFileWrapper } from 'src/app/model/model-file.wrapper';\r\nimport { StateAction } from 'src/app/state/interfaces';\r\n\r\nexport const CreateMissionImagesActionId = \"CREATE_MISSION_IMAGES\";\r\n\r\nexport interface CreateMissionImagesStateCommand extends StateAction {\r\n    fileWrappers: ModelFileWrapper[];\r\n    missionId: string;\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ApiUrl } from 'src/app/core/api-url.enum';\r\nimport { HttpRequest } from 'src/app/core/services/http/interfaces';\r\nimport { HttpActionId, HttpCommand } from 'src/app/core/services/http/state/http.effect';\r\nimport { DispatchedAction } from 'src/app/state/action-dispatcher';\r\nimport { StateAction } from 'src/app/state/interfaces';\r\nimport { Effect } from 'src/app/state/interfaces/effect.interface';\r\nimport { listenTo } from 'src/app/state/operators/listen-to.operator';\r\nimport { CreateMissionImagesActionId, CreateMissionImagesStateCommand } from './create-mission-images-state-command.interface';\r\n\r\n@Injectable()\r\nexport class CreateMissionImagesHttpEffect implements Effect<CreateMissionImagesStateCommand>{\r\n\r\n    constructor(){ }\r\n\r\n    handle$(actions$: Observable<DispatchedAction<CreateMissionImagesStateCommand>>): Observable<StateAction> {\r\n        return actions$.pipe(\r\n            listenTo([CreateMissionImagesActionId]),\r\n            map(x => { return <HttpCommand>{\r\n                actionId: HttpActionId, propagate: true,\r\n                request: this.createHttpRequest(x.action),\r\n                stateSnapshot: x.stateSnapshot,\r\n            }}),        \r\n        )\r\n    }\r\n\r\n    private createHttpRequest(command: CreateMissionImagesStateCommand): HttpRequest{\r\n        return {\r\n            apiUrl: `${ApiUrl.MissionImage}?missionId=${command.missionId}`,\r\n            body: this.createHttpBody(command),\r\n            method: \"POST\",\r\n            cancelMessage: `Oppretting av ${command.fileWrappers.length} bilder på oppdrag ${command.missionId} er reversert.`\r\n        }\r\n    }\r\n\r\n    private createHttpBody(command: CreateMissionImagesStateCommand): any {\r\n        const httpData: FormData = new FormData();\r\n        for(let i = 0; i < command.fileWrappers.length; i++){\r\n            const file = command.fileWrappers[i].modifiedFile;\r\n            httpData.append('file', file, file.name);\r\n        }\r\n        return httpData;\r\n    }\r\n\r\n}","import { MissionImage } from 'src/app/core/models';\r\nimport { _addOrUpdateRange } from 'src/app/shared-app/helpers/array/add-or-update-range.helper';\r\nimport { Reducer, StateMissionImages } from 'src/app/state/interfaces';\r\nimport { CreateMissionImagesActionId, CreateMissionImagesStateCommand } from './create-mission-images-state-command.interface';\r\n\r\nexport const CreateMissionImagesReducer: Reducer<StateMissionImages> = {\r\n    actionId: CreateMissionImagesActionId,\r\n    stateProperties: [\"missionImages\"],\r\n    reducerFn: _reducerFn,\r\n}\r\n\r\nfunction _reducerFn(state: StateMissionImages, action: CreateMissionImagesStateCommand): StateMissionImages{  \r\n    if(!action.fileWrappers || !action.missionId) \r\n        console.error('no files or missionId provided');\r\n\r\n    const entities: MissionImage[] = [];\r\n    for(let i = 0; i < action.fileWrappers.length; i++){\r\n        const wrapper = action.fileWrappers[i];\r\n        const file = wrapper.modifiedFile;\r\n        entities.push({\r\n            id: wrapper.id, \r\n            missionId: action.missionId, \r\n            fileName: wrapper.modifiedFile.name,\r\n            temp_localFileUrl: URL.createObjectURL(file)\r\n        })\r\n    }\r\n    state.missionImages = _addOrUpdateRange(state.missionImages, entities, \"id\");\r\n    return state;\r\n}","import { ModelFileWrapper } from 'src/app/model/model-file.wrapper';\r\nimport { _idGenerator } from 'src/app/shared-app/helpers/id/id-generator.helper';\r\nimport { CreateMissionImagesActionId, CreateMissionImagesStateCommand } from './create-mission-images/create-mission-images-state-command.interface';\r\n\r\nexport interface CreateMissionImagesForm { missionId: string, files: FileList }\r\n\r\nexport class FormToCreateMissionImagesStateCommandAdapter implements CreateMissionImagesStateCommand{\r\n\r\n    actionId: string = CreateMissionImagesActionId;\r\n    missionId: string;\r\n    fileWrappers: ModelFileWrapper[] = [];\r\n\r\n    constructor(input: CreateMissionImagesForm){\r\n        this.missionId = input.missionId;\r\n        for(let i = 0; i < input.files.length; i++){\r\n            this.fileWrappers.push(new ModelFileWrapper(input.files[i], _idGenerator()));\r\n        }\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from 'rxjs/operators';\r\nimport { Mission, MissionImage } from \"src/app/core/models\";\r\nimport { GetWithRelationsConfig } from 'src/app/model/helpers/get-with-relations.config';\r\nimport { _getWithRelations } from 'src/app/model/helpers/get-with-relations.helper';\r\nimport { DeleteModelActionId } from 'src/app/model/state/delete-model/delete-model-action.const';\r\nimport { MailModelsStateCommand, MailModelsActionId } from 'src/app/model/state/mail-models/mail-models-state-command.interface';\r\nimport { NotificationService, NotificationType } from 'src/app/notification';\r\nimport { _validateFileExtension } from 'src/app/shared-app/helpers/validate-file-extension.helper';\r\nimport { ImageFileExtensions } from 'src/app/shared/constants/image-file-extensions.const';\r\nimport { Store } from 'src/app/state/store';\r\nimport { CreateMissionImagesForm, FormToCreateMissionImagesStateCommandAdapter } from './form-to-create-mission-images-state-command.adapter';\r\nimport { StoreState } from './store-state';\r\n\r\n@Injectable({providedIn: 'any'})\r\nexport class MissionImageListFacade {\r\n\r\n  mission: Mission;\r\n\r\n  constructor(\r\n    private notificationService: NotificationService,     \r\n    private store: Store<StoreState>\r\n  ) { }\r\n\r\n  getByMissionId$ = (id: string): Observable<MissionImage[]> => \r\n    this.store.select$([\"missions\", \"employers\", \"missionImages\"]).pipe(map(state => {\r\n      const relationCfg = new GetWithRelationsConfig(\"missions\", [\"missionImages\"], [\"employers\"]);\r\n      let mission = _getWithRelations<Mission>(state, relationCfg, id);\r\n      this.mission = mission;\r\n      return mission?.missionImages;\r\n    }))\r\n \r\n  add = (state: CreateMissionImagesForm): void =>{\r\n    for(var  i = 0; i < state.files.length; i++){\r\n      if(_validateFileExtension(state.files[i], ImageFileExtensions)) continue;\r\n      return this.notificationService.notify(\r\n        {title: \"Filtype ikke tillatt for en eller flere filer\", type: NotificationType.Error}\r\n      );  \r\n    }\r\n    this.store.dispatch(new FormToCreateMissionImagesStateCommandAdapter(state));\r\n  }\r\n  \r\n  delete = (command: {ids?: string[], id?: string}): void => \r\n    this.store.dispatch({\r\n      ...command, \r\n      stateProp: \"missionImages\", \r\n      actionId: DeleteModelActionId\r\n    });\r\n\r\n  mailImages = (toEmail: string, ids: string[]): void => \r\n    this.store.dispatch<MailModelsStateCommand>({\r\n      toEmail, ids, \r\n      stateProp: \"missionImages\",\r\n      actionId: MailModelsActionId \r\n    })\r\n  \r\n}","<mat-toolbar class=\"overlay_container image_toolbar\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\" \r\n    [fxHide]=\"toolbarHidden\">\r\n    <button mat-icon-button aria-label=\"Lukk\" (click)=\"close()\">\r\n        <mat-icon class=\"scale-150\">chevron_left</mat-icon>\r\n    </button>\r\n    <button mat-icon-button (click)=\"openBottomSheet()\"><mat-icon>more_vert</mat-icon></button>\r\n</mat-toolbar>\r\n\r\n<img *ngIf=\"currentImage\" alt=\"oppdragsbilde\"\r\n  (tap)=\"toolbarHidden = !toolbarHidden\" \r\n  (swiperight)=\"previousImage()\" \r\n  (swipeleft)=\"nextImage()\" \r\n  [src]=\"currentImage | appFileUrl: 'images'\" layout-fill/>\r\n\r\n<mat-toolbar class=\"overlay_container page_counter\" [fxHide]=\"toolbarHidden\">\r\n  <h5>{{ index + 1 }} / {{ images.length }}</h5>\r\n</mat-toolbar>\r\n\r\n\r\n\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { ModelFile } from 'src/app/core/models';\r\nimport { BottomSheetMenuService } from 'src/app/core/services/ui/bottom-sheet-menu.service';\r\nimport { AppButton } from 'src/app/shared-app/interfaces';\r\nimport { MainTopNavConfig } from 'src/app/shared/components/main-top-nav-bar/main-top-nav.config';\r\n\r\n@Component({\r\n  selector: 'app-image-viewer',\r\n  templateUrl: './image-viewer.component.html',\r\n  styleUrls: ['./image-viewer.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class ImageViewerComponent {\r\n  toolbarHidden = false;\r\n\r\n  @Input() images: ModelFile[];\r\n  @Input() currentImage: ModelFile;\r\n  @Input() actions: AppButton[];\r\n  \r\n  @Output() currentImageChanged = new EventEmitter();\r\n  @Output() closed = new EventEmitter();\r\n\r\n  index: number;\r\n\r\n  constructor(private menuService: BottomSheetMenuService){};\r\n\r\n  ngOnInit() {\r\n    if(this.currentImage)\r\n      this.index = this.images.findIndex(x => x.id == this.currentImage.id);\r\n    // this.currentImage = this.images[this.index];\r\n  }\r\n\r\n  changeCurrentImage(image: ModelFile){\r\n    this.currentImage = image;\r\n    this.currentImageChanged.emit(image);\r\n  }\r\n\r\n  nextImage(){\r\n    if(this.index >= this.images.length - 1) return null;\r\n    this.index++\r\n    this.changeCurrentImage(this.images[this.index]);\r\n  }\r\n\r\n  previousImage(){\r\n    if(this.index <= 0) return null\r\n    this.index--;\r\n    this.changeCurrentImage(this.images[this.index]);\r\n  }\r\n\r\n  close = () => this.closed.emit();\r\n\r\n  openBottomSheet = () => this.menuService.open(this.actions);\r\n  \r\n}\r\n","import { ChangeDetectionStrategy, Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ModelFile } from 'src/app/core/models';\r\nimport { DownloaderService } from 'src/app/core/services/downloader.service';\r\nimport { ConfirmDialogService } from 'src/app/core/services/ui/confirm-dialog.service';\r\nimport { Roles } from 'src/app/shared-app/enums';\r\nimport { _appFileUrl } from 'src/app/shared-app/helpers/app-file-url.helper';\r\nimport { MissionImageListFacade } from '../mission-image-list.facade';\r\n\r\n@Component({\r\n  selector: 'app-timesheet-card-dialog-wrapper',\r\n  template: `\r\n  <app-image-viewer\r\n    [images]=\"data.images\" \r\n    [currentImage]=\"data.currentImage\"\r\n    [actions]=\"actions\"\r\n    (currentImageChanged)=\"data.currentImage = $event\"\r\n    (closed)=\"close()\">\r\n  </app-image-viewer>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class ImageViewerDialogWrapperComponent {\r\n\r\n  get actions(){\r\n    return [\r\n      {text: \"Last ned bilde\", icon: \"cloud_download\", callback: this.downloadImage},\r\n      {text: \"Slett bilde\", icon: \"delete\", callback: this.openConfirmDeleteDialog, allowedRoles: [Roles.Leder]}\r\n    ];\r\n  }\r\n\r\n  constructor( \r\n    private confirmService: ConfirmDialogService,\r\n    private downloaderService: DownloaderService,\r\n    private facade: MissionImageListFacade,\r\n    private dialogRef: MatDialogRef<ImageViewerDialogWrapperComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: {images: ModelFile[], currentImage: ModelFile}\r\n    ) {}\r\n\r\n    close = () => this.dialogRef.close();\r\n    \r\n    private deleteCurrentImage(): void{\r\n      this.dialogRef.close();\r\n      this.facade.delete({id: this.data.currentImage.id});\r\n    }\r\n    \r\n    private downloadImage = () => \r\n      this.downloaderService.downloadUrl(_appFileUrl(this.data.currentImage.fileName, \"images\"))\r\n    \r\n    private openConfirmDeleteDialog = () => {  \r\n      this.confirmService.open({\r\n        title: 'Slett bilde?', \r\n        confirmText: 'Slett',\r\n        confirmCallback: () => this.deleteCurrentImage()\r\n      });\r\n    }\r\n  \r\n}\r\n","<app-main-skeleton *ngIf=\"vm$ | async; let vm\" [fabs]=\"vm.fabs\" overlayMode=\"true\">\r\n\r\n    <app-main-top-nav-bar navbar [config]=\"vm.navConfig\" >\r\n    </app-main-top-nav-bar>\r\n\r\n    <app-selectable-list #selectableList \r\n        *ngIf=\"vm.images\" identifier=\"id\" selectedText=\"Bilde valgt\"\r\n        [totalRows]=\"vm.isXs ? 2 : 4\"\r\n        [entities]=\"vm.images\" \r\n        [itemTemplate]=\"imgTemplate\"\r\n        (selectionChanged)=\"onSelectionChange($event)\"\r\n        (itemClicked)=\"openImageViewer($event, vm.images)\">\r\n    </app-selectable-list>\r\n</app-main-skeleton>\r\n\r\n<ng-template #imgTemplate let-entity>\r\n        <img appImageErrorReloader class=\"entity-card\"  alt=\"oppdragsbilde\"\r\n        [src]=\"entity | appFileUrl: 'thumbnails'\"/> \r\n</ng-template>\r\n\r\n<input type=\"file\" style=\"display:none\" multiple #imageInput (change)=\"uploadImages($event.target.files)\">","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild } from \"@angular/core\";\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { map, tap } from \"rxjs/operators\";\r\nimport { MissionImage, ModelFile } from 'src/app/core/models';\r\nimport { DeviceInfoService } from 'src/app/core/services/device-info.service';\r\nimport { DownloaderService } from 'src/app/core/services/downloader.service';\r\nimport { BottomSheetMenuService } from 'src/app/core/services/ui/bottom-sheet-menu.service';\r\nimport { ConfirmDialogService } from 'src/app/core/services/ui/confirm-dialog.service';\r\nimport { NotificationService } from 'src/app/notification';\r\nimport { AppNotifications } from 'src/app/shared-app/const/app-notifications.const';\r\nimport { RolePresets, Roles } from 'src/app/shared-app/enums';\r\nimport { _appFileUrl } from 'src/app/shared-app/helpers/app-file-url.helper';\r\nimport { AppButton } from 'src/app/shared-app/interfaces';\r\nimport { SelectableListContainerComponent } from 'src/app/shared/components/abstracts/selectable-list-container.component';\r\nimport { MainTopNavConfig } from 'src/app/shared/components/main-top-nav-bar/main-top-nav.config';\r\nimport { EmailForm } from 'src/app/shared/constants/forms/email-form.const';\r\nimport { FormService } from 'src/app/shared/form';\r\nimport { ImageViewerDialogWrapperComponent } from '../image-viewer/image-viewer-dialog-wrapper.component';\r\nimport { MissionImageListFacade } from '../mission-image-list.facade';\r\n\r\ninterface ViewModel { images: MissionImage[], isXs: boolean,  fabs: AppButton[], navConfig: MainTopNavConfig }\r\n\r\n@Component({\r\n  selector: \"app-mission-image-list\",\r\n  templateUrl: \"./mission-image-list.component.html\",\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MissionImageListComponent extends SelectableListContainerComponent{\r\n  @ViewChild('imageInput') imageInput: ElementRef<HTMLElement>;\r\n\r\n  get missionId() { return this.route.parent.parent.snapshot.params.id }\r\n  \r\n  vm$: Observable<ViewModel> = combineLatest([\r\n    this.facade.getByMissionId$(this.missionId),\r\n    this.deviceInfoService.isXs$,\r\n    this.currentFabs$\r\n  ]).pipe(\r\n    tap(x => this.images = x[0]),\r\n    map(([images, isXs, fabs]) => { return { \r\n      images, isXs, fabs, navConfig: this.navConfig\r\n    }})\r\n  )\r\n\r\n  private navConfig: MainTopNavConfig;\r\n\r\n  private images: MissionImage[];\r\n\r\n  constructor( \r\n    private downloaderService: DownloaderService,\r\n    private deviceInfoService: DeviceInfoService,\r\n    private menuService: BottomSheetMenuService,\r\n    private formService: FormService,\r\n    private confirmService: ConfirmDialogService,\r\n    private dialog: MatDialog,\r\n    private facade: MissionImageListFacade,\r\n    private route: ActivatedRoute,\r\n    private notificationService: NotificationService,\r\n    private router: Router) {\r\n      super();\r\n      this.navConfig = {\r\n        title:  \"Bilder\",\r\n        backFn: this.onBack,\r\n        buttons: [{icon: \"more_vert\", callback: this.openBottomSheetMenu}],\r\n      }\r\n\r\n      this.staticFabs = [\r\n        {icon: \"camera_enhance\", aria: 'Ta bilde', color: 'accent', callback: this.openImageInput, allowedRoles: RolePresets.Internal}\r\n      ];\r\n\r\n      this.selectedItemsFabs = [\r\n        {icon: \"send\", aria: 'Send', color: 'accent', callback: this.openMailImageSheet, allowedRoles: [Roles.Leder]}, \r\n        {icon: \"delete_forever\", aria: 'Slett', color: 'warn', callback: this.openConfirmDeleteDialog, allowedRoles: [Roles.Leder]}\r\n      ]\r\n    }\r\n\r\n  openImageViewer(image: ModelFile, images: ModelFile[]) {\r\n    this.dialog.open(ImageViewerDialogWrapperComponent, {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      panelClass: \"image_viewer_dialog\",\r\n      data: {currentImage: image, images},\r\n    });\r\n  }\r\n\r\n  uploadImages = (files: FileList): void => \r\n    this.facade.add({missionId: this.missionId, files});\r\n  \r\n  private openImageInput = (): void =>{ \r\n    if(!window.navigator.onLine)\r\n      return this.notificationService.notify(AppNotifications.OnlineRequired)\r\n    \r\n    this.imageInput.nativeElement.click()\r\n  };\r\n\r\n  private deleteSelectedImages = () => {\r\n    this.currentSelections;\r\n    this.facade.delete({ids: this.currentSelections});     \r\n    this.selectableList.clearSelections();\r\n  }\r\n\r\n  private  openConfirmDeleteDialog = () => {   \r\n    this.confirmService.open({\r\n      title: \"Slett utvalgte bilder?\",\r\n      confirmText: 'Slett',\r\n      confirmCallback: this.deleteSelectedImages\r\n    })\r\n  }\r\n  \r\n  private openMailImageSheet = () => {\r\n    this.formService.open({\r\n      formConfig: {...EmailForm, initialValue: {email: this.facade.mission?.employer?.email }}, \r\n      navConfig: {title: \"Send bilder\"},\r\n      submitCallback: (val: EmailForm) => { \r\n        this.facade.mailImages(val.email, this.currentSelections);\r\n        this.selectableList.clearSelections();\r\n      },\r\n    })\r\n  }\r\n\r\n  private openBottomSheetMenu = () => {   \r\n    this.menuService.open([\r\n      {icon:'send', text:'Send alle bilder', callback: this.openMailImageSheet, allowedRoles: RolePresets.Authority},\r\n      {icon: \"cloud_download\", text: \"Last ned alle\", callback: this.downloadImages, params: [this.images]},\r\n    ]);\r\n  }\r\n\r\n  private downloadImages = (imgs: MissionImage[]) => \r\n    this.downloaderService.downloadUrls(imgs.map(x => _appFileUrl(x.fileName, \"images\")));\r\n\r\n  private onBack = () => this.router.navigate(['../'], {relativeTo: this.route.parent});\r\n  \r\n \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MissionImageListComponent } from './mission-image-list/mission-image-list.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MissionImageListComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MissionImageListRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { DeleteModelProviders, MailModelsProviders } from 'src/app/model/state/providers.const';\r\nimport { ModelFormModule } from 'src/app/shared/model-form/model-form.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { STORE_EFFECTS, STORE_REDUCERS } from 'src/app/state/injection-tokens';\r\nimport { StateModule } from 'src/app/state/state.module';\r\nimport { CreateMissionImagesHttpEffect } from './create-mission-images/create-mission-images.http.effect';\r\nimport { CreateMissionImagesReducer } from './create-mission-images/create-mission-images.reducer';\r\nimport { ImageViewerDialogWrapperComponent } from './image-viewer/image-viewer-dialog-wrapper.component';\r\nimport { ImageViewerComponent } from './image-viewer/image-viewer.component';\r\nimport { MissionImageListRoutingModule } from './mission-image-list-routing.module';\r\nimport { MissionImageListComponent } from './mission-image-list/mission-image-list.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MissionImageListComponent,\r\n    ImageViewerDialogWrapperComponent,\r\n    ImageViewerComponent,\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    StateModule,\r\n    ModelFormModule,\r\n    MissionImageListRoutingModule,\r\n  ],\r\n  providers:[\r\n    { provide: STORE_REDUCERS, useValue: CreateMissionImagesReducer, multi: true},\r\n    { provide: STORE_EFFECTS, useClass: CreateMissionImagesHttpEffect, multi: true},\r\n    ...MailModelsProviders\r\n  ]\r\n})\r\nexport class MissionImageListModule {}\r\n"],"sourceRoot":"webpack:///"}