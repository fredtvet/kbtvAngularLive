{"version":3,"sources":["./src/app/timesheet-modules/shared-timesheet/state/set-fetched-timesheets.reducer.ts","./src/app/timesheet-modules/shared-timesheet/state/save-user-timesheet/save-user-timesheet-command.interface.ts","./src/app/shared-app/helpers/datetime/get-first-day-of-week.helper.ts","./src/app/timesheet-modules/shared-timesheet/timesheet-filter/timesheet-filter.model.ts","./src/app/timesheet-modules/shared-timesheet/state/save-user-timesheet/save-user-timesheet.http.effect.ts","./src/app/timesheet-modules/shared-timesheet/state/save-user-timesheet/save-user-timesheet.reducer.ts","./src/app/shared-app/helpers/datetime/get-total-hours.helper.ts","./src/app/timesheet-modules/shared-timesheet/state/providers.const.ts","./src/app/timesheet-modules/shared-timesheet/shared-timesheet.module.ts","./src/app/shared-app/helpers/datetime/get-last-day-of-year.helper.ts","./src/app/shared-app/helpers/datetime/get-year-range.helper.ts","./src/app/shared-app/helpers/datetime/get-first-day-of-year.helper.ts","./src/app/shared/components/dynamic-form-questions/ion-date-time-question.component.ts","./src/app/shared-app/helpers/datetime/get-week-range.helper.ts","./src/app/shared-app/helpers/datetime/get-last-day-of-week.helper.ts","./src/app/model/helpers/get-range-with-relations.helper.ts","./src/app/timesheet-modules/shared-timesheet/state/fetch-timesheets.http.effect.ts"],"names":["SetFetchedTimesheetsActionId","SetFetchedTimesheetsReducer","actionId","stateProperties","reducerFn","state","action","relationCfg","timesheets","missions","SaveUserTimesheetActionId","_getFirstDayOfWeek","date","Date","day","getDay","getFullYear","getMonth","getDate","criteria","maxChecks","addChecks","record","exp","this","dateRange","status","user","userName","start","end","startTime","getStartOfDayTime","mission","missionId","id","containedIn","baseCriteria","isDateRangeContainedIn","prop","baseValue","value","isObjectContainedIn","modelCfg","getBy","identifier","baseDateRange","newDate","setHours","getTime","handle$","actions$","pipe","map","x","propagate","request","createHttpRequest","stateSnapshot","SaveUserTimesheetHttpEffect","SaveUserTimesheetReducer","first","last","inputTimesheet","entity","modifiedTimesheet","Open","currentUser","totalHours","endTime","Math","round","abs","SaveUserTimesheetProviders","provide","useClass","multi","useValue","FetchTimesheetProviders","SharedTimesheetModule","_getLastDayOfYear","_getYearRange","getISO","_getFirstDayOfYear","toISOString","validationErrorMessages","dayNames","dayShortNames","monthNames","monthShortNames","onChange","val","question","valueSetter","control","overrideValueSetterControl","form","get","setValue","markAsDirty","onQuestionChanges","value$","valueChanges","min$","setMinMax","max$","type","observer","IonDateQuestionComponent","_getWeekRange","_getLastDayOfWeek","_getRangeWithRelations","cfg","filter","modelProp","modelState","length","hasChildren","includedChildProps","hasForeigns","includedForeignProps","foreignLookups","props","lookups","_createStatePropertyLookups","childLookups","groupBy","_createGroupedLookups","foreignKey","i","_mapForeignsToEntity","_mapChildrenToEntity","foreignProp","foreignCfg","propCfg","childProp","FetchTimesheetsActionId","apiService","fetch$","params","set","toString","timesheetCriteria","_handle$","console","log","FetchTimesheetsHttpEffect"],"mappings":"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","file":"14.2817481f415164277c7b.js","sourcesContent":["import { Timesheet } from 'src/app/core/models';\r\nimport { _getRangeWithRelations } from 'src/app/model/helpers/get-range-with-relations.helper';\r\nimport { GetWithRelationsConfig } from 'src/app/model/helpers/get-with-relations.config';\r\nimport { _addOrUpdateRange } from 'src/app/shared-app/helpers/array/add-or-update-range.helper';\r\nimport { Reducer, StateAction, StateMissions, StateTimesheets } from 'src/app/state/interfaces';\r\n\r\nexport const SetFetchedTimesheetsActionId = \"SET_FETCHED_TIMESHEETS\";\r\n\r\nexport interface SetFetchedTimesheetsCommand extends StateAction {\r\n    timesheets: Timesheet[];\r\n}\r\n\r\ntype State = StateTimesheets & StateMissions;\r\n\r\nexport const SetFetchedTimesheetsReducer: Reducer<State> = {\r\n    actionId: SetFetchedTimesheetsActionId,\r\n    stateProperties: [\"timesheets\", \"missions\"],\r\n    reducerFn: (state: State, action: SetFetchedTimesheetsCommand) => {\r\n        \r\n        const relationCfg = new GetWithRelationsConfig(\"timesheets\", null, [\"missions\"]);\r\n\r\n        const timesheets = _getRangeWithRelations({\r\n            timesheets: action.timesheets, \r\n            missions: state.missions\r\n        }, relationCfg);\r\n\r\n        state.timesheets = _addOrUpdateRange(state.timesheets, timesheets, \"id\");\r\n\r\n        return state;\r\n    }\r\n        \r\n}  \r\n","import { Timesheet } from 'src/app/core/models';\r\nimport { SaveModelStateCommand } from 'src/app/model/state/save-model/save-model-action.const';\r\n\r\nexport const SaveUserTimesheetActionId = \"SAVE_USER_TIMESHEET\"\r\n\r\nexport interface SaveUserTimesheetCommand extends SaveModelStateCommand<Timesheet>{\r\n    password: string;\r\n}","export function _getFirstDayOfWeek(date: Date = new Date()): Date  {\r\n    let day = date.getDay();\r\n    return new Date(\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate() + (day == 0 ? -6 : 1) - day\r\n    );\r\n  }","import { Timesheet } from 'src/app/core/models';\r\nimport { ModelStateConfig } from 'src/app/model/model-state.config';\r\nimport { DataFilter } from 'src/app/shared/data.filter';\r\nimport { DateRange } from 'src/app/shared/interfaces/date-range.interface';\r\nimport { TimesheetCriteria } from './timesheet-criteria.interface';\r\n\r\nexport class TimesheetFilter extends DataFilter<Timesheet, TimesheetCriteria>{\r\n\r\n    constructor(criteria: TimesheetCriteria, maxChecks?: number){ super(criteria, maxChecks);}\r\n\r\n    protected addChecks(record: Timesheet): boolean {\r\n        let exp = true;\r\n        if(!this.criteria.dateRange) return false;\r\n        if(this.criteria.status){\r\n            exp = exp && record.status === this.criteria.status;\r\n        }\r\n        if(this.criteria.user?.userName)\r\n            exp = exp && record.userName === this.criteria.user.userName;\r\n\r\n        if(this.criteria.dateRange && this.criteria.dateRange.start && this.criteria.dateRange.end) {\r\n            let startTime = this.getStartOfDayTime(record.startTime);\r\n            exp = exp && startTime >= this.getStartOfDayTime(this.criteria.dateRange.start) \r\n                && startTime <= this.getStartOfDayTime(this.criteria.dateRange.end); \r\n        }\r\n    \r\n        if(this.criteria.mission) \r\n            exp = exp && record.missionId === this.criteria.mission.id;  \r\n    \r\n        return exp\r\n    }\r\n\r\n    //Check if criteria is contained in base, meaning all potential timesheets has already been fetched. \r\n    containedIn(baseCriteria: TimesheetCriteria): boolean{\r\n        if(!this.criteria) return true;\r\n        if(!baseCriteria) return false;\r\n        if(!this.isDateRangeContainedIn(baseCriteria.dateRange)) return false;\r\n        for(const prop in baseCriteria){\r\n            if(prop === \"dateRange\" || prop === \"dateRangePreset\") continue;\r\n            const baseValue = baseCriteria[prop];\r\n            if(!baseValue) continue; \r\n            const value =  this.criteria[prop];\r\n            if(value && typeof value === \"object\") {\r\n                if(!this.isObjectContainedIn(baseValue, prop)) return false;\r\n            }\r\n            else if(value !== baseValue) return false;     \r\n        }\r\n        return true;\r\n    }\r\n    \r\n    private isObjectContainedIn(baseValue: Object, prop: string){\r\n        const modelCfg = ModelStateConfig.getBy(prop, \"foreignProp\");\r\n        const value = this.criteria[prop];\r\n\r\n        if(modelCfg && value[modelCfg.identifier] !== baseValue[modelCfg.identifier]) \r\n            return false\r\n\r\n        else if(!modelCfg && value !== baseValue) return false;\r\n        \r\n        return true\r\n    }\r\n\r\n    private isDateRangeContainedIn(baseDateRange: DateRange): boolean{\r\n        if(!baseDateRange || !baseDateRange.end || !baseDateRange.start) return false; //No range means all, in which it will always be contained. \r\n        const dateRange = this.criteria.dateRange;\r\n        if(!dateRange || !dateRange.start || !dateRange.end) return true; \r\n        return (this.getStartOfDayTime(baseDateRange.start) <= this.getStartOfDayTime(dateRange.start)) && \r\n        (this.getStartOfDayTime(baseDateRange.end) >= this.getStartOfDayTime(dateRange.end))\r\n    }\r\n\r\n    private getStartOfDayTime(date: Date | string | number): number{\r\n        if(!date) return\r\n        const newDate = new Date(date);\r\n        newDate.setHours(0,0,0,0);\r\n        return newDate.getTime();\r\n    }\r\n\r\n};","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Model } from 'src/app/core/models';\r\nimport { HttpActionId, HttpCommand } from 'src/app/core/services/http/state/http.effect';\r\nimport { SaveModelStateCommand } from 'src/app/model/state/save-model/save-model-action.const';\r\nimport { SaveModelHttpEffect } from 'src/app/model/state/save-model/save-model.http.effect';\r\nimport { DispatchedAction } from 'src/app/state/action-dispatcher';\r\nimport { StateAction } from 'src/app/state/interfaces';\r\nimport { Effect } from 'src/app/state/interfaces/effect.interface';\r\nimport { listenTo } from 'src/app/state/operators/listen-to.operator';\r\nimport { SaveUserTimesheetActionId, SaveUserTimesheetCommand } from './save-user-timesheet-command.interface';\r\n\r\n@Injectable()\r\nexport class SaveUserTimesheetHttpEffect extends SaveModelHttpEffect implements Effect<SaveUserTimesheetCommand> {\r\n\r\n    constructor(){ super() }\r\n\r\n    handle$(actions$: Observable<DispatchedAction<SaveModelStateCommand<Model>>>): Observable<StateAction> {\r\n        return actions$.pipe(\r\n            listenTo([SaveUserTimesheetActionId]),\r\n            map(x => { return <HttpCommand>{\r\n                actionId: HttpActionId, propagate: true,\r\n                request: super.createHttpRequest(x.action),\r\n                stateSnapshot: x.stateSnapshot\r\n            }}), \r\n        )\r\n    }\r\n}","import { SaveModelReducer } from 'src/app/model/state/save-model/save-model.reducer';\r\nimport { _getTotalHours } from 'src/app/shared-app/helpers/datetime/get-total-hours.helper';\r\nimport { TimesheetStatus } from 'src/app/shared/enums';\r\nimport { Reducer, StateCurrentUser } from 'src/app/state/interfaces';\r\nimport { SaveUserTimesheetActionId, SaveUserTimesheetCommand } from './save-user-timesheet-command.interface';\r\n\r\nexport const SaveUserTimesheetReducer: Reducer<StateCurrentUser> = {\r\n    actionId: SaveUserTimesheetActionId,\r\n    reducerFn: _reducerFn,\r\n    stateProperties: (action:  any) => [\"currentUser\", ...(<Function>SaveModelReducer.stateProperties)(action)],   \r\n}\r\n\r\nfunction _reducerFn(state: any, action: SaveUserTimesheetCommand): Partial<any>{ \r\n    let inputTimesheet = action.entity;\r\n    let modifiedTimesheet = {};\r\n\r\n    if(inputTimesheet)\r\n        modifiedTimesheet = {...inputTimesheet,\r\n            status: TimesheetStatus.Open,\r\n            userName: state?.currentUser?.userName,\r\n            totalHours: _getTotalHours(inputTimesheet.startTime,inputTimesheet.endTime)\r\n        };\r\n        \r\n    action.entity = modifiedTimesheet;\r\n    return SaveModelReducer.reducerFn(state, action)\r\n}","export function _getTotalHours(first: number, last: number): number{\r\n    return Math.round((Math.abs(first - last) / 36e5)* 10) / 10\r\n}","import { Provider } from '@angular/core';\r\nimport { STORE_EFFECTS, STORE_REDUCERS } from 'src/app/state/injection-tokens';\r\nimport { FetchTimesheetsHttpEffect } from './fetch-timesheets.http.effect';\r\nimport { SaveUserTimesheetHttpEffect } from './save-user-timesheet/save-user-timesheet.http.effect';\r\nimport { SaveUserTimesheetReducer } from './save-user-timesheet/save-user-timesheet.reducer';\r\nimport { SetFetchedTimesheetsReducer } from './set-fetched-timesheets.reducer';\r\n\r\nexport const SaveUserTimesheetProviders: Provider[] = [\r\n    {provide: STORE_EFFECTS, useClass: SaveUserTimesheetHttpEffect, multi: true},\r\n    {provide: STORE_REDUCERS, useValue: SaveUserTimesheetReducer, multi: true}\r\n]\r\n\r\nexport const FetchTimesheetProviders: Provider[] = [\r\n    {provide: STORE_EFFECTS, useClass: FetchTimesheetsHttpEffect, multi: true},\r\n    {provide: STORE_REDUCERS, useValue: SetFetchedTimesheetsReducer, multi: true}\r\n]","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { StateModule } from 'src/app/state/state.module';\r\nimport {\r\n  TimesheetCardComponent,\r\n  TimesheetSummaryCardContentComponent\r\n} from './components';\r\nimport { ArrayIncludesPipe, GetDateByDateParamsPipe, ReadableDurationPipe } from './pipes';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TimesheetCardComponent,\r\n    TimesheetSummaryCardContentComponent,\r\n    GetDateByDateParamsPipe,   \r\n    ArrayIncludesPipe,\r\n    ReadableDurationPipe,\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    StateModule,\r\n  ],\r\n  exports: [\r\n    SharedModule,\r\n    TimesheetCardComponent,\r\n    TimesheetSummaryCardContentComponent,\r\n    GetDateByDateParamsPipe,   \r\n    ArrayIncludesPipe,\r\n    ReadableDurationPipe,\r\n  ],\r\n})\r\nexport class SharedTimesheetModule {}\r\n","export function _getLastDayOfYear(date: Date | string | number = new Date()): Date {\r\n    return new Date(new Date(date).getFullYear(), 11, 31, 23, 59, 59);\r\n}","import { DateRange } from 'src/app/shared/interfaces/date-range.interface';\r\nimport { _getFirstDayOfYear } from './get-first-day-of-year.helper';\r\nimport { _getLastDayOfYear } from './get-last-day-of-year.helper';\r\n\r\nexport function _getYearRange(date: Date = new Date(), getISO?: boolean): DateRange {\r\n    const start = _getFirstDayOfYear(date);   \r\n    const end = _getLastDayOfYear(date);\r\n    return {\r\n      start: getISO ? start.toISOString() : start, \r\n      end: getISO ? end.toISOString() : end\r\n    };\r\n}","export function _getFirstDayOfYear(date: Date | string | number = new Date()): Date  {\r\n    return new Date(new Date(date).getFullYear(), 0, 1);\r\n}","import { ChangeDetectionStrategy, Component, Inject } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { filter, startWith } from 'rxjs/operators';\r\nimport { _getControlObserver$ } from 'src/app/dynamic-forms/helpers/get-control-observer.helper';\r\nimport { Question, ControlHook } from 'src/app/dynamic-forms/interfaces';\r\nimport { VALIDATION_ERROR_MESSAGES, ValidationErrorMap } from 'src/app/dynamic-forms/validation-error-map.interface';\r\nimport { BaseQuestionComponent } from '../../../dynamic-forms/components/base-question.component';\r\n\r\nexport interface IonDateQuestion extends Question {\r\n    ionFormat: string;\r\n    datePipeFormat?: string;\r\n    minuteValues?: number[];\r\n    defaultValueGetter?: ((form: any) => string) | string;\r\n    min?: string | ControlHook<string>;\r\n    max?: string | ControlHook<string>;\r\n    valueSetter?: (value: any) => any;\r\n    overrideValueSetterControl?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-ion-date-question',\r\n  template:`\r\n   <div (click)=\"dateTime.click()\" class=\"w-100\" [ngStyle]=\"{'pointer-events': control.disabled ? 'none' : 'auto'}\">\r\n     \r\n      <mat-form-field style=\"pointer-events:none!important;\" class=\"w-100\" [color]=\"question.color || 'accent'\">\r\n        <mat-label *ngIf=\"question.label\">{{ question.label }}</mat-label>\r\n        <input matInput required \r\n          [disabled]=\"control.disabled\" \r\n          [value]=\"question.datePipeFormat ? ((value$ | async) | date : question.datePipeFormat) : (value$ | async)\" \r\n          [placeholder]=\"question.placeholder\" \r\n          [attr.aria-label]=\"question.ariaLabel\">  \r\n            <mat-hint *ngIf=\"question.hint\">{{ question.hint }}</mat-hint>\r\n\r\n            <mat-error *ngIf=\"control.dirty && control.invalid\">\r\n              {{ getValidationErrorMessage() }}\r\n            </mat-error>  \r\n      </mat-form-field>\r\n\r\n      <ion-datetime #dateTime fxHide \r\n        cancel-text=\"Avbryt\" done-text=\"Ferdig\"\r\n        [attr.max]=\"max$ | async\"\r\n        [attr.min]=\"min$ | async\"\r\n        [attr.day-names]=\"dayNames\"\r\n        [attr.day-short-names]=\"dayShortNames\"\r\n        [attr.month-names]=\"monthNames\"\r\n        [attr.month-short-names]=\"monthShortNames\"\r\n        [attr.display-format]=\"question.ionFormat\"\r\n        [attr.minute-values]=\"question.minuteValues\"\r\n        [value]=\"control.value || (question.defaultValueGetter | func : form.value) || question.defaultValueGetter\"\r\n        (ionChange)=\"onChange($event.detail.value);\">\r\n      </ion-datetime>\r\n    </div>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class IonDateQuestionComponent extends BaseQuestionComponent<IonDateQuestion> {\r\n\r\n  dayNames = [\"Søndag\", \"Mandag\", \"Tirsdag\", \"Onsdag\",\"Torsdag\", \"Fredag\", \"Lørdag\"]\r\n  dayShortNames = [\"Søn\", \"Man\", \"Tir\", \"Ons\",\"Tor\", \"Fre\", \"Lør\"]\r\n  monthNames = [\"Januar\", \"Februar\", \"Mars\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Desember\"];\r\n  monthShortNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"Mai\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Des\"]\r\n\r\n  min$: Observable<string>;\r\n  max$: Observable<string>;\r\n\r\n  value$: Observable<string>;\r\n\r\n  constructor(@Inject(VALIDATION_ERROR_MESSAGES) validationErrorMessages: ValidationErrorMap) { \r\n    super(validationErrorMessages) \r\n  }\r\n\r\n  onChange(val: any){\r\n    const value = this.question.valueSetter ? this.question.valueSetter(val) : val;\r\n    let control = this.control;\r\n\r\n    if(this.question.overrideValueSetterControl) \r\n      control = this.form.get(this.question.overrideValueSetterControl)\r\n\r\n    control.setValue(value);  \r\n    control.markAsDirty();\r\n  }\r\n\r\n  protected onQuestionChanges(question: IonDateQuestion): void { \r\n    super.onQuestionChanges(question);\r\n    this.value$ = this.control.valueChanges.pipe(startWith(this.control.value));\r\n    this.min$ = this.setMinMax(question, \"min\");\r\n    this.max$ = this.setMinMax(question, \"max\");\r\n  }\r\n\r\n  private setMinMax(question: IonDateQuestion, type: \"min\" | \"max\"): Observable<string>{\r\n    if(!question) return;\r\n  \r\n    let observer = of(question[type] as string);\r\n    if(typeof question[type] === \"object\") \r\n      observer = _getControlObserver$(question[type] as ControlHook<string>, this.form);   \r\n\r\n    return observer.pipe(filter(x => x != null));   \r\n  }\r\n\r\n}","import { DateRange } from 'src/app/shared/interfaces/date-range.interface';\r\nimport { _getFirstDayOfWeek } from './get-first-day-of-week.helper';\r\nimport { _getLastDayOfWeek } from './get-last-day-of-week.helper';\r\n\r\nexport function _getWeekRange(date: Date = new Date(), getISO?: boolean): DateRange {\r\n    const start = _getFirstDayOfWeek(date);   \r\n    const end = _getLastDayOfWeek(date);\r\n    return {\r\n      start: getISO ? start.toISOString() : start, \r\n      end: getISO ? end.toISOString() : end\r\n    };\r\n}","export function _getLastDayOfWeek(date: Date = new Date()): Date  {\r\n    let day = date.getDay();\r\n    return new Date(\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate() + (day == 0 ? 0 : 7) - day,\r\n      23,59,59\r\n    );\r\n }","import { Model } from 'src/app/core/models/base-entity.interface';\r\nimport { _convertArrayToObject } from 'src/app/shared-app/helpers/array/convert-array-to-object.helper';\r\nimport { _filter } from 'src/app/shared-app/helpers/array/filter.helper';\r\nimport { _groupBy } from 'src/app/shared-app/helpers/array/group-by.helper';\r\nimport { Prop } from 'src/app/shared-app/prop.type';\r\nimport { ModelState } from '../interfaces/model-state.interface';\r\nimport { ModelConfig, ModelStateConfig } from '../model-state.config';\r\nimport { GetWithRelationsConfig } from './get-with-relations.config';\r\n\r\nexport function _getRangeWithRelations<TModel extends Model>(\r\n    state: Readonly<Partial<ModelState>>,\r\n    cfg: GetWithRelationsConfig,\r\n    filter?: (value: TModel, index?: number, Array?: any[]) => boolean, \r\n): TModel[] {\r\n    const modelCfg = ModelStateConfig.get(cfg.modelProp); \r\n\r\n    let modelState = state[cfg.modelProp] as TModel[];\r\n    \r\n    if(filter)\r\n        modelState = _filter(modelState, filter);\r\n\r\n    if(!modelState || modelState.length == 0) return modelState;\r\n\r\n    const hasChildren = cfg.includedChildProps && cfg.includedChildProps.length > 0;      \r\n    const hasForeigns = cfg.includedForeignProps && cfg.includedForeignProps.length > 0;\r\n\r\n    let foreignLookups = {};\r\n    if(hasForeigns)\r\n        foreignLookups = _createStatePropertyLookups(cfg.includedForeignProps, state); \r\n\r\n    let childLookups = {};\r\n    if(hasChildren) \r\n        childLookups = _createGroupedLookups(cfg.includedChildProps, modelCfg.foreignKey, state) \r\n\r\n    if(hasForeigns || hasChildren){\r\n        for(var i = 0; i < modelState.length; i++){\r\n            let entity = modelState[i];                   \r\n                _mapForeignsToEntity(cfg.includedForeignProps, foreignLookups, entity);        \r\n                _mapChildrenToEntity(cfg.includedChildProps, modelCfg, childLookups, entity);\r\n            modelState[i] = entity;\r\n        }\r\n    }\r\n    return modelState\r\n}\r\n\r\n//Lookup of children grouped by foreign key\r\nfunction _createGroupedLookups(\r\n    props: Prop<ModelState>[], \r\n    groupBy: string, state: Object\r\n): {[key: string]: {[key: string]: Object[]}}{\r\n    const lookups = {} as {[key: string]: {[key: string]: Object[]}}\r\n\r\n    for(const prop of props) lookups[prop] = _groupBy(state[prop], groupBy);\r\n        \r\n    return lookups;\r\n}\r\n\r\n//Lookup of foreign entities by identifier\r\nfunction _createStatePropertyLookups(\r\n    props: Prop<ModelState>[], \r\n    state: Readonly<Object>\r\n): {[key: string]: Object}{\r\n    const lookups: {[key: string]: Readonly<Object>} = {};\r\n    for(const prop of props){ //Convert foreign state props to lookup tables\r\n        const cfg = ModelStateConfig.get(prop); \r\n        lookups[prop] = _convertArrayToObject(state[prop], cfg.identifier);\r\n    }\r\n    return lookups;\r\n}\r\n\r\nfunction _mapForeignsToEntity<T>(\r\n    props: Prop<ModelState>[], \r\n    lookups: {[key: string]: Readonly<Object>}, \r\n    entity: T\r\n  ): void{\r\n    for(const foreignProp of props){ //Map foreign entity to entity\r\n        const foreignCfg = ModelStateConfig.get(foreignProp);\r\n        entity[foreignCfg.foreignProp] = lookups[foreignProp][entity[foreignCfg.foreignKey]]\r\n    }\r\n}\r\n\r\nfunction _mapChildrenToEntity<T>(\r\n    props: Prop<ModelState>[], \r\n    propCfg: ModelConfig<T>, \r\n    lookups: {[key: string]: Readonly<Object>}, \r\n    entity: T\r\n): void{\r\n    for(let childProp of props){\r\n        const entityId = entity[propCfg.identifier] as any;\r\n        entity[childProp] = lookups[childProp][entityId]\r\n    }\r\n}","import { HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { filter, map, mergeMap, take } from 'rxjs/operators';\r\nimport { ApiUrl } from 'src/app/core/api-url.enum';\r\nimport { Timesheet } from 'src/app/core/models';\r\nimport { ApiService } from 'src/app/core/services/api.service';\r\nimport { DispatchedAction } from 'src/app/state/action-dispatcher';\r\nimport { StateAction } from 'src/app/state/interfaces';\r\nimport { Effect } from 'src/app/state/interfaces/effect.interface';\r\nimport { listenTo } from 'src/app/state/operators/listen-to.operator';\r\nimport { TimesheetCriteria } from '../timesheet-filter/timesheet-criteria.interface';\r\nimport { TimesheetFilter } from '../timesheet-filter/timesheet-filter.model';\r\nimport { SetFetchedTimesheetsActionId } from './set-fetched-timesheets.reducer';\r\n\r\nexport const FetchTimesheetsActionId = \"FETCH_TIMESHEETS\";\r\n\r\nexport interface FetchTimesheetsStateCommand extends StateAction {\r\n    timesheetCriteria: TimesheetCriteria;\r\n}\r\n\r\n@Injectable()\r\nexport class FetchTimesheetsHttpEffect implements Effect<FetchTimesheetsStateCommand> {\r\n\r\n  static baseCriteria: TimesheetCriteria;\r\n\r\n  constructor(private apiService: ApiService){ }\r\n\r\n  handle$(actions$: Observable<DispatchedAction<FetchTimesheetsStateCommand>>): Observable<StateAction> {\r\n    return actions$.pipe(\r\n      listenTo([FetchTimesheetsActionId]),\r\n      filter(x => x.action.timesheetCriteria != null),\r\n      mergeMap(x => this._handle$(x.action))\r\n    )\r\n  }\r\n\r\n  private _handle$(action: FetchTimesheetsStateCommand): Observable<StateAction>{\r\n        const filter = new TimesheetFilter(action.timesheetCriteria);\r\n        console.log(action.timesheetCriteria, FetchTimesheetsHttpEffect.baseCriteria, filter.containedIn(FetchTimesheetsHttpEffect.baseCriteria))\r\n        //If resulting data is already in cache, dont fetch.\r\n        if(filter.containedIn(FetchTimesheetsHttpEffect.baseCriteria)) return of(null);\r\n        \r\n        FetchTimesheetsHttpEffect.baseCriteria = action.timesheetCriteria;\r\n        return this.fetch$(action.timesheetCriteria).pipe(\r\n            take(1),\r\n            map(timesheets => { return { \r\n              actionId: SetFetchedTimesheetsActionId, timesheets \r\n            }})\r\n        )        \r\n  }\r\n    \r\n  private fetch$ = (criteria: TimesheetCriteria): Observable<Timesheet[]> => {\r\n        let params = new HttpParams();\r\n    \r\n        if (criteria.user?.userName) params = params.set(\"UserName\", criteria.user.userName);\r\n    \r\n        if (criteria.dateRange) {\r\n          if (criteria.dateRange.start)\r\n            params = params.set(\r\n              \"StartDate\",\r\n              new Date(criteria.dateRange.start).getTime().toString()\r\n            );\r\n          if (criteria.dateRange.end)\r\n            params = params.set(\r\n              \"EndDate\",\r\n              new Date(criteria.dateRange.end).getTime().toString()\r\n            );\r\n        }\r\n        if (criteria.mission)\r\n          params = params.set(\"MissionId\", criteria.mission.id.toString());\r\n    \r\n        return this.apiService.get(ApiUrl.Timesheet, params)\r\n  };\r\n}"],"sourceRoot":"webpack:///"}